{"version":3,"sources":["components/Savannah/components/ActiveQuiz/ActiveQuiz.module.scss","components/Savannah/Savannah.module.scss","assets/audio/error.mp3","assets/audio/success.mp3","assets/audio/finish.mp3","components/AudioCallGame/components/GamePage/GamePageView.module.scss","components/AudioCallGame/components/AnswerPanel/AnswerPanelView.module.scss","components/AudioCallGame/components/Button/ButtonView.module.scss","components/Savannah/components/ActiveQuiz/AnswerList/AnswerList.module.scss","helpers/constants.js","helpers/functions.js","redux/actions/auth.js","redux/actions/actionsTypes.js","basicComponents/MenuList/index.js","basicComponents/MenuList/MenuList.jsx","components/Header/HeaderView.jsx","components/Header/index.js","components/TeamMember/index.js","components/TeamMember/TeamMemberView.jsx","basicComponents/Button/index.js","basicComponents/Button/ButtonView.jsx","components/pages/AboutUs/AboutUsPage.jsx","components/pages/AboutUs/index.js","components/pages/LearnWords/helpers/constants.js","components/pages/LearnWords/Views/Header/Header.jsx","components/pages/LearnWords/Views/Header/index.js","helpers/wordsService/dataModels.js","helpers/wordsService/storageModel.js","helpers/wordsService/spacingRepeating.js","helpers/wordsService/index.js","components/pages/LearnWords/Views/StatusBar/StatusBar.jsx","components/pages/LearnWords/Views/StatusBar/index.js","components/pages/LearnWords/helpers/settings.js","components/pages/LearnWords/helpers/style-options.js","components/pages/LearnWords/helpers/index.js","components/pages/LearnWords/Views/SideBar/SideBar.jsx","components/pages/LearnWords/Views/SideBar/index.js","components/pages/LearnWords/Views/CheckedSentence/index.js","components/pages/LearnWords/Views/CheckedSentence/CheckedSentense.jsx","components/pages/LearnWords/Views/Word/index.js","components/pages/LearnWords/Views/Word/Word.jsx","components/pages/LearnWords/Views/WordExtraInfo/index.js","components/pages/LearnWords/Views/WordExtraInfo/WordExtraInfo.jsx","components/pages/LearnWords/Views/SpacingRepeating/SpacingRepeating.jsx","components/pages/LearnWords/Views/SpacingRepeating/index.js","components/pages/LearnWords/Views/WordCard/WordCard.jsx","components/pages/LearnWords/Views/WordCard/index.js","components/pages/LearnWords/LearnWords.jsx","components/pages/LearnWords/index.js","basicComponents/Slider/SliderView.jsx","basicComponents/Slider/index.js","basicComponents/LinearProgress/index.js","basicComponents/LinearProgress/LinearProgressView.jsx","components/LearnWordCardPreview/index.js","components/LearnWordCardPreview/LearnWordCardView.jsx","basicComponents/Checkbox/CheckboxView.jsx","basicComponents/Checkbox/index.js","redux/actions/index.js","components/pages/Settings/index.js","components/pages/Settings/SettingsPage.jsx","components/pages/Statistics/index.js","components/pages/Statistics/StatisticPage.jsx","components/pages/Promo/index.js","components/pages/Promo/PromoPage.jsx","components/GameCard/index.js","components/GameCard/GameCardView.jsx","components/pages/PlayGames/PlayGamesPage.jsx","components/pages/PlayGames/index.js","components/pages/Vocabulary/WordCard/WordCard.jsx","components/pages/Vocabulary/WordCard/index.js","components/pages/Vocabulary/VocabularyPage.jsx","helpers/wordsData.js","components/pages/Vocabulary/index.js","basicComponents/Input/index.js","basicComponents/Input/InputView.jsx","components/pages/SignIn/SignInPage.jsx","components/pages/SignIn/index.js","helpers/userService/axiosUser.js","helpers/userService/index.js","components/pages/SignUp/SignUpPage.jsx","components/pages/SignUp/index.js","components/AudioCallGame/components/Question/QuestionView.jsx","components/AudioCallGame/components/Question/index.js","components/AudioCallGame/components/Answer/index.js","components/AudioCallGame/components/Answer/AnswerView.jsx","components/AudioCallGame/components/AnswerPanel/index.js","components/AudioCallGame/components/AnswerPanel/AnswerPanelView.jsx","components/AudioCallGame/components/Button/index.js","components/AudioCallGame/components/Button/ButtonView.jsx","components/AudioCallGame/components/FinishGameItem/index.js","components/AudioCallGame/components/FinishGameItem/FinishGameItemView.jsx","components/AudioCallGame/components/FinishGamePage/index.js","components/AudioCallGame/components/FinishGamePage/FinishGamePageView.jsx","components/AudioCallGame/components/GamePage/GamePageView.jsx","components/AudioCallGame/mockData.js","components/AudioCallGame/components/GamePage/index.js","components/AudioCallGame/components/StartGamePage/index.js","components/AudioCallGame/components/StartGamePage/StartGamePageView.jsx","components/AudioCallGame/components/Main/MainView.jsx","components/AudioCallGame/components/Main/index.js","components/AudioCallGame/index.js","components/AudioCallGame/AudioCall.jsx","components/Sprint/Components/UI/switch.js","components/Sprint/Components/UI/StartGameForm.js","components/Sprint/Components/StartGame/StartGame.jsx","components/Sprint/Components/StartGame/index.js","components/Sprint/Components/PlayGame/index.js","components/Sprint/Components/PlayGame/PalyGame.jsx","components/Sprint/UI/Table.jsx","components/Sprint/Components/FinishGame/FinishGame.jsx","components/Sprint/Components/FinishGame/index.js","helpers/wordsService/wordsApi.js","components/Sprint/Sprint.jsx","components/Sprint/index.js","components/Savannah/components/Header/Header.jsx","components/Savannah/components/Header/index.js","components/Savannah/components/UI/switch.js","components/Savannah/components/StartPage/StartPage.jsx","components/Savannah/components/StartPage/index.js","components/Savannah/components/FinishPage/ResultList/ResultItem/ResultItem.jsx","components/Savannah/components/FinishPage/ResultList/ResultList.jsx","components/Savannah/components/FinishPage/FInishPage.jsx","components/Savannah/components/FinishPage/index.js","components/Savannah/components/ActiveQuiz/AnswerList/AnswerItem/AnswerItem.jsx","components/Savannah/components/ActiveQuiz/AnswerList/AnswerItem/index.js","components/Savannah/components/ActiveQuiz/AnswerList/index.js","components/Savannah/components/ActiveQuiz/AnswerList/AnswerList.jsx","components/Savannah/components/ActiveQuiz/ActiveQuiz.jsx","components/Savannah/components/ActiveQuiz/index.js","components/Savannah/Savannah.jsx","components/Savannah/index.js","components/games/Unmess/components/StartButton/index.js","components/games/Unmess/components/StartButton/StartButton.jsx","components/games/Unmess/components/Preloader/index.js","components/games/Unmess/components/Preloader/Preloader.jsx","basicComponents/Stepper/Stepper.jsx","basicComponents/Stepper/index.js","components/games/Unmess/helpers/contants.js","components/games/Unmess/components/pages/Start/StartPage.jsx","components/games/Unmess/components/pages/Start/index.js","components/games/Unmess/helpers/remove_tag_from_string.js","basicComponents/Popover/Popover.jsx","basicComponents/Popover/index.js","components/games/Unmess/components/GameTitle/index.js","components/games/Unmess/components/GameTitle/GameTitle.jsx","components/games/Unmess/components/pages/Game/GamePage.jsx","components/games/Unmess/components/pages/Game/index.js","components/games/Unmess/helpers/map_words_objects_to_result_items.js","components/games/Unmess/helpers/map_latest_results_to_items.js","components/games/Unmess/components/pages/Results/index.js","components/games/Unmess/components/pages/Results/ResultsPage.jsx","components/games/Unmess/helpers/get_date.js","components/games/Unmess/components/pages/LatestResults/index.js","components/games/Unmess/components/pages/LatestResults/LatestResults.jsx","components/games/contexts/words-service-context/words-service-context.js","components/games/hoc/with-words-service.js","components/games/contexts/recognition-service-context/recognition-service-context.js","components/games/contexts/local-storage-service-context/local-storage-service-context.js","components/games/Unmess/App.js","components/games/Unmess/index.js","components/games/services/words-service.js","components/Main/Main.jsx","components/Main/index.js","redux/reducers/auth.js","redux/reducers/rootReducer.js","redux/store.js","App.js","serviceWorker.js","index.js","assets/images/avatar.jpg","components/AudioCallGame/components/Question/QuestionView.module.scss","components/AudioCallGame/components/FinishGamePage/FinishGamePageView.module.scss","components/AudioCallGame/components/StartGamePage/StartGamePageView.module.scss","components/Savannah/components/Header/Header.module.scss","components/Savannah/components/StartPage/StartPage.module.scss","components/Savannah/components/FinishPage/ResultList/ResultList.module.scss","components/AudioCallGame/components/Answer/AnswerView.module.scss","components/Savannah/components/FinishPage/ResultList/ResultItem/ResultItem.module.scss","components/Savannah/components/ActiveQuiz/AnswerList/AnswerItem/AnswerItem.module.scss","components/AudioCallGame/components/FinishGameItem/FinishGameItemView.module.scss","components/Savannah/components/FinishPage/FinishPage.module.scss"],"names":["module","exports","apiLinks","localStorageItems","applicationThings","LEARN_WORDS","SAVANNAH","SPRINT","AUDIOCALL","SPEAK_IT","PUZZLE","UNMESS","levelsOfDifficulty","pagesData","aboutUs","title","path","guest","isVisible","index","user","learnWords","play","promo","settings","signIn","register","statistics","vocabulary","gamesData","audiocall","description","savannah","sprint","englishPuzzle","speakit","unmess","startPath","teamMembers","name","surname","role","image","noAvatar","linkedinUsername","selectorOptions","text","nickname","email","password","repeatPassword","alreadyRegistered","firstTimeOrForgotPassword","incorrectLoginData","userUndefined","levelsTitles","answersCorrect","answersMistaken","howManyAnswers","howManyWords","chooseLevel","notEnoughWords","instruction","button","next","dontKnow","startGame","newGame","learnEnglishWithUs","formLabel","questionStatus","success","error","ratesScale","level","rate","count","maxLevels","defaultLevel","minAnswers","maxAnswers","minQuestions","maxQuestions","counterMultiplier","pointsMultiplier","correctAnswerOnce","getPath","modulePath","getRandomNumber","min","max","Math","floor","random","ceil","getAverageNumber","round","shuffleArray","array","newArray","i","length","j","getTokenLifetimeInMs","countQuestionsSets","questionsNumber","getFilePath","mediaPath","playAudio","Audio","logout","localStorage","removeItem","type","autoLogout","time","dispatch","setTimeout","authSuccess","userId","token","MenuList","menuTitle","menuItems","React","useState","anchorEl","setAnchorEl","handleClose","menuItemClasses","root","className","Button","aria-controls","aria-haspopup","onMouseEnter","event","currentTarget","onMouseLeave","undefined","relatedTarget","closest","Menu","classes","list","id","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","open","Boolean","onClose","MenuListProps","disableScrollLock","autoFocus","BackdropComponent","PopoverClasses","paper","map","item","key","MenuItem","onClick","addLinksToHeader","link","activeClassName","to","Object","values","gameObj","replace","exact","connect","links","isUserLogged","logoutUser","IconButton","color","style","fontSize","Header","getPagesLinks","reduce","props","updatedLinks","this","getItem","Component","state","auth","TeamMember","src","alt","target","href","value","disabled","variant","size","mapTeamMembersToItems","member","AboutUsPage","buttonsNames","difficultLabels","word","repeats","AUTO_VOICE","categoriesSelect","onToggleAutoPlay","onToggleCategory","onChange","el","defaultProps","userWordTemplate","difficulty","optional","stamp","removed","repeated","userWordThings","DIFFICULTY","OPTIONAL","RATE","NEXT","STAMP","REMOVED","REPEATED","statsGameTemplate","games","wrong","right","statsLearnTemplate","learned","inProgress","complicated","statsPuzzleTemplate","statsThingNames","generateStatsTemplate","stats","learnedWords","properties","forEach","thing","checkStatsThingTemplate","sumObjectProps","targetObject","newData","result","keys","changeStats","statsOption","optionData","currentStats","newStats","updated","current","today","moment","format","temlate","changeGameStats","changeSessionStatsObject","statsObject","keyName","keyValue","generateUserWordsTemplate","convertStamp","days","oldDate","add","valueOf","split","reverse","join","changeUserWord","userOption","oldRepeated","wordObject","newUserWord","userWord","generateSpacingRepeatingTemplate","localThings","STATISTICS","WORDS","SETTINGS","sessionThings","NEW_WORDS","REPEATING","gameSessionThings","speakIt","puzzle","checkForLocalThing","thingName","templateGenerator","JSON","parse","checkForessionThing","template","getSessionThing","saveSessionThing","thingValue","setItem","stringify","checkForStatistics","checkForUserWords","storage","saveLocalUserWord","areWordsStored","words","isWordStored","findIndex","updatedWords","saveNewUserWordId","wordId","calculateLearnRate","coefficient","correctedRate","find","defineNewRate","calculateGameNext","oldNext","newNext","prepared","prepareWordObject","newWordObject","createUserWord","updateRepeatingWords","twice","repeatingArray","newWords","saveSpacingRepeating","updateUserWord","newWord","getOldData","oldRate","updateUserWordRate","updateStats","getDiffAndCoplicatedInProgress","arrayOfWordsObjects","isRemoved","isComplicated","getWordsDiffAndComplicated","saveDataToSessionStats","saveRightToGamesStats","saveWrongToGamesStats","getGameSessionResults","getSessionData","calculateLearnWordsResults","arrayOfWords","filter","saveGameResults","results","sessionWords","COMPLICATED","REMOVE","handleWordRemove","onChangeProgress","updateUserWordRemoved","handleWordComplicated","updateUserWordDifficulty","StatusBar","progress","currentWord","wordCount","totalWords","isShownComplicatedButton","classNames","active","initialProgressObject","isGuessed","isShownWord","isWordSemiOpacity","isUsedTip","difference","isDifficultChosen","hideWordStyles","backgroundColor","pointerEvents","userSelect","showWordStyles","absolutElement","position","width","height","left","top","inputWrapper","zIndex","transition","inputField","resourceUrl","extractEmphasizedWord","str","surroundingTag","sentence","beginTag","endTag","begin","substring","indexOf","emphasis","end","showDifferenceInWords","inputWord","arr","push","letter","errorColor","checkSessionProgress","clearSessionProgress","playAudios","audios","audio","Array","isArray","onended","SHOW_ANSWER","PREV","SideBar","isShownAnswerButton","isShownImageAssociation","onNextWord","onPrevWord","CheckedSentense","styles","Word","handleInput","setState","handleSubmit","preventDefault","textExample","handleError","handleSuccess","onPlayAudio","textExampleTranslate","isShownTranslation","wrongAnswerStyles","display","opacity","prepareWrongAnswerStyles","rightAnswerStyles","prepareRightAnswerStyles","output","onSubmit","autoComplete","marginLeft","WordExtraInfo","wordTranslate","transcription","textMeaning","textMeaningTranslate","isShownTranscription","isShownExampleSentence","isShownMeaning","HARD","NORMAL","EASY","HARD_LABEL","NORMAL_LABEL","EASY_LABEL","handleChoseDifficulty","isFirstPassDone","updateUserWordRepeated","SpacingRepeating","WordCard","currentInput","isLogged","LearnWords","isAutoPlay","isPlaying","isFetching","category","toggleAutoPlay","toggleCategory","checkForLoggedUser","rslangUserId","checkForEndOfGame","audioName","data","audioMeaning","audioExample","handleNextWord","handlePrevWord","handleChangeProgress","handleEndOfCards","console","log","learnSessionProgress","guessCount","prevProps","prevState","setSessionProgress","textExampleSentence","textMeaningSentence","response","useStyles","makeStyles","padding","colorSecondary","input","Slider","setValue","Grid","container","spacing","alignItems","xs","newValue","aria-labelledby","Input","margin","Number","onBlur","inputProps","step","LinearProgress","done","all","filledWidth","LearnWordCardPreview","previewSettings","learnCardPreviewSettings","translationVisibility","translation","complicatedButtonVisibility","complicatedButton","imageAssociatationVisibility","imageAssociatation","meaningVisibility","meaning","transcriptionVisibility","showAnswerButtonVisibility","showAnswerButton","exampleSentenceVisibility","exampleSentence","translationItemClasses","hidden","complicatedButtonItemClasses","imageAssociatationItemClasses","meaningItemClasses","transcriptionItemClasses","showAnswerButtonItemClasses","exampleSentenceItemClasses","CheckboxView","checked","checkbox","defaultChecked","settingChanged","previewSettingName","payload","bind","SettingsPage","StatisticsPage","PromoPage","controls","GameCard","renderGames","PlayGamesPage","WordCardView","wordData","playSound","restoreWord","createMarkup","markup","__html","dangerouslySetInnerHTML","VocabularyView","changeVocabularyType","selectedOption","options","cards","e","persist","onSelectorChange","wordsData","group","page","wordsPerExampleSentence","VocabularyPage","placeholder","required","initialState","repeatPass","emailValid","SignInPage","isEmailValid","mail","test","String","onChangeEmail","onChangePass","onSubmitForm","a","authData","url","axios","post","refreshTokenDate","Date","getTime","expData","alert","getToken","axiosuser","create","baseURL","headers","Authorization","Accept","getAuthHeader","UserService","registerUser","fetch","method","body","rawResponse","json","loginUser","getUserById","get","updateUserById","withCredentials","getUserWordById","content","updateUserWordById","deleteUserWordById","delete","getUserAllWords","getAllUserWordsArray","allWords","wordCard","getUserWordsNoRemoved","getAllWords","createUserStatistics","option","getUserStatistics","x","createUserSettings","getUserSettings","getUserWordsFilter","URL","pathname","searchParams","append","Headers","userService","nickValid","passValid","passRepeatValid","formValid","SignUpPage","isPassValid","pass","isNickValid","nick","isFormValid","onChangeNick","onChangeRepeatPass","QuestionView","isFalseAnswer","isRightAnswer","srcImage","audioElement","iconClasses","volumeUpRounded","wordClasses","pictureClasses","picture","dataid","aria-label","iconButton","VolumeUpRounded","Question","question","oncanplay","Answer","answer","handleClickAnswer","currentAnswerId","answerItem","disable","AnswerPanel","answerArray","handleClickButton","buttonValue","FinishGameItem","FinishGamePage","errorAnswerArray","rightAnswerArray","handleClickNewGame","generateItemsWords","GamePageView","questionsList","GamePage","componentDidMount","dataWords","maxLevel","questionList","amountLevels","slice","generateQuestionsArray","getAnswersArray","numberLevel","numberAnswers","currentQuestion","arrayWrongAnswer","concat","changeLevel","clearTimeout","nextLevel","setAnswer","soundError","soundSuccess","StartGamePage","handleChooseLevel","setNumberLevel","setNumberAnswers","handleSubmitForm","form","FormControl","InputLabel","htmlFor","Select","native","label","TextField","defaultValue","pattern","MainView","isStart","Main","levelAPI","amountQuestions","AudioCall","Switcher","handleChangeUserWords","FormGroup","row","FormControlLabel","control","Switch","StartGameForm","classNameForm","handleCurrentGroup","menuItemList","shift","labelId","startIcon","background","StartGameUserForm","Fragment","StartGame","updateState","PlayGame","fill","isAnswerQuiz","updateTimer","document","addEventListener","onCLick","removeEventListener","counterTotal","unshift","pop","timer","activeAnswer","volume","handleVolume","score","StyledTableCell","withStyles","theme","lineHeight","head","palette","common","black","white","TableCell","StyledTableRow","action","hover","TableRow","table","minWidth","CustomizedTables","complete","mistake","audioPlay","translate","rows","calories","fat","carbs","total","protein","TableContainer","component","Paper","Table","TableHead","align","TableBody","scope","Transition","forwardRef","ref","Slide","direction","FinishGame","isFinished","onReloadGame","Dialog","maxWidth","TransitionComponent","keepMounted","aria-describedby","DialogContent","DialogContentText","DialogActions","getWords","getRandomWordByGroup","randomPage","randomKey","getWordsByAmount","amountOfAnswers","Promise","checkedUserWords","allUserWords","activeQuestion","activeCard","isTrue","answerState","currentGroup","counter","multiplier","win","changeGroup","translateWords","isStarted","Sprint","basic","allUserWordsRandom","userWords","allCards","card","resultCurrentQuiz","updateCounter","mult","updateScore","timerId","onClickHandler","isTrueState","isChangeUserWords","heartCount","mistakeTotal","arrComplete","arrMistake","Icon","CloseButton","StartPage","onTotalQuizUpdate","handleTotalAnswer","totalAnswers","totalQuestions","errorAnswer","errorQuiz","age","setAge","formControl","marginBottom","startExplanation","ResultItem","keyItem","Item","VolumeDownIcon","Translate","ResultList","resultTitle","status","cls","Total","Wrapper","Title","Content","FinishPage","newStartGameHandle","finishWrapper","bottom","AnswerItem","keyPressed","guessedWords","trueAnswer","AnswerList","trueNumberAnswer","Zoom","styled","div","keyframes","zoomInLeft","ActiveQuiz","onDefault","onTimeOut","currentUserWordId","idWords","Savannah","isRegUser","_id","resultArray","currentAnswer","handleHeart","soundFinish","setInterval","gameStatus","idWordPressed","onChangeGroupwords","onCorrectAnswer","onAnswerClickHandler","pathAudio","Container","StartButton","Preloader","standartMarks","valuetext","Stepper","marks","arrayOfColorsForTrack","indexOfDefaultValue","mark","defaultColor","stickyLabel","querySelector","setProperty","onChangeCommitted","StyledSlider","track","thumb","markLabel","stepperContainerClasses","Typography","gutterBottom","getAriaValueText","valueLabelDisplay","indexOfNewValue","generateStepperMarks","stepsCount","obj","loading","levelChanged","pageChanged","currentLevel","currentPage","args","replacement","popover","Popover","descriptionClassName","handlePopoverClose","aria-owns","disableRestoreFocus","GameTitle","untouchedWords","dragStart","touchStart","dragEnd","dragEnter","dragLeave","drop","untouchedDefinitions","wrongWords","showDefinition","wordObj","draggable","onDragStart","onTouchStart","onDragEnd","data-id","onDragEnter","onDragLeave","onDrop","replaceTagInString","hideDefinition","currentDraggedWord","preventDefaultFunc","querySelectorAll","classList","scrollUpInterval","scrollDownInterval","currentDragoveredElement","isPageScrollingUp","isPageScrollingDown","currentCursorPosition","pageX","targetTouches","pageY","clientX","clientY","cloneNode","moveAt","offsetWidth","window","innerWidth","offsetHeight","setCurrentDragoveredElement","remove","currentDisplay","elementFromPoint","onTouchMove","touchEvent","cancelable","innerHeight","scrollY","scroll","maxScrollDown","clearInterval","copiedStyles","entries","getComputedStyle","acc","currentValue","cssText","appendChild","passive","ontouchend","shuffledCurrentWords","dataset","parentNode","removeChild","wordDropped","currentWords","attempt","currentLatestResults","date","toLocaleString","year","month","day","hour","minute","second","hour12","history","mapWordsObjectsToItems","classesPrefix","mapLatestResultsToItems","showDate","resultObj","rightWords","ResultsPage","mapResultsToItems","LatestResults","latestResults","createContext","WordsServiceProvider","Provider","WordsServiceConsumer","Consumer","withWordsService","Wrapped","wordsService","getRandomWords","sort","getShuffledWords","replaceElInArrayOfObject","object","newProps","indexOfObject","App","definitionObj","droppedWordObj","dropTargetWordObj","isRightAttempt","then","render","Start","Game","Results","pageCount","groupsCount","wordsRequest","0","1","2","3","4","5","allRequests","Unmess","StatisticPage","AudioCallGame","SprintGame","SavannahGame","UnmessGame","combineReducers","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","thunk","location","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.5b0a423f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ActiveQuiz\":\"ActiveQuiz_ActiveQuiz__1ffGv\",\"Question\":\"ActiveQuiz_Question__1VvaH\",\"rotate\":\"ActiveQuiz_rotate__hICsB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Savannah\":\"Savannah_Savannah__YP-xA\",\"Container\":\"Savannah_Container__3_Qfn\"};","module.exports = __webpack_public_path__ + \"static/media/error.48034e1e.mp3\";","module.exports = __webpack_public_path__ + \"static/media/success.3f4effb5.mp3\";","module.exports = __webpack_public_path__ + \"static/media/finish.889fedc6.mp3\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"GamePageView_container__2lWS6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"AnswerPanelView_container__2SuQY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ButtonView_button__2yGrZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"words\":\"AnswerList_words__2eimr\"};","import noAvatar from '../assets/images/avatar.jpg';\n\nimport soundError from '../assets/audio/error.mp3';\nimport soundSuccess from '../assets/audio/success.mp3';\nimport soundFinish from '../assets/audio/finish.mp3';\n\nconst apiLinks = {\n  file: 'https://raw.githubusercontent.com/hallovarvara/rslang-data/master/',\n  base: 'https://kagafon-learn-words.herokuapp.com/',\n  paintings: 'https://raw.githubusercontent.com/hallovarvara/rslang_data_paintings/master/',\n};\n\nconst localStorageItems = {\n  username: 'rslangName',\n  token: 'rslangToken',\n  userId: 'rslangUserId',\n  refreshTokenDate: 'refreshTokenDate',\n};\n\nexport const applicationThings = {\n  LEARN_WORDS: 'learnWords',\n  SAVANNAH: 'savannah',\n  SPRINT: 'sprint',\n  AUDIOCALL: 'audiocall',\n  SPEAK_IT: 'speakIt',\n  PUZZLE: 'puzzle',\n  UNMESS: 'unmess',\n};\n\nexport const userSettingsTemplate = {\n  IS_SHOWN_COMPLICATED_BUTTON: 'isShownComplicatedButton',\n  IS_SHOWN_ANSWER_BUTTON: 'isShownAnswerButton',\n  IS_SHOWN_IMAGE_ASSOCIATION: 'isShownImageAssociation',\n  IS_SHOWN_TRANSLATION: 'isShownTranslation',\n  IS_SHOWN_TRANSCRIPTION: 'isShownTranscription',\n  IS_SHOWN_EXAMPLE_SENTENCE: 'isShownExampleSentence',\n  IS_SHOWN_MEANING: 'isShownMeaning',\n};\n\nconst preloaderdefaultSettings = {\n  size: 150,\n  color: '#843FDD',\n};\n\nexport const levelsOfDifficulty = {\n  HARD: 'hard',\n  NORMAL: 'normal',\n  EASY: 'easy',\n};\n\nexport const dateFormatTemplate = 'DD.MM.YYYY';\n\nconst linkedinLink = 'https://www.linkedin.com/in/';\n\nconst pagesData = {\n  aboutUs: {\n    title: 'Кто мы',\n    path: 'about-us',\n    guest: { isVisible: true, index: 3 },\n    user: { isVisible: true, index: 2 },\n  },\n  learnWords: {\n    title: 'Учить слова',\n    path: 'learn',\n    guest: { isVisible: true, index: 1 },\n    user: { isVisible: true, index: 0 },\n  },\n  play: {\n    title: 'Играть',\n    path: 'play',\n    guest: { isVisible: true, index: 2 },\n    user: { isVisible: true, index: 1 },\n  },\n  promo: {\n    title: 'О проекте',\n    path: '',\n    guest: { isVisible: true, index: 0 },\n    user: { isVisible: true, index: 2 },\n  },\n  settings: {\n    title: 'Настройки',\n    path: 'settings',\n    guest: { isVisible: false },\n    user: { isVisible: true, index: 6 },\n  },\n  signIn: {\n    title: 'Войти',\n    path: 'sign-in',\n    guest: { isVisible: true, index: 6 },\n    user: { isVisible: false },\n  },\n  register: {\n    title: 'Зарегистрироваться',\n    path: 'register',\n    guest: { isVisible: false },\n    user: { isVisible: false },\n  },\n  statistics: {\n    title: 'Статистика',\n    path: 'statistics',\n    guest: { isVisible: true, index: 4 },\n    user: { isVisible: true, index: 4 },\n  },\n  vocabulary: {\n    title: 'Словарь',\n    path: 'vocabulary',\n    guest: { isVisible: true, index: 5 },\n    user: { isVisible: true, index: 5 },\n  },\n};\n\nconst gamesData = {\n  audiocall: {\n    title: 'Аудиовызов',\n    description: 'Прокачивайте восприятие языка на слух, а также увеличивайте свой словарный запас',\n    path: 'audiocall',\n  },\n  savannah: {\n    title: 'Саванна',\n    description: 'Угадывайте, как переводятся слова, и вместе с этим пополняйте лексикон',\n    path: 'savannah',\n  },\n  sprint: {\n    title: 'Спринт',\n    description: 'Играйте на время, чтобы точно знать, как много слов вы можете перевести за минуту',\n    path: 'sprint',\n  },\n  englishPuzzle: {\n    title: 'English Puzzle',\n    description: 'Учитесь строить предложения и знакомьтесь с величайшими произведениями искусства',\n    path: 'english-puzzle',\n  },\n  speakit: {\n    title: 'SpeakIt',\n    description: 'Вырабатывайте правильное произношение слов вместе с нашей космической игрой',\n    path: 'speakit',\n  },\n  unmess: {\n    title: 'Unmess',\n    description: 'Соединяйте слова и их значения, расширяя запас слов и улучшая понимание смысла фраз',\n    path: 'unmess',\n    startPath: 'unmess/home',\n  },\n};\n\nconst teamMembers = [\n  {\n    name: 'Дмитрий',\n    surname: 'Лебецкий',\n    role: 'Работал как волк, делал все подряд',\n    image: noAvatar,\n    linkedinUsername: 'dmitry-lebetsky',\n  },\n  {\n    name: 'Варвара',\n    surname: 'Девятерикова',\n    role: 'Работала как волчица, делала все подряд',\n    image: noAvatar,\n    linkedinUsername: 'hallovarvara',\n  },\n  {\n    name: 'Артем',\n    surname: 'Римарчук',\n    role: 'Работал как волк, делал все подряд',\n    image: noAvatar,\n    linkedinUsername: 'artemrimarchyk',\n  },\n  {\n    name: 'Ксения',\n    surname: 'Яцкевич',\n    role: 'Работала как волчица, делала все подряд',\n    image: noAvatar,\n    linkedinUsername: 'ksenia-yatskevich',\n  },\n  {\n    name: 'Максим',\n    surname: 'Касприв',\n    role: 'Работал как волк, делал все подряд',\n    image: noAvatar,\n    linkedinUsername: 'maksym-kaspriv',\n  },\n  {\n    name: 'Алексей',\n    surname: 'Осипов',\n    role: 'Работал как волк, делал все подряд',\n    image: noAvatar,\n    linkedinUsername: '',\n  },\n];\n\nconst selectorOptions = [\n  ['new', 'new & repeating'],\n  ['complicated', 'complicated'],\n  ['removed', 'removed'],\n];\n\n/* Games */\n\nconst audio = {\n  error: 'error.mp3',\n  success: 'success.mp3',\n  win: 'finish.mp3',\n};\n\nconst text = {\n  ru: {\n    /* About us */\n    aboutUs: {\n      description: 'Привет! Мы рады представить продукт нашей совместной работы — приложение по изучению английского языка',\n    },\n\n    /* Sign In, Register */\n    nickname: 'Логин',\n    email: 'Емейл',\n    password: 'Пароль',\n    repeatPassword: 'Повторите пароль',\n    alreadyRegistered: 'Уже зарегистрированы?',\n    firstTimeOrForgotPassword: 'Впервые тут или забыли пароль?',\n    incorrectLoginData: 'Вы ввели неправильный логин или пароль. Попробуйте снова',\n    userUndefined: 'Емейл не зарегистрирован. Проверьте правильность его написания или зарегистрируйтесь',\n\n    /* Games */\n    levelsTitles: ['Первый', 'Второй', 'Третий', 'Четвертый', 'Пятый', 'Шестой'],\n    answersCorrect: 'Угадано',\n    answersMistaken: 'Не угадано',\n    howManyAnswers: 'Сколько показывать вариантов ответа',\n    howManyWords: 'Сколько слов хотите угадать',\n    chooseLevel: 'Выберите уровень сложности',\n    notEnoughWords: '* Если в словаре недостаточно слов для игр, слова будут появляться из выбранного уровня',\n\n    /* Unmess */\n    unmess: {\n      instruction: 'Схватите слово и отпустите над его значением',\n    },\n\n    /* Buttons */\n    button: {\n      next: 'Далее',\n      dontKnow: 'Не знаю',\n      startGame: 'Играть',\n      newGame: 'Начать новую игру',\n      learnWords: 'Изучать словау',\n      learnEnglishWithUs: 'Учите английский с нами',\n    },\n  },\n};\n\nconst formLabel = {\n  level: 'Уровень',\n  chooseLevel: 'Выберите уровень',\n  questions: 'Сколько слов хотите отгадать? (5—12)',\n  answers: 'Сколько показывать вариантов ответов? (2—5)',\n};\n\nconst questionStatus = {\n  success: 'success',\n  error: 'error',\n};\n\nconst ratesScale = [\n  { level: 30, rate: 31 },\n  { level: 21, rate: 30 },\n  { level: 15, rate: 21 },\n  { level: 10, rate: 15 },\n  { level: 7, rate: 10 },\n  { level: 4, rate: 7 },\n  { level: 2, rate: 4 },\n  { level: 0, rate: 2 },\n];\n\nconst count = {\n  /* API settings */\n  groups: 6,\n  pages: 29,\n  words: 19,\n\n  /* Time */\n  minInHour: 60,\n  secInMin: 60,\n  msInSec: 1000,\n  tokenLifetimeInHours: 4,\n\n  /* Defaults */\n  elementsPerPage: 10,\n\n  /* Game Audiocall */\n  audiocall: {\n    maxLevels: 12,\n  },\n\n  /* Game Savannah */\n  savannah: {\n    defaultLevel: 0,\n    minAnswers: 2,\n    maxAnswers: 5,\n    minQuestions: 5,\n    maxQuestions: 50,\n  },\n\n  /* Game Sprint */\n  sprint: {\n    counterMultiplier: 2,\n    pointsMultiplier: 10,\n    correctAnswerOnce: 4,\n  },\n};\n\nexport {\n  pagesData,\n  selectorOptions,\n  apiLinks,\n  linkedinLink,\n  gamesData,\n  teamMembers,\n  audio,\n  formLabel,\n  count,\n  localStorageItems,\n  text,\n  soundError,\n  soundSuccess,\n  soundFinish,\n  questionStatus,\n  preloaderdefaultSettings,\n  ratesScale,\n};\n","import {\n  apiLinks,\n  count,\n} from './constants';\n\nconst getPath = (modulePath = '') => `/${modulePath}`;\n\nconst getRandomNumber = (min, max) => (\n  Math.floor(\n    Math.random() * (\n      Math.floor(max) - Math.ceil(min) + 1\n    ),\n  ) + min\n);\n\nconst getAverageNumber = (min, max) => Math.round((max - min) / 2);\n\nconst shuffleArray = (array) => {\n  const newArray = [...array];\n  for (let i = newArray.length - 1; i > 0; i -= 1) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [newArray[i], newArray[j]] = [newArray[j], newArray[i]];\n  }\n  return newArray;\n};\n\nconst getTokenLifetimeInMs = () => {\n  const {\n    minInHour, secInMin, msInSec, tokenLifetimeInHours,\n  } = count;\n  return tokenLifetimeInHours * minInHour * secInMin * msInSec;\n};\n\n/* Words */\nconst countQuestionsSets = (questionsNumber) => (\n  Math.round(questionsNumber / count.groups)\n);\n\nconst generateQuestionsArray = (\n  data,\n  amountLevels = count.audiocall.maxLevels,\n) => (\n  shuffleArray(data).slice(0, amountLevels)\n);\n\n/* Media */\nconst getFilePath = (mediaPath) => apiLinks.file + mediaPath;\n\nconst playAudio = (path) => {\n  const audioElement = new Audio(path);\n  audioElement.play();\n};\n\nconst pauseAudio = (path) => {\n  const audioElement = new Audio(path);\n  audioElement.pause();\n};\n\nexport {\n  getFilePath,\n  generateQuestionsArray,\n  playAudio,\n  pauseAudio,\n  countQuestionsSets,\n  shuffleArray,\n  getRandomNumber,\n  getAverageNumber,\n  getTokenLifetimeInMs,\n  getPath,\n};\n","import axios from 'axios';\n\nimport { AUTH_LOGOUT, AUTH_SUCCESS } from './actionsTypes';\n\nimport {\n  apiLinks,\n  count,\n  localStorageItems,\n  text,\n} from '../../helpers/constants';\n\nimport { getTokenLifetimeInMs } from '../../helpers/functions';\n\nexport function logout() {\n  localStorage.removeItem(localStorageItems.token);\n  localStorage.removeItem(localStorageItems.username);\n  localStorage.removeItem(localStorageItems.userId);\n  localStorage.removeItem(localStorageItems.refreshTokenDate);\n  return {\n    type: AUTH_LOGOUT,\n  };\n}\n\nexport function autoLogout(time) {\n  return (dispatch) => {\n    setTimeout(() => {\n      dispatch(logout());\n    }, time * 1000);\n  };\n}\n\nexport function authSuccess(name, userId, token) {\n  return {\n    type: AUTH_SUCCESS,\n    name,\n    userId,\n    token,\n  };\n}\n\nexport function auth(email, password) {\n  return async (dispatch) => {\n    const authData = {\n      email,\n      password,\n    };\n    try {\n      const url = apiLinks.base\n\n      const response = await axios.post(`${url}signin`, authData);\n      const { data } = response;\n      const { name, userId, token } = data;\n      const refreshTokenDate = new Date(new Date().getTime() + getTokenLifetimeInMs());\n\n      localStorage.setItem(localStorageItems.token, token);\n      localStorage.setItem(localStorageItems.userId, userId);\n      localStorage.setItem(localStorageItems.refreshTokenDate, refreshTokenDate);\n      localStorage.setItem(localStorageItems.username, name);\n\n      const expData = new Date(localStorage.getItem(localStorageItems.refreshTokenDate));\n      dispatch(authSuccess(name, userId, token));\n      dispatch(autoLogout((expData.getTime() - new Date().getTime()) / count.msInSec));\n    } catch (e) {\n      // TODO Delete alert, add error message below the H1 title\n      alert(text.ru.incorrectLoginData);\n    }\n  };\n}\n","export const FETCH_QUIZES_START = 'FETCH_QUIZES_START';\nexport const FETCH_QUIZES_SUCCESS = 'FETCH_QUIZES_SUCCESS';\nexport const FETCH_QUIZES_ERROR = 'FETCH_QUIZES_ERROR';\nexport const FETCH_QUIZ_SUCCESS = 'FETCH_QUIZ_SUCCESS';\n\nexport const QUIZ_SET_STATE = 'QUIZ_SET_STATE';\nexport const FINISH_QUIZ = 'FINISH_QUIZ';\nexport const QUIZ_NEXT_QUESTION = 'QUIZ_NEXT_QUESTION';\nexport const QUIZ_RETRY = 'QUIZ_RETRY';\n\nexport const CREATE_QUIZ_QUESTION = 'CREATE_QUIZ_QUESTION';\nexport const RESET_QUIZ_CREATION = 'RESET_QUIZ_CREATION';\n\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';\n","import MenuList from './MenuList.jsx';\n\nexport default MenuList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nconst SimpleMenu = ({\n  menuTitle = 'Menu title',\n  menuItems = ['Profile', 'My account', 'Logout'],\n}) => {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const menuItemClasses = {\n    root: 'menu-list-item',\n  };\n\n  const menuListClasses = {\n    list: 'menu-list',\n  };\n\n  return (\n    <div className=\"hello\">\n      <Button\n        aria-controls=\"simple-menu\"\n        aria-haspopup=\"true\"\n        onMouseEnter={handleClick}\n        onMouseLeave={(event) => {\n          if (event.relatedTarget.closest === undefined\n            || !event.relatedTarget.closest('.menu-list-popover__paper')) {\n            handleClose();\n          }\n        }}\n      >\n        {menuTitle}\n      </Button>\n      <Menu\n        classes={menuListClasses}\n        id=\"simple-menu\"\n        anchorEl={anchorEl}\n        getContentAnchorEl={null}\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\n        transformOrigin={{ vertical: 'top', horizontal: 'center' }}\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n        MenuListProps={{ onMouseLeave: handleClose }}\n        disableScrollLock\n        autoFocus={false}\n        BackdropComponent={() => <div></div>}\n        PopoverClasses={{ root: 'menu-list-popover', paper: 'menu-list-popover__paper' }}\n      >\n        {\n          menuItems.map((item, key) => (\n            <MenuItem classes={menuItemClasses} key={key} onClick={handleClose}>{item}</MenuItem>\n          ))\n        }\n      </Menu>\n    </div>\n  );\n};\n\nSimpleMenu.propTypes = {\n  menuTitle: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  menuItems: PropTypes.arrayOf(PropTypes.oneOfType([\n    PropTypes.string, PropTypes.element,\n  ])),\n};\n\nexport default SimpleMenu;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport IconButton from '@material-ui/core/IconButton';\nimport { connect } from 'react-redux';\nimport { logout } from '../../redux/actions/auth';\nimport MenuList from '../../basicComponents/MenuList';\nimport { gamesData, pagesData } from '../../helpers/constants';\nimport { getPath } from '../../helpers/functions';\n\nconst addLinksToHeader = (link, index) => {\n  const { title, path } = link;\n  return (\n    <li key={index} className=\"navigation__item\">\n      {\n        path === pagesData.play.path\n          ? <MenuList\n            menuTitle={<NavLink activeClassName=\"navigation__item_active\" to={getPath(path)}>{title}</NavLink>}\n            menuItems={Object.values(gamesData).map((gameObj, i) => (\n              <NavLink\n                replace\n                className=\"menu-list-item__link\"\n                activeClassName=\"navigation__item_active\"\n                key={i}\n                to={ getPath(gameObj.startPath ?? gameObj.path) }>\n                { gameObj.title }\n              </NavLink>\n            ))}\n          />\n          : <NavLink\n            activeClassName=\"navigation__item_active\"\n            exact to={getPath(path)}\n          >\n            {title}\n          </NavLink>\n      }\n    </li>\n  );\n};\n\nconst HeaderView = ({ links, isUserLogged, logout: logoutUser }) => (\n  <header className=\"header\">\n    <h1 className=\"header__title\">\n      <NavLink activeClassName=\"navigation__item_active\" to={getPath()}>\n        RS Lang\n      </NavLink>\n    </h1>\n    <nav>\n      <ul className=\"navigation\">\n        {\n          links.map(addLinksToHeader)\n        }\n        {\n          isUserLogged && <li className=\"navigation__item exit-icon\">\n            <NavLink activeClassName=\"navigation__item_active\" to=\"/\">\n              <IconButton\n                onClick={logoutUser}>\n                <ExitToAppIcon\n                  color=\"disabled\"\n                  style={{ fontSize: '3rem' }}\n                />\n              </IconButton>\n             </NavLink>\n          </li>\n        }\n      </ul>\n    </nav>\n  </header>\n);\n\nHeaderView.propTypes = {\n  linkTitles: PropTypes.arrayOf(PropTypes.string),\n  isUserLogged: PropTypes.bool,\n  links: PropTypes.array,\n  logout: PropTypes.func,\n};\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    logout: () => dispatch(logout()),\n  };\n}\n\nexport default connect(null, mapDispatchToProps)(HeaderView);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { authSuccess } from '../../redux/actions/auth';\nimport HeaderView from './HeaderView.jsx';\nimport {\n  pagesData,\n  localStorageItems,\n} from '../../helpers/constants';\n\nclass Header extends React.Component {\n  componentDidMount() {\n    this.props.authSuccess(\n      localStorage.getItem(localStorageItems.username),\n      localStorage.getItem(localStorageItems.userId),\n      localStorage.getItem(localStorageItems.token),\n    );\n  }\n\n  getPagesLinks = () => Object.values(pagesData).reduce((links, item) => {\n    const role = this.props.token ? 'user' : 'guest';\n    const updatedLinks = links;\n\n    if (item[role].isVisible) {\n      updatedLinks[item[role].index] = item;\n    }\n\n    return updatedLinks;\n  }, [])\n\n  render() {\n    return (\n      <HeaderView\n        links={this.getPagesLinks()}\n        isUserLogged={(Boolean(this.props.token))} />\n    );\n  }\n}\nfunction mapStateToProps(state) {\n  return {\n    token: state.auth.token,\n\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    authSuccess: (name, email, password) => dispatch(authSuccess(name, email, password)),\n  };\n}\nHeader.propTypes = {\n  token: PropTypes.string,\n  authSuccess: PropTypes.func,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\n","import TeamMember from './TeamMemberView.jsx';\n\nexport default TeamMember;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport noAvatar from '../../assets/images/avatar.jpg';\nimport { linkedinLink } from '../../helpers/constants';\n\nconst TeamMemberView = (props) => {\n  const {\n    name = 'Безымянный герой',\n    surname = '',\n    role = 'Сделал всё несделанное',\n    image = noAvatar,\n    linkedinUsername = '',\n  } = props;\n  return (\n    <div className=\"team-member\">\n      <img src={image} alt=\"team-member\" className=\"team-member__image\"/>\n      <p className=\"team-member__full-name\">{`${name} ${surname}`}</p>\n      <p className=\"team-member__role\">{role}</p>\n      {\n        linkedinUsername.length > 0 &&\n        <p className=\"team-member-linked-profile\">\n          <a target=\"_blunk\" href={linkedinLink + linkedinUsername} className=\"team-member-linked-profile__link\">\n            <span className=\"linkedin-icon\"></span>{linkedinUsername}\n          </a>\n        </p>\n      }\n    </div>\n  );\n};\n\nTeamMemberView.propTypes = {\n  name: PropTypes.string,\n  surname: PropTypes.string,\n  role: PropTypes.string,\n  image: PropTypes.string,\n  linkedinUsername: PropTypes.string,\n};\n\nexport default TeamMemberView;\n","import Button from './ButtonView.jsx';\r\n\r\nexport default Button;\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Button from '@material-ui/core/Button';\n\nconst ButtonView = ({\n  type = 'primary',\n  value = 'Button',\n  className = '',\n  disabled,\n}) => (\n  <Button\n    type=\"submit\"\n    className={className}\n    classes={{ root: `btn btn-${type}` }}\n    variant=\"contained\"\n    size=\"large\"\n    disabled={disabled}\n  >\n    {value}\n  </Button>\n);\n\nButtonView.propTypes = {\n  type: PropTypes.string,\n  className: PropTypes.string,\n  value: PropTypes.string,\n  disabled: PropTypes.bool,\n};\n\nexport default ButtonView;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport {teamMembers, pagesData, text} from '../../../helpers/constants';\nimport TeamMember from '../../TeamMember';\nimport Button from '../../../basicComponents/Button';\nimport { getPath } from '../../../helpers/functions';\n\nconst mapTeamMembersToItems = (member, index) => <TeamMember key={index} {...member} />;\n\nconst AboutUsPage = () => (\n  <div className=\"about-us-page\">\n    <section className=\"about-us\">\n      <h1>{pagesData.aboutUs.title}</h1>\n      <p className=\"about-us__desctiption\">Привет! Мы рады представить продукт нашей совместной работы — приложение по изучению английского языка</p>\n    </section>\n    <section className=\"team-members\">\n      {\n        teamMembers.map(mapTeamMembersToItems)\n      }\n    </section>\n    <Link to={ getPath(pagesData.learnWords.path) }>\n      <Button\n        className=\"demonstration-container__start-button\"\n        value={ text.ru.button.learnEnglishWithUs }\n      />\n    </Link>\n  </div>\n);\n\nexport default AboutUsPage;\n","import AboutUsPage from './AboutUsPage.jsx';\n\nexport default AboutUsPage;\n","export const buttonsNames = {\n  COMPLICATED: 'Сложное',\n  REMOVE: 'Удалить',\n  AUTO_VOICE: 'Автоозвучка',\n  SHOW_ANSWER: 'Показать ответ',\n  PREV: 'пред.',\n  NEXT: 'след.',\n};\n\nexport const RSLANG = 'rslang';\nexport const RSLANG_SESSION_PROGRESS = 'rslangSessionProgress';\n\nexport const difficultLabels = {\n  HARD_LABEL: {\n    word: 'Трудно',\n    repeats: '+ 2 повтора',\n  },\n  NORMAL_LABEL: {\n    word: 'Хорошо',\n    repeats: '+ 1 повтор',\n  },\n  EASY_LABEL: {\n    word: 'Легко',\n    repeats: 'без повторов',\n  },\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { buttonsNames } from '../../helpers/constants';\nimport { pagesData } from '../../../../../helpers/constants';\n\nconst { AUTO_VOICE } = buttonsNames;\n\nconst Header = ({ categoriesSelect, onToggleAutoPlay, onToggleCategory }) => (\n  <div>\n    <div>\n      <h1>{pagesData.learnWords.title}</h1>\n      {/* //TODO: Here will be helper: Add right English word to sentence */}\n    </div>\n    {/* //TODO: Here will be two UI components */}\n    {/* //TODO: Button: Auto paly on */}\n    {/* //TODO: Drop-dawn: `Learn` category */}\n    <button onClick={() => onToggleAutoPlay()}>{AUTO_VOICE}</button>\n    <select onChange={(event) => onToggleCategory(event)}>\n      {categoriesSelect.map((el, i) => (\n        <option key={`category-${i}`} value={el}>\n          {el}\n        </option>\n      ))}\n    </select>\n  </div>\n);\n\nHeader.propTypes = {\n  categoriesSelect: PropTypes.array,\n  onToggleAutoPlay: PropTypes.func,\n  onToggleCategory: PropTypes.func,\n};\n\nHeader.defaultProps = {\n  categoriesSelect: [],\n  onToggleAutoPlay: () => {},\n  onToggleCategory: () => {},\n};\n\nexport default Header;\n\n","import Header from './Header.jsx';\n\nexport default Header;\n","import moment from 'moment';\nimport {\n  applicationThings,\n  userSettingsTemplate,\n  dateFormatTemplate,\n  levelsOfDifficulty,\n} from '../constants';\n\nexport const userWordTemplate = {\n  difficulty: false,\n  optional: {\n    rate: 0,\n    next: '',\n    stamp: 0,\n    removed: false,\n    repeated: 0,\n  },\n};\n\nexport const userWordThings = {\n  DIFFICULTY: 'difficulty',\n  OPTIONAL: 'optional',\n  RATE: 'rate',\n  NEXT: 'next',\n  STAMP: 'stamp',\n  REMOVED: 'removed',\n  REPEATED: 'repeated',\n};\n\nexport const statsGameTemplate = {\n  games: 0,\n  wrong: 0,\n  right: 0,\n};\n\nexport const statsLearnTemplate = {\n  learned: 0,\n  inProgress: 0,\n  complicated: 0,\n  removed: 0,\n};\n\nexport const statsPuzzleTemplate = {\n  games: 0,\n  wrong: 0,\n};\n\nexport const statsThingNames = {\n  LEARNED: 'learned',\n  IN_PROGRESS: 'inProgress',\n  COMPLICATED: 'complicated',\n  REMOVED: 'removed',\n  GAMES: 'games',\n  WRONG: 'wrong',\n  RIGHT: 'right',\n};\n\nexport const checkStatsThingTemplate = (thing) => {\n  switch (thing) {\n    case applicationThings.LEARN_WORDS:\n      return { ...statsLearnTemplate };\n    default:\n      return {};\n  }\n};\n\nexport const statsMainTemplate = () => (\n  {\n    learnedWords: 0,\n    optional: {},\n  }\n);\n\nexport const generateStatsTemplate = () => {\n  const stats = statsMainTemplate();\n  const properties = {};\n  Object.values(applicationThings).forEach((thing) => {\n    properties[thing] = checkStatsThingTemplate(thing);\n  });\n  stats.optional = { ...properties };\n  return stats;\n};\n\nconst sumObjectProps = (targetObject, newData) => {\n  const result = {};\n  Object.keys(targetObject).forEach((key) => {\n    result[key] = key === 'games'\n      ? targetObject[key] + 1\n      : targetObject[key] + newData[key] || 0;\n  });\n  return result;\n};\n\nconst changeGameStats = (statsOption, optionData, currentStats) => {\n  const today = moment().format(dateFormatTemplate);\n  const optional = currentStats?.optional || {};\n  const current = optional[statsOption][today];\n  let updated = {};\n\n  const temlate = statsOption === applicationThings.PUZZLE\n    ? statsPuzzleTemplate\n    : statsGameTemplate;\n  updated = current\n    ? { ...sumObjectProps(current, optionData) }\n    : { ...sumObjectProps(temlate, optionData) };\n  optional[statsOption][today] = { ...updated };\n  return optional[statsOption];\n};\n\nexport const changeStats = (statsOption, optionData, currentStats) => {\n  const newStats = { ...currentStats };\n  const { optional } = currentStats;\n  let updated = {};\n  let current = {};\n  switch (statsOption) {\n    case applicationThings.LEARN_WORDS:\n      current = optional[statsOption];\n      updated = {\n        ...sumObjectProps(current, optionData),\n      };\n      break;\n    default:\n      updated = changeGameStats(statsOption, optionData, currentStats);\n  }\n  optional[statsOption] = updated;\n  return { ...newStats, optional };\n};\n\nexport const changeSessionStatsObject = (statsObject, keyName, keyValue) => {\n  const result = { ...statsObject };\n  result[keyName] += keyValue;\n  return result;\n};\n\nexport const generateSettingsTemplate = () => {\n  const settings = {};\n  Object.values(userSettingsTemplate).forEach((setting) => {\n    settings[setting] = true;\n  });\n  return settings;\n};\n\nexport const changeSettings = (userOption, wordObject) => {\n  const settings = { ...wordObject };\n  const optionData = settings[userOption];\n  settings[userOption] = !optionData;\n  return { ...settings };\n};\n\nexport const generateUserWordsTemplate = () => (\n  []\n);\n\nexport const createUserWord = (wordObject) => {\n  const userWord = { wordId: wordObject.id, ...userWordTemplate };\n  return { ...wordObject, userWord };\n};\n\nexport const convertDate = (days) => (\n  !days\n    ? moment().format(dateFormatTemplate)\n    : moment().add(days, 'days').format(dateFormatTemplate)\n);\n\nexport const convertStamp = (days, oldDate) => (\n  !days\n    ? moment(oldDate.split('.').reverse().join('-')).valueOf()\n    : moment().add(days, 'days').valueOf()\n);\n\nexport const changeUserWord = (userOption, optionData, oldRepeated, stamp, wordObject) => {\n  const newUserWord = wordObject?.userWord\n    ? { ...wordObject.userWord }\n    : { ...userWordTemplate };\n  const { optional } = newUserWord;\n  if (userOption === userWordThings.DIFFICULTY) {\n    newUserWord[userWordThings.DIFFICULTY] = optionData;\n  } else {\n    switch (userOption) {\n      case userWordThings.RATE:\n        optional.rate = optionData;\n        optional.next = convertDate(optionData);\n        optional.stamp = stamp;\n        optional.repeated = oldRepeated + 1;\n        break;\n      case userWordThings.NEXT:\n        optional.next = optionData;\n        optional.stamp = stamp;\n        break;\n      case userWordThings.REMOVED:\n        optional.removed = optionData;\n        break;\n      case userWordThings.REPEATED:\n        optional.repeated = optionData;\n        break;\n      default:\n        break;\n    }\n  }\n  const userWord = { ...newUserWord, optional };\n  return { ...wordObject, userWord };\n};\n\nexport const checkUserWordById = (userWords, wordId) => {\n  const existendWord = userWords.find((word) => word.id === wordId);\n  return existendWord;\n};\n\nexport const generateSpacingRepeatingTemplate = () => (\n  []\n);\n\nexport const getWordsDiffAndComplicated = ({ difficulty, optional }) => (\n  {\n    isRemoved: optional.removed,\n    isComplicated: difficulty === levelsOfDifficulty.HARD,\n  }\n);\n","import {\n  statsGameTemplate,\n  statsLearnTemplate,\n  generateStatsTemplate,\n  generateSettingsTemplate,\n  generateUserWordsTemplate,\n  generateSpacingRepeatingTemplate,\n} from './dataModels';\nimport { applicationThings } from '../constants';\n\nexport const localThings = {\n  STATISTICS: 'rslangUserStatistics',\n  WORDS: 'rslangUserWords',\n  SETTINGS: 'rslangUserSettings',\n};\n\nexport const sessionThings = {\n  WORDS: 'rslangSessionWords',\n  NEW_WORDS: 'rslangNewWords',\n  REPEATING: 'rslangSessionRepeating',\n};\n\nexport const gameSessionThings = {\n  learnWords: 'rslangLearnWordsSession',\n  savannah: 'rslangSavannahSession',\n  sprint: 'rslangSprintSession',\n  audiocall: 'rslangAudiocallSession',\n  speakIt: 'rslangSpeakItSession',\n  puzzle: 'rslangPuzzleSession',\n  unmess: 'rslangUnmessSession',\n};\n\nexport const checkForLocalThing = (thingName, templateGenerator) => (\n  !localStorage.getItem(thingName)\n    ? templateGenerator()\n    : JSON.parse(localStorage.getItem(thingName))\n);\n\nexport const getSessionThing = (thingName, template) => (\n  !localStorage.getItem(thingName)\n    ? template\n    : JSON.parse(localStorage.getItem(thingName))\n);\n\nexport const checkForessionThing = (thingName) => {\n  let template;\n  if (thingName === applicationThings.LEARN_WORDS) {\n    template = { ...statsLearnTemplate };\n  } else {\n    template = { ...statsGameTemplate };\n    delete template.games;\n    if (thingName === applicationThings.PUZZLE) {\n      delete template.right;\n    }\n  }\n  return getSessionThing(gameSessionThings[thingName], template);\n};\n\nexport const saveSessionThing = (thingName, thingValue) => {\n  localStorage.setItem(gameSessionThings[thingName], JSON.stringify(thingValue));\n};\n\nexport const checkForStatistics = () => (\n  checkForLocalThing(localThings.STATISTICS, generateStatsTemplate)\n);\n\nexport const saveLocalStatistics = (statsObject) => {\n  localStorage.setItem(localThings.STATISTICS, JSON.stringify({ ...statsObject }));\n};\n\nexport const checkForUserWords = (storage = sessionThings) => (\n  checkForLocalThing(storage.WORDS, generateUserWordsTemplate)\n);\n\nexport const saveLocalUserWord = (wordObject, storage = sessionThings) => {\n  const areWordsStored = localStorage.getItem(storage.WORDS);\n  if (areWordsStored) {\n    localStorage.setItem(storage.WORDS, JSON.stringify([wordObject]));\n  } else {\n    const words = JSON.parse(localStorage.getItem(storage.WORDS));\n    const isWordStored = words.findIndex((el) => el.id === wordObject.id) !== -1;\n\n    let updatedWords = [];\n    if (isWordStored) {\n      updatedWords = words.map((word) => (word.id === wordObject.id\n        ? { ...word, ...wordObject }\n        : word));\n    } else {\n      updatedWords = [...words, wordObject];\n    }\n\n    localStorage.setItem(storage.WORDS, JSON.stringify([...updatedWords]));\n  }\n};\n\nexport const checkForSettings = () => (\n  checkForLocalThing(localThings.SETTINGS, generateSettingsTemplate)\n);\n\nexport const saveLocalSettings = (settings) => {\n  localStorage.setItem(localThings.SETTINGS, JSON.stringify({ ...settings }));\n};\n\nexport const checkForSpacingRepeating = () => (\n  checkForLocalThing(sessionThings.REPEATING, generateSpacingRepeatingTemplate)\n);\n\nexport const saveSpacingRepeating = (repeatingArray, wordObject, twice = false) => {\n  const newWords = twice\n    ? [wordObject, ...repeatingArray, wordObject]\n    : [...repeatingArray, wordObject];\n  localStorage.setItem(sessionThings.REPEATING, JSON.stringify(newWords));\n};\n\nexport const getDataFromStorage = (storage, data) => (\n  JSON.parse(localStorage.getItem(storage[data]))\n);\n\nexport const clearStorageData = (storage) => {\n  Object.values(storage).forEach((el) => {\n    localStorage.removeItem(el);\n  });\n};\n\nexport const clearLocalUserData = () => clearStorageData(localThings);\n\nexport const getSessionData = (thingName) => (\n  JSON.parse(localStorage.getItem(gameSessionThings[thingName]))\n);\n\nexport const clearSessionData = (thingName) => {\n  localStorage.removeItem(gameSessionThings[thingName]);\n  clearStorageData(sessionThings);\n};\n\nexport const checkForNewUserWordsIds = () => (\n  !localStorage.getItem(sessionThings.NEW_WORDS)\n    ? []\n    : JSON.parse(localStorage.getItem(sessionThings.NEW_WORDS))\n);\n\nexport const saveNewUserWordId = (wordId) => {\n  const words = checkForNewUserWordsIds();\n  localStorage.setItem(sessionThings.NEW_WORDS, JSON.stringify([...words, wordId]));\n};\n\nexport const getNewWordsIds = () => (\n  JSON.parse(localStorage.getItem(sessionThings.NEW_WORDS))\n);\n","import moment from 'moment';\nimport { levelsOfDifficulty, dateFormatTemplate, ratesScale } from '../constants';\n\nexport const defineNewRate = (rate) => {\n  const newRate = ratesScale.find((el) => el.level <= rate);\n  return newRate.rate;\n};\n\nexport const correctedRate = (rate, level) => {\n  let coefficient = 0;\n  switch (level) {\n    case levelsOfDifficulty.HARD:\n      coefficient = 0.8;\n      break;\n    case levelsOfDifficulty.EASY:\n      coefficient = 1.3;\n      break;\n    default:\n      coefficient = 1;\n      break;\n  }\n  return Math.floor(rate * coefficient);\n};\n\nexport const calculateLearnRate = (rate, level) => {\n  const newRate = defineNewRate(rate);\n  return correctedRate(newRate, level);\n};\n\nexport const calculateGameNext = (oldNext) => {\n  let newNext = '';\n  if (!oldNext) {\n    newNext = moment().add(1, 'days').format(dateFormatTemplate);\n  } else {\n    const prepared = oldNext.split('.').reverse().join('-');\n    newNext = oldNext === moment().format(dateFormatTemplate)\n      ? moment().add(1, 'days').format(dateFormatTemplate)\n      : moment(prepared).add(-1, 'days').format(dateFormatTemplate);\n  }\n  return newNext;\n};\n","import { levelsOfDifficulty, applicationThings } from '../constants';\nimport {\n  checkForStatistics,\n  saveLocalStatistics,\n  checkForUserWords,\n  saveLocalUserWord,\n  checkForSettings,\n  saveLocalSettings,\n  checkForSpacingRepeating,\n  saveSpacingRepeating,\n  checkForessionThing,\n  saveSessionThing,\n  getSessionData,\n  clearSessionData,\n  clearLocalUserData,\n  localThings,\n  saveNewUserWordId,\n  getNewWordsIds,\n} from './storageModel';\nimport {\n  changeStats,\n  createUserWord,\n  changeUserWord,\n  userWordThings,\n  changeSettings,\n  getWordsDiffAndComplicated,\n  statsThingNames,\n  changeSessionStatsObject,\n  convertStamp,\n} from './dataModels';\nimport { filterByThing, shufleWordsArray } from './wordsFilters';\nimport { calculateLearnRate, calculateGameNext } from './spacingRepeating';\n\nexport const randomizeArray = (arrayOfWords) => {\n  shufleWordsArray(arrayOfWords);\n};\n\nexport const prepareWordObject = (wordObject) => {\n  let newWordObject;\n  if (!wordObject?.userWord) {\n    saveNewUserWordId(wordObject.id);\n    newWordObject = createUserWord(wordObject);\n  } else {\n    newWordObject = { ...wordObject };\n  }\n  return newWordObject;\n};\n\nexport const updateRepeatingWords = (wordObject, twice) => {\n  const repeating = checkForSpacingRepeating();\n  saveSpacingRepeating(repeating, wordObject, twice);\n};\n\nexport const updateUserWord = (\n  userOption,\n  optionData,\n  oldRepeated,\n  stamp,\n  wordObject,\n  level,\n  thingName,\n) => {\n  const newWord = changeUserWord(userOption, optionData, oldRepeated, stamp, wordObject);\n  saveLocalUserWord(newWord);\n  if (thingName === applicationThings.LEARN_WORDS) {\n    if (level !== levelsOfDifficulty.EASY && userOption === userWordThings.RATE) {\n      const twice = level === levelsOfDifficulty.HARD;\n      updateRepeatingWords(newWord, twice);\n    }\n  }\n};\n\nconst getOldData = ({ userWord }) => (\n  {\n    oldRate: userWord?.optional?.rate || 0,\n    oldRepeated: userWord?.optional?.repeated || 0,\n    oldNext: userWord?.optional?.next || '',\n  }\n);\n\nexport const updateUserWordRate = (\n  wordObject,\n  thingName,\n  level = levelsOfDifficulty.HARD,\n) => {\n  const current = prepareWordObject(wordObject);\n  const { oldRate, oldRepeated } = getOldData(wordObject);\n  if (thingName === applicationThings.LEARN_WORDS) {\n    const rate = calculateLearnRate(oldRate, level);\n    const stamp = convertStamp(rate);\n    updateUserWord(userWordThings.RATE, rate, oldRepeated, stamp, current, level, thingName);\n  } else {\n    const newNext = calculateGameNext();\n    const stamp = convertStamp(0, newNext);\n    updateUserWord(userWordThings.NEXT, newNext, oldRepeated, stamp, current, level, thingName);\n  }\n};\n\nexport const updateUserWordDifficulty = (wordObject) => {\n  const current = prepareWordObject(wordObject);\n  const { difficulty } = current.userWord;\n  updateUserWord(userWordThings.DIFFICULTY, !difficulty, null, null, current);\n};\n\nexport const updateUserWordRemoved = (wordObject) => {\n  const current = prepareWordObject(wordObject);\n  const { removed } = current.userWord.optional;\n  updateUserWord(userWordThings.REMOVED, !removed, null, null, current);\n};\n\nexport const updateUserWordRepeated = (wordObject) => {\n  const current = prepareWordObject(wordObject);\n  const { repeated } = current.userWord.optional;\n  updateUserWord(userWordThings.REPEATED, repeated + 1, null, null, current);\n};\n\nexport const updateStats = (statsOption, optionData) => {\n  const stats = checkForStatistics();\n  const newStats = changeStats(statsOption, optionData, stats);\n  saveLocalStatistics(newStats);\n};\n\nexport const updateStatsObject = (statsOption, optionData, currentStats) => (\n  changeStats(statsOption, optionData, currentStats)\n);\n\nexport const updateSettings = (settingOption) => {\n  const settings = checkForSettings();\n  const newSettings = changeSettings(settingOption, settings);\n  saveLocalSettings(newSettings);\n};\n\nexport const prepareUserWordsToServer = (arrayOfWords) => (\n  arrayOfWords.map((el) => ({ wordId: el.id, word: { ...el.userWord } }))\n);\n\nexport const getSettings = () => checkForSettings();\n\nexport const getStatistics = () => checkForStatistics();\n\nexport const getWords = () => checkForUserWords(localThings);\n\nexport const saveLocalUserInfoToServer = () => ({\n  settings: getSettings() || {},\n  statistics: getStatistics() || {},\n  words: prepareUserWordsToServer(getWords()) || [],\n});\n\nexport const getDayLocalUserWords = (dayLimit) => {\n  const userWords = getWords();\n  return filterByThing(userWords, userWordThings.NEXT, dayLimit)\n    || filterByThing(userWords, userWordThings.STAMP, dayLimit);\n};\n\nexport const getComplicatedWords = (dayLimit) => {\n  const userWords = getWords();\n  return filterByThing(userWords, userWordThings.DIFFICULTY, dayLimit);\n};\n\nexport const getDiffAndCoplicatedInProgress = (arrayOfWordsObjects, template) => (\n  arrayOfWordsObjects.map((wordObject) => (wordObject?.userWord\n    ? { ...template, ...getWordsDiffAndComplicated(wordObject?.userWord) }\n    : { ...template }))\n);\n\nexport const saveDataToSessionStats = (thingName, keyName, keyValue = 1) => {\n  const current = checkForessionThing(thingName);\n  const updated = changeSessionStatsObject(current, keyName, keyValue);\n  saveSessionThing(thingName, updated);\n};\n\nexport const saveRightToGamesStats = (thingName) => {\n  saveDataToSessionStats(thingName, statsThingNames.RIGHT);\n};\n\nexport const saveWrongToGamesStats = (thingName) => {\n  saveDataToSessionStats(thingName, statsThingNames.WRONG);\n};\n\nexport const getGameSessionResults = (thingName) => (\n  getSessionData(thingName)\n);\n\nexport const clearGameSessionResults = (thingName) => {\n  clearSessionData(thingName);\n};\n\nexport const clearLocalUserInfo = () => {\n  clearLocalUserData();\n};\n\nexport const calculateLearnWordsResults = (arrayOfWords) => {\n  const stats = {};\n  stats.inProgress = arrayOfWords.filter((el) => el?.userWord?.optional?.repeated <= 2).length;\n  stats.complicated = arrayOfWords.filter((el) => el?.userWord?.difficulty).length;\n  stats.removed = arrayOfWords.filter((el) => el?.userWord?.optional?.removed).length;\n  return stats;\n};\n\nexport const saveGameResults = (thingName) => {\n  let results;\n  if (thingName === applicationThings.LEARN_WORDS) {\n    const sessionWords = checkForUserWords();\n    results = calculateLearnWordsResults(sessionWords);\n  } else {\n    results = getGameSessionResults(thingName);\n  }\n  updateStats(thingName, results);\n};\n\nexport const separateSessionWords = (arrayOfWords) => {\n  const newWords = [];\n  const userWords = [];\n  const newWordsIds = getNewWordsIds();\n  arrayOfWords.forEach((el) => {\n    if (newWordsIds.includes(el.id)) {\n      newWords.push(el);\n    } else {\n      userWords.push(el);\n    }\n  });\n  return {\n    newWords,\n    userWords,\n  };\n};\n\nexport const checkForDone = (arrayOfWords) => {\n  const notDone = arrayOfWords.filter((el) => el?.userWord?.optional?.rate < 31);\n  return {\n    learned: arrayOfWords.length - notDone.length,\n    words: notDone,\n  };\n};\n\nexport const saveSessionWordsToLocal = () => {\n  const sessionWords = checkForUserWords();\n  if (sessionWords) {\n    sessionWords.forEach((el) => {\n      saveLocalUserWord(el, localThings);\n    });\n  }\n};\n\nexport const saveSessionInfoToLocal = (thingName) => {\n  saveSessionWordsToLocal();\n  saveGameResults(thingName);\n  clearGameSessionResults(thingName);\n};\n\nexport const prepareSessionInfoToServer = (thingName) => {\n  const sessionWords = checkForUserWords();\n  const stats = thingName === applicationThings.LEARN_WORDS\n    ? calculateLearnWordsResults(sessionWords)\n    : getGameSessionResults(thingName);\n  const checked = checkForDone(sessionWords);\n  const { newWords, userWords } = separateSessionWords(checked.words);\n  if (thingName === applicationThings.LEARN_WORDS) {\n    stats.completed += checked.learned;\n    stats.inProgress -= checked.learned;\n  }\n  return {\n    stats,\n    newWords,\n    userWords,\n  };\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { buttonsNames } from '../../helpers/constants';\nimport {\n  updateUserWordDifficulty,\n  updateUserWordRemoved,\n} from '../../../../../helpers/wordsService';\n\nconst { COMPLICATED, REMOVE } = buttonsNames;\n\nexport const handleWordRemove = (wordObject, onChangeProgress, isRemoved) => {\n  updateUserWordRemoved(wordObject);\n  onChangeProgress({ isRemoved: !isRemoved });\n};\n\nexport const handleWordComplicated = (wordObject, onChangeProgress, isComplicated) => {\n  updateUserWordDifficulty(wordObject);\n  onChangeProgress({ isComplicated: !isComplicated });\n};\n\nconst StatusBar = ({\n  progress: { isRemoved, isComplicated },\n  onChangeProgress,\n  currentWord,\n  wordCount,\n  totalWords,\n  isShownComplicatedButton,\n}) => (\n  <div>\n    {/* //TODO: Here will be Material UI ProgressBar with 'totalWords' / 'wordCount' */}\n    <div>{`${wordCount} / ${totalWords}`}</div>\n    <div>\n      {isShownComplicatedButton\n          && <button\n          className={classNames({ active: isComplicated })}\n          onClick={\n            () => handleWordComplicated(currentWord, onChangeProgress, isComplicated)\n          } >\n            {COMPLICATED}\n          </button>\n      }\n        <button\n          className={classNames({ active: isRemoved })}\n          onClick={\n            () => handleWordRemove(currentWord, onChangeProgress, isRemoved)\n          } >\n        {REMOVE}\n      </button>\n    </div>\n  </div>\n);\n\nStatusBar.propTypes = {\n  progress: PropTypes.object,\n  onChangeProgress: PropTypes.func,\n  currentWord: PropTypes.object,\n  wordCount: PropTypes.number,\n  totalWords: PropTypes.number,\n  isShownComplicatedButton: PropTypes.bool,\n};\n\nexport default StatusBar;\n","import StatusBar from './StatusBar.jsx';\n\nexport default StatusBar;\n","export const isShownComplicatedButton = true;\nexport const isShownAnswerButton = true;\nexport const isShownImageAssociation = true;\nexport const isShownTranslation = true;\nexport const isShownTranscription = true;\nexport const isShownExampleSentence = true;\nexport const isShownMeaning = true;\n\nexport const categoriesSelect = [\n  'all', 'only new', 'for repeating', 'complicated',\n];\n\nexport const baseUrl = 'https://raw.githubusercontent.com/hallovarvara/rslang-data/master/';\n\nexport const initialProgressObject = {\n  isGuessed: false,\n  isShownWord: false,\n  isWordSemiOpacity: false,\n  isUsedTip: false,\n  difference: null,\n  isDifficultChosen: false,\n  isRemoved: false,\n  isComplicated: false,\n};\n","const hideColor = '#999999';\nexport const successColor = '#2ab823';\nexport const fewErrorsColor = '#f28029';\nexport const manyErrorsColor = '#db4621';\n\nexport const hideWordStyles = {\n  backgroundColor: hideColor,\n  color: hideColor,\n  pointerEvents: 'none',\n  userSelect: 'none',\n};\n\nexport const showWordStyles = {\n  backgroundColor: 'transparent',\n  color: 'inherit',\n  pointerEvents: 'auto',\n  userSelect: 'auto',\n};\n\nconst absolutElement = {\n  position: 'absolute',\n  width: '100%',\n  height: '100%',\n  left: '0',\n  top: '0',\n};\n\nexport const inputWrapper = {\n  ...absolutElement,\n  zIndex: '10',\n  transition: 'all 0.5s ease',\n};\n\nexport const bgElement = {\n  ...absolutElement,\n  zIndex: 5,\n  backgroundColor: hideColor,\n};\n\nexport const inputField = {\n  width: '100%',\n  height: '100%',\n  backgroundColor: 'transparent',\n  zIndex: '11',\n};\n","import { baseUrl } from './settings';\nimport { RSLANG_SESSION_PROGRESS } from './constants';\nimport { successColor, fewErrorsColor, manyErrorsColor } from './style-options';\n\nexport const resourceUrl = (path) => `${baseUrl}${path}`;\n\nexport const extractEmphasizedWord = (str, surroundingTag) => {\n  const sentence = {};\n  const beginTag = `<${surroundingTag}>`;\n  const endTag = `</${surroundingTag}>`;\n\n  sentence.begin = str.substring(0, str.indexOf(beginTag));\n  sentence.emphasis = str.substring(\n    str.indexOf(beginTag) + 3,\n    str.indexOf(endTag),\n  );\n  sentence.end = str.substring(str.indexOf(endTag) + 4);\n  return sentence;\n};\n\nexport const showDifferenceInWords = (currentWord, inputWord) => {\n  const result = [];\n  const errorsCounter = 0;\n  const arr = inputWord.split('');\n  arr.forEach((el, i) => {\n    if (el === currentWord[i]) {\n      result.push({ letter: el, color: successColor });\n    } else {\n      const errorColor = errorsCounter >= arr.length\n        ? manyErrorsColor\n        : fewErrorsColor;\n      result.push({ letter: el, color: errorColor });\n    }\n  });\n  return result;\n};\n\nexport const getSessionProgress = () => {\n  const progress = JSON.parse(localStorage.getItem(RSLANG_SESSION_PROGRESS));\n  return progress || [];\n};\n\nexport const setSessionProgress = (progress) => {\n  localStorage.setItem(RSLANG_SESSION_PROGRESS, JSON.stringify(progress));\n};\n\nexport const checkSessionProgress = (progress) => (\n  progress.find((el) => el.isGuessed === true)\n);\n\nexport const clearSessionProgress = () => {\n  localStorage.removeItem(RSLANG_SESSION_PROGRESS);\n};\n\nexport const prepareRightAnswerStyles = (isGuessed) => {\n  const styles = {};\n  styles.zIndex = 8;\n  styles.color = isGuessed ? successColor : 'transparent';\n  return styles;\n};\n\nexport const prepareWrongAnswerStyles = (isShownWord, isWordSemiOpacity) => {\n  const styles = {\n    display: 'inline',\n    transition: 'all 0.5s ease',\n  };\n  if (isShownWord) {\n    styles.opacity = !isWordSemiOpacity ? 1 : 0.5;\n  } else {\n    styles.opacity = 0;\n  }\n  return styles;\n};\n\nexport const playAudios = (audios) => {\n  const audio = new Audio();\n  if (!Array.isArray(audios)) {\n    audio.src = resourceUrl(audios);\n    audio.play();\n  } else {\n    let index = 0;\n    audio.src = resourceUrl(audios[index]);\n    audio.play();\n\n    audio.onended = () => {\n      if (index < audios.length) {\n        setTimeout(() => {\n          index += 1;\n          audio.src = resourceUrl(audios[index]);\n          audio.play();\n        }, 300);\n      }\n    };\n  }\n};\n\nexport const calculatePrevWordCard = (words, current) => {\n  let result;\n  let start;\n  if (current && current !== words.length) {\n    const leftChunk = words.slice(0, current);\n    start = leftChunk.find((el) => !el.isDifficultChosen)\n      ? current - 1\n      : words.length - 1;\n  } else {\n    start = words.length - 1;\n  }\n  for (let i = start; i >= 0; i - 1) {\n    if (!words[i].isDifficultChosen) {\n      result = i;\n      break;\n    }\n  }\n  return result;\n};\n\nexport const calculateNextWordCard = (words, current) => {\n  let result;\n  let start;\n  if (current && current !== words.length) {\n    const rightChunk = words.slice(current + 1, words.length);\n    start = rightChunk.find((el) => !el.isDifficultChosen) ? current + 1 : 0;\n  } else {\n    start = 0;\n  }\n  for (let i = start; i < words.length; i + 1) {\n    if (!words[i].isDifficultChosen) {\n      result = i;\n      break;\n    }\n  }\n  return result;\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { resourceUrl } from '../../helpers';\nimport { buttonsNames } from '../../helpers/constants';\n\nconst { SHOW_ANSWER, PREV, NEXT } = buttonsNames;\n\nconst SideBar = ({\n  progress,\n  word,\n  image,\n  isShownAnswerButton,\n  isShownImageAssociation,\n  onNextWord,\n  onPrevWord,\n  onChangeProgress,\n}) => (\n  <div>\n    <div>\n      {isShownImageAssociation && <img src={resourceUrl(image)} alt={word} />}\n        {isShownAnswerButton && (\n          <button\n            onClick={() => onChangeProgress({\n              isGuessed: true,\n              isShownWord: true,\n              isUsedTip: true,\n            })}\n            disabled={progress.isGuessed}\n          >\n            {SHOW_ANSWER}\n          </button>\n        )}\n    </div>\n    <div>\n      <button onClick={() => onPrevWord()}>{PREV}</button>\n      <button onClick={() => onNextWord()}>{NEXT}</button>\n    </div>\n  </div>\n);\n\nSideBar.propTypes = {\n  progress: PropTypes.object,\n  word: PropTypes.string,\n  image: PropTypes.string,\n  isShownAnswerButton: PropTypes.bool,\n  isShownImageAssociation: PropTypes.bool,\n  onNextWord: PropTypes.func,\n  onPrevWord: PropTypes.func,\n  onChangeProgress: PropTypes.func,\n};\n\nexport default SideBar;\n","import SideBar from './SideBar.jsx';\n\nexport default SideBar;\n","import CheckedSentense from './CheckedSentense.jsx';\n\nexport default CheckedSentense;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst CheckedSentense = ({ sentence, styles }) => (\n  <p style={styles}>\n    {sentence.map((el, i) => (\n      <span\n        key={i}\n        style={{ color: el.color }}\n      >\n        {el.letter}\n      </span>\n    ))}\n  </p>\n);\n\nCheckedSentense.propTypes = {\n  sentence: PropTypes.array,\n  styles: PropTypes.object,\n};\n\nexport default CheckedSentense;\n","import Word from './Word.jsx';\n\nexport default Word;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  inputField,\n  inputWrapper,\n} from '../../helpers/style-options';\nimport {\n  showDifferenceInWords,\n  prepareRightAnswerStyles,\n  prepareWrongAnswerStyles,\n} from '../../helpers';\nimport CheckedSentense from '../CheckedSentence';\n\nclass Word extends Component {\n  state = {\n    value: '',\n  }\n\n  handleInput = ({ target: { value } }) => {\n    this.setState({ value });\n    const { onChangeProgress, progress: { difference } } = this.props;\n    if (value && difference) {\n      onChangeProgress({ isShownWord: false });\n    }\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const currentWord = this.props.textExample.emphasis;\n    const inputWord = this.state.value;\n    if (currentWord !== inputWord) {\n      this.handleError(currentWord, inputWord);\n    } else {\n      this.handleSuccess();\n    }\n    this.setState({\n      value: '',\n    });\n  }\n\n  handleError = (currentWord, inputWord) => {\n    const difference = showDifferenceInWords(currentWord, inputWord);\n    const { onChangeProgress } = this.props;\n    onChangeProgress({ isShownWord: true, difference });\n    setTimeout(() => {\n      onChangeProgress({ isWordSemiOpacity: true });\n    }, 2000);\n  }\n\n  handleSuccess = () => {\n    const { onChangeProgress, onPlayAudio } = this.props;\n    onChangeProgress({\n      isGuessed: true,\n      isShownWord: true,\n      difference: null,\n    });\n    onPlayAudio();\n  }\n\n  render() {\n    const {\n      progress,\n      textExample,\n      textExampleTranslate,\n      isShownTranslation,\n      onPlayAudio,\n    } = this.props;\n    const { begin, emphasis, end } = textExample;\n    const {\n      isGuessed,\n      isShownWord,\n      isWordSemiOpacity,\n      difference,\n    } = progress;\n    const {\n      value,\n    } = this.state;\n    const wrongAnswerStyles = prepareWrongAnswerStyles(isShownWord, isWordSemiOpacity);\n    const rightAnswerStyles = prepareRightAnswerStyles(isGuessed);\n    const output = difference\n      ? <CheckedSentense sentence={difference} styles={wrongAnswerStyles} />\n      : <span style={rightAnswerStyles}>{emphasis}</span>;\n    return (\n      <div>\n        <div>\n          {isGuessed && <button onClick={() => onPlayAudio('audioExample')}>Play</button>}\n          <span>{begin}</span>\n          <div style={{ position: 'relative', display: 'inline' }}>\n            {output}\n            <form style={inputWrapper} onSubmit={this.handleSubmit}>\n              <input\n                type=\"text\"\n                style={inputField}\n                autoComplete=\"off\"\n                autoFocus=\"on\"\n                disabled={isGuessed}\n                onChange={this.handleInput}\n                value={value}\n              />\n            </form>\n          </div>\n          <span style={{ marginLeft: '10px' }}>{end}</span>\n        </div>\n        <button disabled={!value} onClick={this.handleSubmit}>Проверить ответ</button>\n        {isGuessed && isShownTranslation && <p>{textExampleTranslate}</p>}\n      </div>\n    );\n  }\n}\n\nWord.propTypes = {\n  progress: PropTypes.object,\n  textExampleTranslate: PropTypes.string,\n  textExample: PropTypes.object,\n  isShownTranslation: PropTypes.bool,\n  onChangeProgress: PropTypes.func,\n  onPlayAudio: PropTypes.func,\n};\n\nexport default Word;\n","import WordExtraInfo from './WordExtraInfo.jsx';\n\nexport default WordExtraInfo;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { hideWordStyles, showWordStyles } from '../../helpers/style-options';\n\nconst WordExtraInfo = ({\n  progress,\n  word,\n  wordTranslate,\n  transcription,\n  textMeaning,\n  textMeaningTranslate,\n  isShownTranscription,\n  isShownExampleSentence,\n  isShownMeaning,\n  onPlayAudio,\n}) => {\n  const { begin, emphasis, end } = textMeaning;\n  const { isGuessed } = progress;\n  return (\n    <div>\n      <div>\n        {\n          isGuessed && <div>\n            {/* TODO: Please, replace buton text 'play' to an appropriate icon */}\n            <button onClick={() => onPlayAudio('audio')}>Play</button>\n            <p>{word}</p>\n          </div>\n        }\n        <p>{isGuessed && wordTranslate}</p>\n        {isGuessed && isShownTranscription && <p>{transcription}</p>}\n      </div>\n      {\n        isShownExampleSentence && <div>\n          {/* TODO: Please, replace buton text 'play' to an appropriate icon */}\n          {isGuessed && <button onClick={() => onPlayAudio('audioMeaning')}>Play</button>}\n          <span>{begin}</span>\n          <span style={isGuessed ? showWordStyles : hideWordStyles}>{emphasis}</span>\n          <span>{end}</span>\n        </div>\n      }\n      {isGuessed && isShownMeaning && <div>\n        {/* TODO: Please, replace buton text 'play' to an appropriate icon */}\n        <p>{textMeaningTranslate}</p>\n      </div>}\n    </div>\n  );\n};\n\nWordExtraInfo.propTypes = {\n  progress: PropTypes.object,\n  word: PropTypes.string,\n  wordTranslate: PropTypes.string,\n  transcription: PropTypes.string,\n  textMeaning: PropTypes.object,\n  textMeaningTranslate: PropTypes.string,\n  isShownTranscription: PropTypes.bool,\n  isShownExampleSentence: PropTypes.bool,\n  isShownMeaning: PropTypes.bool,\n  onPlayAudio: PropTypes.func,\n};\n\nexport default WordExtraInfo;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { difficultLabels } from '../../helpers/constants';\nimport { levelsOfDifficulty, applicationThings } from '../../../../../helpers/constants';\nimport {\n  updateUserWordRate,\n  updateUserWordRepeated,\n} from '../../../../../helpers/wordsService';\n\nconst { HARD, NORMAL, EASY } = levelsOfDifficulty;\nconst { HARD_LABEL, NORMAL_LABEL, EASY_LABEL } = difficultLabels;\nconst { LEARN_WORDS } = applicationThings;\n\nconst handleChoseDifficulty = (word, onChangeProgress, level, isFirstPassDone) => {\n  if (isFirstPassDone) {\n    updateUserWordRepeated(word);\n  } else {\n    updateUserWordRate(word, LEARN_WORDS, level);\n  }\n  onChangeProgress({ isDifficultChosen: true });\n};\n\nconst SpacingRepeating = (props) => {\n  const { currentWord, onChangeProgress, isFirstPassDone } = props;\n  return (\n    <div>\n      <button onClick={\n        () => handleChoseDifficulty({ ...currentWord }, onChangeProgress, HARD, isFirstPassDone)}>\n        <span>{HARD_LABEL.word}</span>\n        <span>{HARD_LABEL.repeats}</span>\n      </button>\n      <button onClick={\n        () => handleChoseDifficulty({ ...currentWord }, onChangeProgress, NORMAL, isFirstPassDone)}>\n        <span>{NORMAL_LABEL.word}</span>\n        <span>{NORMAL_LABEL.repeats}</span>\n      </button>\n      <button onClick={\n        () => handleChoseDifficulty({ ...currentWord }, onChangeProgress, EASY, isFirstPassDone)}>\n        <span>{EASY_LABEL.word}</span>\n        <span>{EASY_LABEL.repeats}</span>\n      </button>\n    </div>\n  );\n};\n\nSpacingRepeating.propTypes = {\n  isFirstPassDone: PropTypes.bool,\n  progress: PropTypes.object,\n  currentWord: PropTypes.object,\n  onChangeProgress: PropTypes.func,\n};\n\nexport default SpacingRepeating;\n","import SpacingRepeating from './SpacingRepeating.jsx';\n\nexport default SpacingRepeating;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport StatusBar from '../StatusBar';\nimport SideBar from '../SideBar';\nimport Word from '../Word';\nimport WordExtraInfo from '../WordExtraInfo';\nimport SpacingRepeating from '../SpacingRepeating';\nimport { initialProgressObject } from '../../helpers/settings';\n\nconst WordCard = ({\n  currentWord,\n  isFirstPassDone,\n  currentInput,\n  progress,\n  textExample,\n  textExampleTranslate,\n  isShownTranslation,\n  wordCount,\n  totalWords,\n  isShownComplicatedButton,\n  image,\n  isShownAnswerButton,\n  isShownImageAssociation,\n  word,\n  wordTranslate,\n  transcription,\n  textMeaning,\n  textMeaningTranslate,\n  isShownTranscription,\n  isShownExampleSentence,\n  isShownMeaning,\n  onNextWord,\n  onPrevWord,\n  onChangeProgress,\n  onPlayAudio,\n}) => (\n  <div>\n      <div>\n        <StatusBar\n          progress={progress}\n          onChangeProgress={onChangeProgress}\n          currentWord={currentWord}\n          wordCount={wordCount}\n          totalWords={totalWords}\n          isShownComplicatedButton={isShownComplicatedButton}\n        />\n        <Word\n          progress={progress}\n          textExample={textExample}\n          textExampleTranslate={textExampleTranslate}\n          isShownTranslation={isShownTranslation}\n          onChangeProgress={onChangeProgress}\n          onPlayAudio={onPlayAudio}\n        />\n        <WordExtraInfo\n          progress={progress}\n          word={word}\n          wordTranslate={wordTranslate}\n          transcription={transcription}\n          textMeaning={textMeaning}\n          textMeaningTranslate={textMeaningTranslate}\n          isShownTranscription={isShownTranscription}\n          isShownExampleSentence={isShownExampleSentence}\n          isShownMeaning={isShownMeaning}\n          onPlayAudio={onPlayAudio}\n        />\n        {(progress.isGuessed && !progress.isDifficultChosen)\n          && <SpacingRepeating\n            isFirstPassDone={isFirstPassDone}\n            progress={progress}\n            currentWord={currentWord}\n            onChangeProgress={onChangeProgress}\n            />\n        }\n      </div>\n      <div>\n        <SideBar\n          progress={progress}\n          currentInput={currentInput}\n          word={word}\n          image={image}\n          isShownAnswerButton={isShownAnswerButton}\n          isShownImageAssociation={isShownImageAssociation}\n          onNextWord={onNextWord}\n          onPrevWord={onPrevWord}\n          onChangeProgress={onChangeProgress}\n        />\n      </div>\n  </div>\n);\n\nWordCard.propTypes = {\n  currentWord: PropTypes.object,\n  isFirstPassDone: PropTypes.bool,\n  currentInput: PropTypes.string,\n  progress: PropTypes.object,\n  textExampleTranslate: PropTypes.string,\n  textExample: PropTypes.object,\n  isShownTranslation: PropTypes.bool,\n  wordCount: PropTypes.number,\n  totalWords: PropTypes.number,\n  isShownComplicatedButton: PropTypes.bool,\n  word: PropTypes.string,\n  wordTranslate: PropTypes.string,\n  image: PropTypes.string,\n  isShownAnswerButton: PropTypes.bool,\n  isShownImageAssociation: PropTypes.bool,\n  transcription: PropTypes.string,\n  textMeaning: PropTypes.object,\n  textMeaningTranslate: PropTypes.string,\n  isShownTranscription: PropTypes.bool,\n  isShownExampleSentence: PropTypes.bool,\n  isShownMeaning: PropTypes.bool,\n  onNextWord: PropTypes.func,\n  onPrevWord: PropTypes.func,\n  onChangeProgress: PropTypes.func,\n  onPlayAudio: PropTypes.func,\n};\n\nWordCard.defaultProps = {\n  currentWord: {},\n  isLogged: false,\n  currentInput: '',\n  progress: initialProgressObject,\n  textExampleTranslate: '',\n  textExample: {},\n  isShownTranslation: true,\n  wordCount: 0,\n  totalWords: 0,\n  isShownComplicatedButton: true,\n  image: '',\n  isShownAnswerButton: true,\n  isShownImageAssociation: true,\n  word: '',\n  wordTranslate: '',\n  transcription: '',\n  textMeaning: {},\n  textMeaningTranslate: '',\n  isShownTranscription: true,\n  isShownExampleSentence: true,\n  isShownMeaning: true,\n  onNextWord: () => {},\n  onPrevWord: () => {},\n  onChangeProgress: () => {},\n  onPlayAudio: () => {},\n};\n\nexport default WordCard;\n","import WordCard from './WordCard.jsx';\n\nexport default WordCard;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Header from './Views/Header';\nimport WordCard from './Views/WordCard';\nimport * as settings from './helpers/settings';\nimport {\n  extractEmphasizedWord,\n  getSessionProgress,\n  setSessionProgress,\n  clearSessionProgress,\n  checkSessionProgress,\n  playAudios,\n} from './helpers';\nimport {\n  getDiffAndCoplicatedInProgress,\n} from '../../../helpers/wordsService';\nimport {\n  localStorageItems,\n} from '../../../helpers/constants';\n\nexport default class LearnWords extends Component {\n  state = {\n    wordCount: 0,\n    totalWords: 0,\n    isAutoPlay: true,\n    progress: [],\n    isPlaying: false,\n    isLogged: false,\n    token: '',\n    userId: '',\n    audio: null,\n    isFetching: false,\n    category: 'all',\n    isFirstPassDone: false,\n  };\n\n  componentDidMount() {\n    const { data } = this.props;\n    const { totalWords } = this.state;\n    const { initialProgressObject } = settings;\n    const learnSessionProgress = getSessionProgress();\n    let progress = [];\n    let wordCount;\n    if (totalWords === 0) {\n      if (learnSessionProgress?.length) {\n        progress = learnSessionProgress;\n        wordCount = progress.findIndex((el) => !el.isDifficultChosen);\n      } else {\n        progress = getDiffAndCoplicatedInProgress(data, initialProgressObject);\n        wordCount = 0;\n      }\n      this.setState({\n        totalWords: data.length,\n        guessCount: data.length,\n        progress,\n        wordCount,\n      });\n    }\n    this.checkForLoggedUser();\n  }\n\n  toggleAutoPlay = () => {\n    const { isAutoPlay } = this.state;\n    this.setState({\n      isAutoPlay: !isAutoPlay,\n    });\n  }\n\n  toggleAutoPlay = () => {\n    const { isAutoPlay } = this.state;\n    this.setState({\n      isAutoPlay: !isAutoPlay,\n    });\n  }\n\n  toggleCategory = ({ target: { value } }) => {\n    this.setState({\n      category: value,\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.progress !== prevState.progress) {\n      const { progress } = this.state;\n      setSessionProgress(progress);\n      this.checkForEndOfGame();\n    }\n  }\n\n  toggleCategory = ({ target: { value } }) => {\n    this.setState({\n      category: value,\n    });\n  }\n\n  checkForLoggedUser = () => {\n    if (localStorage?.rslangUserId) {\n      const userId = localStorage.getItem(localStorageItems.userId);\n      const token = localStorage.getItem(localStorageItems.token);\n      this.setState({\n        isLogged: true,\n        token,\n        userId,\n      });\n    }\n  }\n\n  checkForEndOfGame = () => {\n    const { progress, totalWords } = this.state;\n    if (!checkSessionProgress(progress) && totalWords) {\n      clearSessionProgress();\n      // TODO: add modal pop-up with short stats\n    }\n  }\n\n  playAudio = (audioName) => {\n    const { data } = this.props;\n    const { wordCount, isAutoPlay } = this.state;\n    if (audioName) {\n      playAudios(data[wordCount][audioName]);\n    } else if (isAutoPlay) {\n      const { audio, audioMeaning, audioExample } = data[wordCount];\n      playAudios([audio, audioMeaning, audioExample]);\n    }\n  }\n\n  handleNextWord = () => {\n    this.setState((state) => (\n      {\n        wordCount: state.wordCount === state.progress.length - 1 ? 0 : state.wordCount + 1,\n      }\n    ));\n  }\n\n  handlePrevWord = () => {\n    this.setState((state) => (\n      {\n        wordCount: !state.wordCount ? state.progress.length - 1 : state.wordCount - 1,\n      }\n    ));\n  }\n\n  handleChangeProgress = (updated) => {\n    const { progress, wordCount } = this.state;\n    this.setState({\n      progress: progress.map((el, i) => (i === wordCount ? { ...el, ...updated } : el)),\n    });\n  }\n\n  handleEndOfCards = () => {\n    // TODO: maube here will be nice to add some info pop up\n    console.log('end of cards');\n  }\n\n  render() {\n    const { data } = this.props;\n    const {\n      wordCount,\n      totalWords,\n      progress,\n      currentInput,\n      isLogged,\n      isFirstPassDone,\n    } = this.state;\n    const currentWord = data[wordCount];\n    const {\n      textExample,\n      textExampleTranslate,\n      image,\n      word,\n      wordTranslate,\n      transcription,\n      textMeaning,\n      textMeaningTranslate,\n    } = currentWord;\n    const {\n      isShownComplicatedButton,\n      isShownAnswerButton,\n      isShownImageAssociation,\n      isShownTranslation,\n      isShownTranscription,\n      isShownExampleSentence,\n      isShownMeaning,\n      categoriesSelect,\n    } = settings;\n    const textExampleSentence = extractEmphasizedWord(textExample, 'b');\n    const textMeaningSentence = extractEmphasizedWord(textMeaning, 'i');\n    return (\n      <div>\n        <Header\n          categoriesSelect={categoriesSelect}\n          onToggleAutoPlay={this.toggleAutoPlay}\n          onToggleCategory={this.toggleCategory}\n        />\n        <WordCard\n          isFirstPassDone={isFirstPassDone}\n          currentWord={currentWord}\n          isLogged={isLogged}\n          currentInput={currentInput}\n          progress={progress[wordCount]}\n          wordCount={wordCount + 1}\n          totalWords={totalWords}\n          textExample={textExampleSentence}\n          textExampleTranslate={textExampleTranslate}\n          image={image}\n          word={word}\n          wordTranslate={wordTranslate}\n          transcription={transcription}\n          textMeaning={textMeaningSentence}\n          textMeaningTranslate={textMeaningTranslate}\n          isShownComplicatedButton={isShownComplicatedButton}\n          isShownAnswerButton={isShownAnswerButton}\n          isShownImageAssociation={isShownImageAssociation}\n          isShownTranslation={isShownTranslation}\n          isShownTranscription={isShownTranscription}\n          isShownExampleSentence={isShownExampleSentence}\n          isShownMeaning={isShownMeaning}\n          onNextWord={this.handleNextWord}\n          onPrevWord={this.handlePrevWord}\n          onChangeProgress={this.handleChangeProgress}\n          onPlayAudio={this.playAudio}\n        />\n      </div>\n    );\n  }\n}\n\nLearnWords.propTypes = {\n  data: PropTypes.array,\n};\n\nLearnWords.defaultProps = {\n  data: [],\n};\n","import React from 'react';\nimport LearnWordsView from './LearnWords.jsx';\nimport response from './helpers/response.json';\n\nconst LearnWords = () => <LearnWordsView data={response} />\n\nexport default LearnWords;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid, Slider, Input } from '@material-ui/core';\n\nconst useStyles = makeStyles({\n  root: {\n    width: 410,\n    padding: '0px',\n  },\n  colorSecondary: {\n    color: '#000',\n  },\n  input: {\n    width: 42,\n    fontSize: '2rem',\n  },\n});\n\nconst SliderView = () => {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(30);\n\n  const handleSliderChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const handleInputChange = (event) => {\n    setValue(event.target.value === '' ? '' : Number(event.target.value));\n  };\n\n  const handleBlur = () => {\n    if (value < 0) {\n      setValue(0);\n    } else if (value > 100) {\n      setValue(100);\n    }\n  };\n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={2} alignItems=\"center\">\n        <Grid item xs>\n          <Slider\n            value={typeof value === 'number' ? value : 0}\n            onChange={handleSliderChange}\n            aria-labelledby=\"input-slider\"\n          />\n        </Grid>\n        <Grid item>\n          <Input\n            className={classes.input}\n            value={value}\n            margin=\"dense\"\n            onChange={handleInputChange}\n            onBlur={handleBlur}\n            inputProps={{\n              step: 10,\n              min: 0,\n              max: 100,\n              type: 'number',\n              'aria-labelledby': 'input-slider',\n            }}\n          />\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default SliderView;\n","import Slider from './SliderView.jsx';\n\nexport default Slider;\n","import LinearProgress from './LinearProgressView.jsx';\n\nexport default LinearProgress;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nconst LinearProgressView = ({ done = 25, all = 100, className = '' }) => {\n  const filledWidth = Math.round((done / all) * 100);\n  const classes = classNames({\n    'linear-progress': true,\n    [className]: true,\n  });\n\n  return (\n    <div className={classes}>\n      <div style={ { width: `${filledWidth}%` } } className=\"linear-progress__filled\" />\n    </div>\n  );\n};\n\nLinearProgressView.propTypes = {\n  done: PropTypes.number,\n  all: PropTypes.number,\n  className: PropTypes.string,\n};\n\nexport default LinearProgressView;\n","import LearnWordCardPreview from './LearnWordCardView.jsx';\n\nexport default LearnWordCardPreview;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport classNames from 'classnames';\n\nimport LinearProgress from '../../basicComponents/LinearProgress';\n\nconst LearnWordCardView = ({ previewSettings }) => {\n  const {\n    translation: translationVisibility,\n    complicatedButton: complicatedButtonVisibility,\n    imageAssociatation: imageAssociatationVisibility,\n    meaning: meaningVisibility,\n    transcription: transcriptionVisibility,\n    showAnswerButton: showAnswerButtonVisibility,\n    exampleSentence: exampleSentenceVisibility,\n  } = previewSettings;\n\n  const translationItemClasses = classNames({\n    'learn-word-card-info__sentence-translation': true,\n    hidden: !translationVisibility,\n  });\n  const complicatedButtonItemClasses = classNames({\n    'learn-word-status-settings__complicated': true,\n    hidden: !complicatedButtonVisibility,\n  });\n  const imageAssociatationItemClasses = classNames({\n    'learn-word-card-control': true,\n    'without-bg': !imageAssociatationVisibility,\n  });\n  const meaningItemClasses = classNames({\n    'learn-word-card-info__explanation': true,\n    hidden: !meaningVisibility,\n  });\n  const transcriptionItemClasses = classNames({\n    'target-learn-word-container__transcription': true,\n    hidden: !transcriptionVisibility,\n  });\n  const showAnswerButtonItemClasses = classNames({\n    'learn-word-card-control__show-answer-button': true,\n    hidden: !showAnswerButtonVisibility,\n  });\n  const exampleSentenceItemClasses = classNames({\n    'learn-word-card-info__example-sentence': true,\n    hidden: !exampleSentenceVisibility,\n  });\n\n  return (\n    <div className=\"learn-word-card-wrapper\">\n      <LinearProgress />\n      <div className=\"learn-word-card\">\n        <div className=\"learn-word-card-info\">\n          <div className=\"learn-word-card-general-info\">\n            <p className=\"learn-word-card-general-info__all-done\">15/60</p>\n            <div className=\"learn-word-status-settings\">\n              <div className={complicatedButtonItemClasses}><span></span>Complicated</div>\n              <div className=\"learn-word-status-settings__remove\"><span></span>Remove</div>\n            </div>\n          </div>\n          <p className=\"learn-word-card-sentence\">\n            I <span className=\"learn-word-card-sentence__target-word\">run</span> every morning\n          </p>\n          <p className={translationItemClasses}>Я бегаю каждое утро</p>\n          <div className=\"line learn-word-card-info__line\"></div>\n          <div className=\"target-learn-word-container\">\n            <p className=\"target-learn-word-container__target-word\">run</p>\n            <p className={transcriptionItemClasses}>/rən/</p>\n          </div>\n          <p className={meaningItemClasses}>Move at a speed faster than a walk</p>\n          <p className={exampleSentenceItemClasses}>It would have been easier to run off</p>\n        </div>\n        <div className={imageAssociatationItemClasses}>\n          <div className={showAnswerButtonItemClasses}>Show answer</div>\n          <div className=\"flip-buttons-container\">\n            <div className=\"flip-buttons-container__prev-button\">← prev</div>\n            <div className=\"flip-buttons-container__next-button\">next →</div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nLearnWordCardView.propTypes = {\n  previewSettings: PropTypes.object,\n};\n\nconst mapStateToProps = ({ learnCardPreviewSettings }) => (\n  {\n    previewSettings: learnCardPreviewSettings,\n  }\n);\n\nexport default connect(mapStateToProps)(LearnWordCardView);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nconst CheckboxView = ({ checked = false, onChange, className = '' }) => {\n  const classes = classNames({\n    checkbox: true,\n    [className]: true,\n  });\n\n  return (\n    <input\n      onChange={onChange}\n      defaultChecked={checked}\n      className={classes}\n      type=\"checkbox\"/>\n  );\n};\n\nCheckboxView.propTypes = {\n  checked: PropTypes.bool,\n  onChange: PropTypes.func,\n  className: PropTypes.string,\n};\n\nexport default CheckboxView;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { learnCardPreviewSettingsChanged } from '../../redux/actions';\nimport CheckboxView from './CheckboxView.jsx';\n\nconst Checkbox = (props) => {\n  const { previewSettingName = null, settingChanged } = props;\n  const onChange = previewSettingName && settingChanged.bind(null, previewSettingName);\n  return <CheckboxView {...props} onChange={onChange} />;\n};\n\nCheckbox.propTypes = {\n  previewSettingName: PropTypes.string,\n  settingChanged: PropTypes.func,\n};\n\nconst mapDispatchToProps = (dispatch) => (\n  {\n    settingChanged: (previewSettingName) => {\n      dispatch(\n        learnCardPreviewSettingsChanged(previewSettingName),\n      );\n    },\n  }\n);\n\nexport default connect(undefined, mapDispatchToProps)(Checkbox);\n","const learnCardPreviewSettingsChanged = (changedSetting) => (\n  {\n    type: 'LEARN_CARD_PREVIEW_SETTINGS_CHANGED',\n    payload: changedSetting,\n  }\n);\n\nexport {\n  learnCardPreviewSettingsChanged,\n};\n","import SettingsPage from './SettingsPage.jsx';\n\nexport default SettingsPage;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport Slider from '../../../basicComponents/Slider';\nimport LearnWordCardPreview from '../../LearnWordCardPreview';\nimport Checkbox from '../../../basicComponents/Checkbox';\n\nimport { pagesData } from '../../../helpers/constants'\n\nconst SettingsPage = (props) => {\n  const {\n    translation: translationVisibility,\n    complicatedButton: complicatedButtonVisibility,\n    imageAssociatation: imageAssociatationVisibility,\n    meaning: meaningVisibility,\n    transcription: transcriptionVisibility,\n    showAnswerButton: showAnswerButtonVisibility,\n    exampleSentence: exampleSentenceVisibility,\n  } = props.previewSettings;\n  return (\n    <section className=\"settings-page\">\n      <h2 className=\"settings_page__title\">{pagesData.settings.title}</h2>\n      <div className=\"words-settings\">\n        <h4 className=\"words-settings__title\">Сколько слов учить в день</h4>\n        <div className=\"max-words-per-day-settings\">\n          <p className=\"max-words-per-day-settings__title\">Всего</p>\n          <Slider />\n        </div>\n        <div className=\"new-words-per-day-settings\">\n          <p className=\"new-words-per-day-settings__title\">Новых</p>\n          <Slider />\n        </div>\n      </div>\n      <div className=\"learn-card-preview\">\n        <h4 className=\"learn-card-preview__title\">Что показывать на карточке слова</h4>\n        <div className=\"preview-settings\">\n          <label className=\"preview-settings__setting translation\">\n            <Checkbox previewSettingName=\"translation\" checked={translationVisibility}/>Перевод\n          </label>\n          <label className=\"preview-settings__setting complicated-button\">\n            <Checkbox previewSettingName=\"complicatedButton\" checked={complicatedButtonVisibility}/>Кнопка «Сложные»\n          </label>\n          <label className=\"preview-settings__setting image-associatation\">\n            <Checkbox previewSettingName=\"imageAssociatation\" checked={imageAssociatationVisibility}/>Картинка для ассоциации\n          </label>\n          <label className=\"preview-settings__setting meaning\">\n            <Checkbox previewSettingName=\"meaning\" checked={meaningVisibility}/>Значение\n          </label>\n          <label className=\"preview-settings__setting transcription\">\n            <Checkbox previewSettingName=\"transcription\" checked={transcriptionVisibility}/>Транскрипция\n          </label>\n          <label className=\"preview-settings__setting show-answer-button\">\n            <Checkbox previewSettingName=\"showAnswerButton\" checked={showAnswerButtonVisibility}/>Кнопка «Показать ответ»\n          </label>\n          <label className=\"preview-settings__setting example-sentence\">\n            <Checkbox previewSettingName=\"exampleSentence\" checked={exampleSentenceVisibility}/>Пример предложения\n          </label>\n        </div>\n        <LearnWordCardPreview />\n      </div>\n    </section>\n  );\n};\n\nSettingsPage.propTypes = {\n  previewSettings: PropTypes.object,\n};\n\nconst mapStateToProps = ({ learnCardPreviewSettings }) => (\n  {\n    previewSettings: learnCardPreviewSettings,\n  }\n);\n\nexport default connect(mapStateToProps)(SettingsPage);\n","import StatisticsPage from './StatisticPage.jsx';\n\nexport default StatisticsPage;\n","import React from 'react';\nimport {pagesData} from \"../../../helpers/constants\";\n\nconst StatisticsPage = () => (\n  <div>\n    <h1>{pagesData.statistics.title}</h1>\n    <ul>\n      <li className=\"text\">1</li>\n      <li className=\"text\">2</li>\n      <li className=\"text\">3</li>\n    </ul>\n  </div>\n);\nexport default StatisticsPage;\n","import PromoPage from './PromoPage.jsx';\n\nexport default PromoPage;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Button from '../../../basicComponents/Button';\nimport {\n  pagesData,\n  text,\n} from '../../../helpers/constants';\n\nconst PromoPageView = () => (\n  <div className=\"promo-page\">\n    <section className=\"demonstration-container\">\n      <p className=\"demonstration-container__title\">Что это и почему понравится пользователю</p>\n      <video className=\"demonstration-container__video\" controls>\n        <source src=\"https://www.w3schools.com/html/mov_bbb.mp4\"/>\n        Извините, ваш браузер не поддерживает встроенное видео\n      </video>\n      <Link to={ pagesData.learnWords.path }>\n        <Button\n          className=\"demonstration-container__start-button\"\n          value={ text.ru.button.learnEnglishWithUs }\n        />\n      </Link>\n    </section>\n  </div>\n);\n\nexport default PromoPageView;\n","import GameCard from './GameCardView.jsx';\n\nexport default GameCard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nimport Button from '../../basicComponents/Button';\nimport {getPath} from \"../../helpers/functions\";\n\nconst GameCardView = ({ data: { title, description, path, startPath } }) => (\n    <div className=\"game-card\">\n      <h5 className=\"game-card__title\">{title}</h5>\n      <p className=\"game-card__description\">{description}</p>\n      <Link className=\"link-btn game-card__link-button-container\" to={\n        getPath(startPath ?? path)\n      }>\n        <Button type=\"secondary\" value={`${title} →`}/>\n      </Link>\n    </div>\n);\n\nGameCardView.propTypes = {\n  data: PropTypes.object,\n};\n\nexport default GameCardView;\n","import React from 'react';\n\nimport { gamesData } from '../../../helpers/constants';\n\nimport GameCard from '../../GameCard';\n\nconst renderGames = (data, index) => <GameCard data={data} key={index} />;\n\nconst PlayGamesPage = () => (\n    <section className=\"play-games\">\n      <h2 className=\"play-games__title\">Выберите игру</h2>\n      <div className=\"games-cards-container\">\n        {\n          Object.values(gamesData).map(renderGames)\n        }\n      </div>\n    </section>\n);\n\nexport default PlayGamesPage;\n","import PlayGamesPage from './PlayGamesPage.jsx';\n\nexport default PlayGamesPage;\n","import React from 'react';\n\nconst WordCardView = ( { wordData, playSound, restoreWord } ) => {\n  const onPlaySound = () => {\n    playSound();\n  }\n\n  const onRestoreWord = () => {\n    restoreWord(wordData.id);\n  }\n\n  const createMarkup = ( markup ) => {\n    return {__html: markup};\n  }\n\n  return (\n    <div className=\"word-card-container\">\n      <div className=\"word-card-preview-wrapper\">\n        <div className=\"word-card-preview\">\n          <img className=\"word-card-preview__img\" src = { wordData.image } alt=\"word\" />\n          <div className=\"word-card-main-info\">\n            <div className=\"target-word-wrapper\">\n              <p className=\"target-word-wrapper__word\">{ wordData.word }</p>\n              <p className=\"target-word-wrapper__translation\">{ wordData.wordTranslate }</p>\n            </div>\n            <button className=\"word-card-main-info__pronunciation-button\" onClick={ onPlaySound }></button>\n          </div>\n        </div>\n        <button className=\"word-card-preview-wrapper__restore-button\" onClick={ onRestoreWord }>Restore for learning</button>\n      </div>\n      <div className=\"word-card-additional-info\">\n        <p className=\"word-card-additional-info__transciption\">{`/ ${wordData.transcription} /`}</p>\n        <p className=\"word-card-additional-info__meaning\" dangerouslySetInnerHTML = { createMarkup(wordData.textMeaning) }></p>\n        <p className=\"word-card-additional-info__example-sentence\" dangerouslySetInnerHTML = { createMarkup(wordData.textExample) }></p>\n      </div>\n    </div>\n  )\n}\n\nexport default WordCardView;\n","import React from 'react';\nimport WordCardView from './WordCard.jsx';\n\nconst WordCard = ( { wordData } ) => {\n  const audio = new Audio( wordData.audioExample ) //mp3 URL from state\n\n  const playSound = () => {\n    audio.play();\n  }\n\n  const restoreWord = (id) => {\n    // TODO This function will change State\n  }\n\n  return (\n    <WordCardView \n      wordData = { wordData }\n      playSound = { playSound }\n      restoreWord = { restoreWord }\n    />\n  ) \n}\n\nexport default WordCard;\n","import React from 'react';\nimport WordCard from './WordCard';\nimport { pagesData } from \"../../../helpers/constants\";\n\nconst VocabularyView = ( { selectorOptions, changeVocabularyType, selectedOption, words } ) => {\n  const options = selectorOptions.map( ([ key, value ]) => <option value={ key } key={ key }> { value } </option> );\n  const cards = words.map( (word) => <WordCard wordData={ word } key={ word.id } />)\n\n  const onSelectorChange = ( e ) => {\n    e.persist();\n    changeVocabularyType( e );\n  };\n\n  return (\n    <div>\n      <h1>{pagesData.vocabulary.title}</h1>\n      <select className=\"vocabulary-selector\" onChange={ ( e ) => onSelectorChange( e ) }\n        value={ selectedOption } >\n        { options }\n      </select>\n      <div className=\"cards-container\"> { cards } </div>\n    </div>\n  )\n}\n\nexport default VocabularyView;\n","export const wordsData = [\n  {\n    id: '5e9f5ee35eb9e72bc21af70c',\n    group: 1,\n    page: 1,\n    word: 'anxious',\n    image: 'files/02_0621.jpg',\n    audio: 'files/02_0621.mp3',\n    audioMeaning: 'files/02_0621_meaning.mp3',\n    audioExample: 'files/02_0621_example.mp3',\n    textMeaning: '<i>Anxious</i> means feeling worried or nervous.',\n    textExample: 'She was <b>anxious</b> about not making her appointment on time.',\n    transcription: '[ǽŋkʃəs]',\n    textExampleTranslate: 'Она беспокоилась о том, чтобы не договориться о встрече вовремя',\n    textMeaningTranslate: 'Тревожно означает чувствовать себя обеспокоенным или нервным',\n    wordTranslate: 'озабоченный',\n    wordsPerExampleSentence: 10,\n  },\n  {\n    id: '5e9f5ee35eb9e72bc21af70d',\n    group: 1,\n    page: 1,\n    word: 'awful',\n    image: 'files/02_0622.jpg',\n    audio: 'files/02_0622.mp3',\n    audioMeaning: 'files/02_0622_meaning.mp3',\n    audioExample: 'files/02_0622_example.mp3',\n    textMeaning: 'An <i>awful</i> thing is very bad.',\n    textExample: 'Her performance last night was <b>awful</b>.',\n    transcription: '[ɔ́ːfəl]',\n    textExampleTranslate: 'Ее выступление прошлой ночью было ужасным',\n    textMeaningTranslate: 'Ужасно очень плохо',\n    wordTranslate: 'ужасный',\n    wordsPerExampleSentence: 6,\n  },\n  {\n    id: '5e9f5ee35eb9e72bc21af70e',\n    group: 1,\n    page: 1,\n    word: 'consist',\n    image: 'files/02_0623.jpg',\n    audio: 'files/02_0623.mp3',\n    audioMeaning: 'files/02_0623_meaning.mp3',\n    audioExample: 'files/02_0623_example.mp3',\n    textMeaning: 'To <i>consist</i> of certain is to be made of parts or things them.',\n    textExample: 'Today’s choices for lunch <b>consisted</b> of pizza, hamburgers, and hot dogs.',\n    transcription: '[kənsíst]',\n    textExampleTranslate: 'Сегодняшний выбор на обед состоял из пиццы, гамбургеров и хот-догов',\n    textMeaningTranslate: 'Быть состоящим из определенного означает быть составленным из частей или вещей из них',\n    wordTranslate: 'состоят',\n    wordsPerExampleSentence: 11,\n  },\n  {\n    id: '5e9f5ee35eb9e72bc21af70f',\n    group: 1,\n    page: 1,\n    word: 'desire',\n    image: 'files/02_0624.jpg',\n    audio: 'files/02_0624.mp3',\n    audioMeaning: 'files/02_0624_meaning.mp3',\n    audioExample: 'files/02_0624_example.mp3',\n    textMeaning: 'To <i>desire</i> is to want something.',\n    textExample: 'My sister <b>desires</b> a big house and lots of money.',\n    transcription: '[dizáiər]',\n    textExampleTranslate: 'Моя сестра хочет большой дом и много денег',\n    textMeaningTranslate: 'Желать - значит хотеть чего-то',\n    wordTranslate: 'желание',\n    wordsPerExampleSentence: 10,\n  },\n  {\n    id: '5e9f5ee35eb9e72bc21af710',\n    group: 1,\n    page: 1,\n    word: 'eager',\n    image: 'files/02_0625.jpg',\n    audio: 'files/02_0625.mp3',\n    audioMeaning: 'files/02_0625_meaning.mp3',\n    audioExample: 'files/02_0625_example.mp3',\n    textMeaning: '<i>Eager</i> shows excitement about something.',\n    textExample: 'The man was <b>eager</b> to talk about the good news.',\n    transcription: '[íːgər]',\n    textExampleTranslate: 'Человек стремился говорить о хороших новостях',\n    textMeaningTranslate: 'Стремление показывает волнение о чем-то',\n    wordTranslate: 'нетерпеливый',\n    wordsPerExampleSentence: 10,\n  },\n];\n","import React from 'react';\nimport VocabularyView from './VocabularyPage.jsx';\nimport { selectorOptions } from '../../../helpers/constants';\nimport { wordsData } from '../../../helpers/wordsData';\n\nconst VocabularyPage = ( props ) => {\n\n  const changeVocabularyType = (e) => {\n    //TODO: This function will change vocabulary type in State\n  }\n\n  return (\n      <VocabularyView\n        words = { wordsData }\n        selectorOptions = { selectorOptions }\n        changeVocabularyType = { changeVocabularyType }\n        selectedOption = { \"removed\" } // TODO: replace selectedOption with state data\n      />\n  )\n}\n\n\nexport default VocabularyPage;\n","import Input from './InputView.jsx';\n\nexport default Input;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Input from '@material-ui/core/Input';\n\nconst InputView = ({\n  placeholder = '',\n  className = '',\n  onChange,\n  type,\n  error,\n  required,\n}) => (\n  <Input\n    error={error}\n    required={required}\n    className={className}\n    classes={{ input: 'input' }}\n    placeholder={placeholder}\n    onChange={onChange}\n    type={type}\n  />\n\n);\n\nInputView.propTypes = {\n  className: PropTypes.string,\n  placeholder: PropTypes.string,\n  type: PropTypes.string,\n  onChange: PropTypes.func,\n  error: PropTypes.bool,\n  required: PropTypes.bool,\n};\n\nexport default InputView;\n","import React, { Component } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Input from '../../../basicComponents/Input';\nimport Button from '../../../basicComponents/Button';\nimport { auth } from '../../../redux/actions/auth';\n\nimport {\n  pagesData,\n  text,\n} from '../../../helpers/constants';\n\nconst initialState = {\n  email: '',\n  password: '',\n  repeatPass: '',\n  userId: '',\n  emailValid: true,\n};\n\nclass SignInPage extends Component {\n  state = { ...initialState };\n\n  isEmailValid = (mail) => {\n    // eslint-disable-next-line no-control-regex\n    const reg = /^([a-zA-Z0-9_\\-.]+)@([a-zA-Z0-9_\\-.]+)\\.([a-zA-Z]{2,5})$/g;\n    this.setState({ emailValid: reg.test(String(mail)) });\n  };\n\n  onChangeEmail = (e) => {\n    this.setState({ email: e.target.value });\n    this.isEmailValid(e.target.value);\n  };\n\n  onChangePass = (e) => {\n    this.setState({ password: e.target.value });\n  };\n\n  onSubmitForm = async (event) => {\n    const { email, password } = this.state;\n    try {\n      event.preventDefault();\n      this.props.auth(email, password);\n    } catch (e) {\n      console.log(e);\n      // TODO handle error for showing user\n    }\n  };\n\n  render() {\n    const { emailValid } = this.state;\n    const { token } = this.props;\n    if (token) {\n      return (<Redirect to={`/${pagesData.learnWords.path}`} />);\n    }\n    return (\n      <section className=\"sign-in-page\">\n        <h1>{ pagesData.signIn.title }</h1>\n        <form className=\"sign-in-form\" onSubmit={this.onSubmitForm}>\n          <Input\n            error={!emailValid}\n            placeholder={ text.ru.email }\n            className=\"sign-in-form__email\"\n            onChange={this.onChangeEmail}\n          />\n          <Input\n            type=\"password\"\n            placeholder={ text.ru.password }\n            className=\"sign-in-form__password\"\n            onChange={this.onChangePass}\n          />\n          <Button value={ pagesData.signIn.title } className=\"sign-in-form__button\" />\n        </form>\n        <p className=\"sign-in-page-additional-info\">\n          { text.ru.firstTimeOrForgotPassword } <Link\n          className=\"sign-in-page-additional-info__sign-up-link\"\n          to={ `/${pagesData.register.path}` }\n        >\n          { pagesData.register.title }\n        </Link>\n        </p>\n      </section>\n    );\n  }\n}\nfunction mapDispatchToProps(dispatch) {\n  return {\n    auth: (email, password) => dispatch(auth(email, password)),\n  };\n}\nfunction mapStateToProps(state) {\n  return {\n    token: state.auth.token,\n  };\n}\n\nSignInPage.propTypes = {\n  token: PropTypes.string,\n  auth: PropTypes.func,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignInPage);\n","import SignInPage from './SignInPage.jsx';\n\nexport default SignInPage;\n","import axios from 'axios';\nimport { connect } from 'react-redux';\nimport {\n  apiLinks,\n  localStorageItems,\n} from '../constants';\n\nconst getToken = (props) => props?.token;\n\nexport const axiosuser = axios.create({\n  baseURL: apiLinks.base,\n  headers: {\n    Authorization: `Bearer ${localStorage.getItem(localStorageItems.token) || getToken()}`,\n    Accept: 'application/json',\n    'Content-Type': 'application/json',\n  },\n});\n\nfunction mapStateToProps(state) {\n  return {\n    token: state.auth.token,\n    userId: state.auth.userId,\n  };\n}\n\nexport default connect(mapStateToProps)(getToken);\n","import { axiosuser } from './axiosUser';\n\nimport {\n  apiLinks,\n  text,\n  localStorageItems,\n} from '../constants';\n\nimport { getTokenLifetimeInMs } from '../functions';\n\nconst getAuthHeader = () => ({\n  headers: {\n    Authorization: `Bearer ${localStorage.getItem(localStorageItems.token)}`,\n    Accept: 'application/json',\n    'Content-Type': 'application/json',\n  },\n});\n\nexport default class UserService {\n  registerUser = async (user) => {\n    try {\n      const rawResponse = await fetch(`${apiLinks.base}users`, {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(user),\n      });\n      return rawResponse.json();\n    } catch (e) {\n      console.error(e);\n      // TODO handle error for showing user\n      return false;\n    }\n  };\n\n  loginUser = async ({ email, password }) => {\n    let result;\n    try {\n      const authData = { email, password };\n      const response = await axiosuser.post('signin', authData);\n      const refreshTokenDate = new Date(new Date().getTime() + getTokenLifetimeInMs());\n      localStorage.setItem(localStorageItems.token, response.data.token);\n      localStorage.setItem(localStorageItems.userId, response.data.userId);\n      localStorage.setItem(localStorageItems.refreshTokenDate, refreshTokenDate);\n      result = response.data;\n    } catch (e) {\n      // TODO Delete alert, add error message below the H1 title\n      alert(text.ru.userUndefined);\n    }\n    return result;\n  }\n\n  getUserById = async (userId) => {\n    const response = await axiosuser.get(`users/${userId}`);\n    return response.data;\n  }\n\n  updateUserById = async (userId) => {\n    try {\n      await fetch(`${apiLinks.base}users/${userId}`, {\n        method: 'PUT',\n        withCredentials: true,\n        ...getAuthHeader(),\n      });\n    } catch (e) {\n      console.error(e);\n      // TODO: implement errors' handler\n    }\n  }\n\n  createUserWord = async ({ userId, wordId, word }) => {\n    try {\n      await fetch(`${apiLinks.base}users/${userId}/words/${wordId}`, {\n        method: 'POST',\n        withCredentials: true,\n        ...getAuthHeader(),\n        body: JSON.stringify(word),\n      });\n    } catch (e) {\n      console.error(e);\n      // TODO: implement errors' handler\n    }\n  };\n\n  getUserWordById = async ({ userId, wordId }) => {\n    const rawResponse = axiosuser.get(`users/${userId}/words/${wordId}`);\n    const content = await rawResponse;\n    return content.data;\n  };\n\n  updateUserWordById = async ({ userId, wordId, word }) => {\n    try {\n      await fetch(`${apiLinks.base}users/${userId}/words/${wordId}`, {\n        method: 'PUT',\n        withCredentials: true,\n        ...getAuthHeader(),\n        body: JSON.stringify(word),\n      });\n    } catch (e) {\n      console.error(e);\n      // TODO: implement errors' handler\n    }\n  };\n\n  deleteUserWordById = async ({ userId, wordId }) => {\n    await axiosuser.delete(`users/${userId}/words/${wordId}`);\n  };\n\n  getUserAllWords = async (userId) => {\n    const rawResponse = axiosuser.get(`users/${userId}/words`);\n    const content = await rawResponse;\n    return content.data;\n  };\n\n  getAllUserWordsArray = async (userId) => {\n    const result = [];\n    const allWords = await this.getUserAllWords(userId);\n    if (allWords.length) {\n      allWords.forEach((wordCard) => {\n        result.push(wordCard.word);\n      });\n    }\n    return result;\n  }\n\n  getUserWordsNoRemoved = async (userId) => {\n    const result = [];\n    const getAllWords = await this.getUserAllWords(userId);\n    if (getAllWords.length) {\n      getAllWords.forEach((wordCard) => {\n        if (!wordCard.optional.removed) {\n          result.push(wordCard.word);\n        }\n      });\n    }\n    return result;\n  }\n\n  // TODO need method: get words without duplicates\n\n  createUserStatistics = async ({ userId, option }) => {\n    try {\n      await fetch(`${apiLinks.base}users/${userId}/statistics`, {\n        method: 'PUT',\n        withCredentials: true,\n        ...getAuthHeader(),\n        body: JSON.stringify(option),\n      });\n    } catch (e) {\n      console.error(e);\n      // TODO: implement errors' handler\n    }\n  };\n\n  getUserStatistics = async (userId) => {\n    const rawResponse = axiosuser.get(`users/${userId}/statistics`);\n    const content = await rawResponse;\n    Object.keys(content.data.optional).forEach((x) => {\n      content.data.optional[x] = JSON.parse(content.data.optional[x]);\n    });\n    return content.data;\n  };\n\n  createUserSettings = async ({ userId, option }) => {\n    try {\n      await fetch(`${apiLinks.base}users/${userId}/settings`, {\n        method: 'PUT',\n        withCredentials: true,\n        ...getAuthHeader(),\n        body: JSON.stringify(option),\n      });\n    } catch (e) {\n      console.error(e);\n      // TODO: implement errors' handler\n    }\n  };\n\n  getUserSettings = async (userId) => {\n    const rawResponse = axiosuser.get(`users/${userId}/settings`);\n    const content = await rawResponse;\n    Object.keys(content.data.optional).forEach((x) => {\n      content.data.optional[x] = JSON.parse(content.data.optional[x]);\n    });\n    return content.data;\n  };\n\n  getUserWordsFilter = async ({ userId, token, filter }) => {\n    const url = new URL(apiLinks.base);\n    url.pathname = `users/${userId}/aggregatedWords`;\n    url.searchParams.append('filter', JSON.stringify(filter));\n    const headers = new Headers();\n    headers.append('Accept', 'application/json');\n    headers.append('Authorization', `Bearer ${token}`);\n    const result = await fetch(url, { headers });\n    const data = await result.json();\n    return data[0];\n  }\n}\n","import React, { Component } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport Input from '../../../basicComponents/Input';\nimport Button from '../../../basicComponents/Button';\nimport UserService from '../../../helpers/userService';\nimport { text, pagesData } from '../../../helpers/constants';\n\nconst userService = new UserService();\n\nconst initialState = {\n  email: '',\n  name: '',\n  password: '',\n  repeatPass: '',\n  userId: '',\n  emailValid: true,\n  nickValid: true,\n  passValid: true,\n  passRepeatValid: true,\n  formValid: false,\n};\n\nclass SignUpPage extends Component {\n  state = { ...initialState };\n\n  isPassValid = (pass) => {\n    const reg = /(?=.*[0-9])(?=.*[!@#$%^&*])(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z!@#$%^&*]{8,}/g;\n    this.setState({ passValid: reg.test(String(pass)) });\n  };\n\n  isNickValid = (nick) => {\n    const reg = /^[a-zA-Z0-9._-]{3,15}$/g;\n    this.setState({ nickValid: reg.test(String(nick)) });\n  };\n\n  isEmailValid = (mail) => {\n    const reg = /^([a-zA-Z0-9_\\-.]+)@([a-zA-Z0-9_\\-.]+)\\.([a-zA-Z]{2,5})$/g;\n    this.setState({ emailValid: reg.test(String(mail)) });\n  };\n\n  isFormValid = () => {\n    const {\n      emailValid, passValid, passRepeatValid, nickValid,\n    } = this.state;\n    return emailValid && passValid && passRepeatValid && nickValid;\n  };\n\n  onChangeEmail = (e) => {\n    this.setState({ email: e.target.value });\n    this.isEmailValid(e.target.value);\n  };\n\n  onChangeNick = (e) => {\n    this.setState({ name: e.target.value });\n    this.isNickValid(e.target.value);\n  };\n\n  onChangePass = (e) => {\n    this.setState({ password: e.target.value });\n    this.isPassValid(e.target.value);\n  };\n\n  onChangeRepeatPass = (e) => {\n    this.isFormValid();\n    this.setState({ repeatPass: e.target.value });\n    if (this.state.password !== e.target.value) {\n      this.setState({ passRepeatValid: false });\n    } else { this.setState({ passRepeatValid: true }); }\n  };\n\n  onSubmitForm = async (e) => {\n    const {\n      name, email, password, repeatPass,\n    } = this.state;\n    e.preventDefault();\n    if (password === repeatPass) {\n      const data = await userService.registerUser({ name, email, password });\n      this.setState({ userId: data.id });\n    }\n  };\n\n  render() {\n    const {\n      nickValid, emailValid, passValid, passRepeatValid, userId,\n    } = this.state;\n    if (userId) {\n      return (<Redirect to={'/sign-in'} />);\n    }\n    return (\n      <section className=\"sign-up-page\">\n        <h1>{ pagesData.register.title }</h1>\n        <form className=\"sign-up-form\" onSubmit={this.onSubmitForm}>\n          <Input\n            required\n            error={!nickValid}\n            placeholder={ text.ru.nickname }\n            className=\"sign-up-form__email\"\n            onChange={this.onChangeNick} />\n          <Input\n            required\n            error={!emailValid}\n            placeholder={ text.ru.email }\n            className=\"sign-up-form__email\"\n            onChange={this.onChangeEmail} />\n          <Input\n            required\n            error={!passValid}\n            placeholder={ text.ru.password }\n            className=\"sign-up-form__password\"\n            onChange={this.onChangePass}\n            type=\"password\" />\n          <Input\n            required\n            error={!passRepeatValid}\n            placeholder={ text.ru.repeatPassword }\n            className=\"sign-up-form__repeat-password\"\n            onChange={this.onChangeRepeatPass}\n            type=\"password\" />\n\n          <Button\n            value={ pagesData.register.title }\n            className=\"sign-up-form__button\"\n            disabled={!this.isFormValid()} />\n\n        </form>\n        <p className=\"sign-up-page-additional-info\">\n          { text.ru.alreadyRegistered } <Link\n          className=\"sign-up-page-additional-info__sign-in-link\"\n          to=\"/sign-in\">\n          {pagesData.signIn.title}\n        </Link>\n        </p>\n      </section>\n    );\n  }\n}\n\nexport default SignUpPage;\n","import SignUpPage from './SignUpPage.jsx';\n\nexport default SignUpPage;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { VolumeUpRounded } from '@material-ui/icons';\nimport { IconButton } from '@material-ui/core';\nimport classNames from 'classnames';\nimport style from './QuestionView.module.scss';\n\nconst QuestionView = ({\n  isFalseAnswer,\n  isRightAnswer,\n  srcImage,\n  id,\n  word,\n  audioElement,\n}) => {\n  const iconClasses = classNames({ [style.volumeUpRounded]: !isFalseAnswer && !isRightAnswer });\n  const wordClasses = classNames(style.word, { [style.hidden]: !isFalseAnswer && !isRightAnswer });\n  const pictureClasses = classNames(\n    style.picture,\n    { [style.hidden]: !isFalseAnswer && !isRightAnswer },\n  );\n\n  return (\n    <div className={style.container} dataid= {id}>\n      <img src={srcImage} alt={word} className={pictureClasses}/>\n      <div className={style.description}>\n        <IconButton aria-label=\"audio\" className={style.iconButton} onClick = {() => audioElement.play()}>\n          <VolumeUpRounded fontSize=\"large\" className={iconClasses}/>\n        </IconButton>\n        <p className={wordClasses}>{word}</p>\n      </div>\n    </div>\n  );\n};\n\nQuestionView.propTypes = {\n  isFalseAnswer: PropTypes.bool,\n  isRightAnswer: PropTypes.bool,\n  srcImage: PropTypes.string,\n  id: PropTypes.string,\n  word: PropTypes.string,\n  audioElement: PropTypes.object,\n};\n\nexport default QuestionView;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { getFilePath } from '../../../../helpers/functions';\nimport QuestionView from './QuestionView.jsx';\n\nconst Question = (props) => {\n  const {\n    question, isFalseAnswer, isRightAnswer,\n  } = props;\n  const {\n    image,\n    id,\n    word,\n    audio,\n  } = question;\n\n  const audioElement = new Audio(getFilePath(audio));\n\n  audioElement.oncanplay = () => {\n    if (!isFalseAnswer && !isRightAnswer) {\n      audioElement.play();\n    }\n  };\n\n  return (\n    <QuestionView\n      id={id}\n      word={word}\n      audioElement={audioElement}\n      srcImage={getFilePath(image)}\n      isFalseAnswer={isFalseAnswer}\n      isRightAnswer={isRightAnswer}\n    />\n  );\n};\n\nQuestion.propTypes = {\n  question: PropTypes.object,\n  level: PropTypes.number,\n  isFalseAnswer: PropTypes.bool,\n  isRightAnswer: PropTypes.bool,\n};\n\nexport default Question;\n","import Answer from './AnswerView.jsx';\n\nexport default Answer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport style from './AnswerView.module.scss';\n\nconst AnswerView = ({\n  answer,\n  handleClickAnswer,\n  question,\n  currentAnswerId,\n  isRightAnswer,\n  isFalseAnswer,\n}) => {\n  const answerItem = classNames(\n    style.item,\n    { [style.right]: ((isRightAnswer || isFalseAnswer) && answer.id === question.id) },\n    { [style.wrong]: isFalseAnswer && answer.id === currentAnswerId },\n    { [style.disable]: isRightAnswer || isFalseAnswer },\n  );\n  return (\n  <li className={answerItem}\n    key={answer.id}\n    onClick = {() => handleClickAnswer(answer.id)}\n  >{answer.wordTranslate}</li>\n  );\n};\n\nAnswerView.propTypes = {\n  answer: PropTypes.object,\n  handleClickAnswer: PropTypes.func,\n  question: PropTypes.object,\n  isRightAnswer: PropTypes.bool,\n  isFalseAnswer: PropTypes.bool,\n  currentAnswerId: PropTypes.string,\n};\n\nexport default AnswerView;\n","import AnswerPanel from './AnswerPanelView.jsx';\n\nexport default AnswerPanel;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport style from './AnswerPanelView.module.scss';\n\nimport Answer from '../Answer';\n\nconst AnswerPanelView = ({\n  answerArray,\n  question,\n  handleClickAnswer,\n  isRightAnswer,\n  isFalseAnswer,\n  currentAnswerId,\n}) => {\n  const generateAnswers = () => {\n    if (question && answerArray) {\n      return answerArray.map((answer) => (\n        <Answer\n          isRightAnswer={isRightAnswer}\n          isFalseAnswer={isFalseAnswer}\n          handleClickAnswer = {handleClickAnswer}\n          question={question}\n          answer={answer}\n          key={answer.id}\n          currentAnswerId={currentAnswerId}\n        />\n      ));\n    } return null;\n  };\n  return (\n    <ol className={style.container}>\n      {generateAnswers()}\n    </ol>\n  );\n};\n\nAnswerPanelView.propTypes = {\n  answerArray: PropTypes.array,\n  question: PropTypes.object,\n  handleClickAnswer: PropTypes.func,\n  isRightAnswer: PropTypes.bool,\n  isFalseAnswer: PropTypes.bool,\n  currentAnswerId: PropTypes.string,\n};\n\nexport default AnswerPanelView;\n","import Button from './ButtonView.jsx';\n\nexport default Button;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from '@material-ui/core';\nimport { text } from '../../../../helpers/constants';\nimport style from './ButtonView.module.scss';\n\nconst ButtonView = ({\n  isRightAnswer,\n  handleClickButton,\n  isFalseAnswer,\n}) => {\n  const { next, dontKnow } = text.ru.button;\n  const buttonValue = (isRightAnswer || isFalseAnswer) ? next : dontKnow;\n  return (\n    <Button\n      variant=\"contained\"\n      size=\"large\"\n      className={style.button}\n      onClick={handleClickButton}\n    >\n      { buttonValue }\n    </Button>\n  );\n};\n\nButtonView.propTypes = {\n  isRightAnswer: PropTypes.bool,\n  handleClickButton: PropTypes.func,\n  isFalseAnswer: PropTypes.bool,\n};\n\nexport default ButtonView;\n","import FinishGameItem from './FinishGameItemView.jsx';\n\nexport default FinishGameItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { VolumeUpRounded } from '@material-ui/icons';\nimport { IconButton } from '@material-ui/core';\nimport style from './FinishGameItemView.module.scss';\nimport { getFilePath } from '../../../../helpers/functions';\n\nconst FinishGameItemView = ({ word }) => {\n  const audioElement = new Audio(getFilePath(word.audio));\n  return (\n    <div className={style.container}>\n      <IconButton aria-label=\"audio\" onClick = {() => audioElement.play()}>\n        <VolumeUpRounded fontSize=\"large\"/>\n      </IconButton>\n      <p className={style.text}>{word.word}</p>\n    </div>\n  );\n};\n\nFinishGameItemView.propTypes = {\n  word: PropTypes.object,\n};\n\nexport default FinishGameItemView;\n","import FinishGamePage from './FinishGamePageView.jsx';\n\nexport default FinishGamePage;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from '@material-ui/core';\n\nimport { text } from '../../../../helpers/constants';\n\nimport style from './FinishGamePageView.module.scss';\nimport FinishGameItem from '../FinishGameItem';\n\nconst FinishGamePageView = ({ errorAnswerArray, rightAnswerArray, handleClickNewGame }) => {\n  const generateItemsWords = (array) => (\n    array.length !== 0 && array.map((word) => (\n      <FinishGameItem\n        key={word.id}\n        word={word}\n      />\n    ))\n  );\n\n  return (\n    <>\n      <div className={style.container}>\n        <div>\n          <h2 className={style.title}>\n            { text.ru.answersCorrect }\n            <span className={style.right}>{rightAnswerArray.length}</span>\n          </h2>\n          {generateItemsWords(rightAnswerArray)}\n        </div>\n        <div>\n          <h2 className={style.title}>\n          { text.ru.answersMistaken }\n            <span className={style.wrong}>{errorAnswerArray.length}</span>\n          </h2>\n          {generateItemsWords(errorAnswerArray)}\n        </div>\n      </div>\n      <Button\n        variant=\"contained\"\n        size=\"large\"\n        onClick={() => handleClickNewGame()}\n        className={style.button}\n      >\n        { text.ru.button.newGame }\n      </Button>\n    </>\n  );\n};\n\nFinishGamePageView.propTypes = {\n  handleClickNewGame: PropTypes.func,\n  errorAnswerArray: PropTypes.array,\n  rightAnswerArray: PropTypes.array,\n};\n\nexport default FinishGamePageView;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport style from './GamePageView.module.scss';\n\nimport Question from '../Question';\nimport AnswerPanel from '../AnswerPanel';\nimport Button from '../Button';\nimport FinishGamePage from '../FinishGamePage';\n\nconst GamePageView = ({\n  questionsList,\n  level,\n  answerArray,\n  isRightAnswer,\n  handleClickButton,\n  errorAnswerArray,\n  rightAnswerArray,\n  isFalseAnswer,\n  handleClickNewGame,\n  handleClickAnswer,\n  currentAnswerId,\n}) => {\n  const question = questionsList[level];\n  return (\n    question && answerArray\n      ? (\n      <div className={style.container}>\n        <Question\n          question = {question}\n          isFalseAnswer = {isFalseAnswer}\n          isRightAnswer= {isRightAnswer}\n        />\n        <AnswerPanel\n          answerArray={answerArray}\n          question={question}\n          handleClickAnswer = {handleClickAnswer}\n          isRightAnswer={isRightAnswer}\n          isFalseAnswer={isFalseAnswer}\n          currentAnswerId={currentAnswerId}\n        />\n        <Button\n          isRightAnswer={isRightAnswer}\n          handleClickButton={handleClickButton}\n          isFalseAnswer={isFalseAnswer}\n        />\n      </div>\n      )\n      : <FinishGamePage\n        handleClickNewGame={handleClickNewGame}\n        rightAnswerArray={rightAnswerArray}\n        errorAnswerArray={errorAnswerArray}\n      />\n  );\n};\n\nGamePageView.propTypes = {\n  questionsList: PropTypes.array,\n  answerArray: PropTypes.array,\n  level: PropTypes.number,\n  isRightAnswer: PropTypes.bool,\n  changeLevel: PropTypes.func,\n  countError: PropTypes.func,\n  handleClickButton: PropTypes.func,\n  isFalseAnswer: PropTypes.bool,\n  handleClickAnswer: PropTypes.func,\n  handleClickNewGame: PropTypes.func,\n  currentAnswerId: PropTypes.string,\n  errorAnswerArray: PropTypes.array,\n  rightAnswerArray: PropTypes.array,\n};\n\nexport default GamePageView;\n","const data = [\n  {\n    id: '5e9f5ee35eb9e72bc21af4c8',\n    group: 0,\n    page: 2,\n    word: 'alien',\n    image: 'files/03_0041.jpg',\n    audio: 'files/03_0041.mp3',\n    audioMeaning: 'files/03_0041_meaning.mp3',\n    audioExample: 'files/03_0041_example.mp3',\n    textMeaning: 'An <i>alien</i> is a creature from a different world.',\n    textExample: 'The <b>alien</b> came in peace.',\n    transcription: '[éiljən]',\n    textExampleTranslate: 'пришелец пришел с миром',\n    textMeaningTranslate: 'Инопланетянин - это существо из другого мира',\n    wordTranslate: 'инопланетянин',\n    wordsPerExampleSentence: 5,\n  },\n  {\n    id: '5e9f5ee35eb9e72bc21af4c9',\n    group: 0,\n    page: 2,\n    word: 'among',\n    image: 'files/03_0042.jpg',\n    audio: 'files/03_0042.mp3',\n    audioMeaning: 'files/03_0042_meaning.mp3',\n    audioExample: 'files/03_0042_example.mp3',\n    textMeaning: 'If you are <i>among</i> certain things, they are all around you.',\n    textExample: 'There was a red apple <b>among</b> the green ones.',\n    transcription: '[əmʌ̀ŋ]',\n    textExampleTranslate: 'Среди зеленых было красное яблоко',\n    textMeaningTranslate: 'Если вы среди определенных вещей, они все вокруг вас',\n    wordTranslate: 'среди',\n    wordsPerExampleSentence: 9,\n  },\n  {\n    id: '5e9f5ee35eb9e72bc21af4ca',\n    group: 0,\n    page: 2,\n    word: 'chart',\n    image: 'files/03_0043.jpg',\n    audio: 'files/03_0043.mp3',\n    audioMeaning: 'files/03_0043_meaning.mp3',\n    audioExample: 'files/03_0043_example.mp3',\n    textMeaning: 'A <i>chart</i> is a list of information.',\n    textExample: 'We used a <b>chart</b> to see how we had improved.',\n    transcription: '[tʃɑːrt]',\n    textExampleTranslate: 'Мы использовали график, чтобы увидеть, как мы улучшили',\n    textMeaningTranslate: 'Диаграмма - это список информации',\n    wordTranslate: 'диаграмма',\n    wordsPerExampleSentence: 10,\n  },\n  {\n    id: '5e9f5ee35eb9e72bc21af4cb',\n    group: 0,\n    page: 2,\n    word: 'cloud',\n    image: 'files/03_0044.jpg',\n    audio: 'files/03_0044.mp3',\n    audioMeaning: 'files/03_0044_meaning.mp3',\n    audioExample: 'files/03_0044_example.mp3',\n    textMeaning: 'A <i>cloud</i> is a group of water drops in the sky.',\n    textExample: 'The sky was filled with white <b>clouds</b>.',\n    transcription: '[klaud]',\n    textExampleTranslate: 'Небо было наполнено белыми облаками',\n    textMeaningTranslate: 'Облако - это группа капель воды в небе',\n    wordTranslate: 'облако',\n    wordsPerExampleSentence: 7,\n  },\n  {\n    id: '5e9f5ee35eb9e72bc21af4cc',\n    group: 0,\n    page: 2,\n    word: 'describe',\n    image: 'files/03_0045.jpg',\n    audio: 'files/03_0045.mp3',\n    audioMeaning: 'files/03_0045_meaning.mp3',\n    audioExample: 'files/03_0045_example.mp3',\n    textMeaning: 'To <i>describe</i> is to say or write what someone or something is like.',\n    textExample: 'They <b>described</b> their tree as colorful, with gold ribbon and a star.',\n    transcription: '[diskráib]',\n    textExampleTranslate: 'Они описали свое дерево как красочное, с золотой лентой и звездой',\n    textMeaningTranslate: 'Описать - это сказать или написать, на что похож кто-то или что-то',\n    wordTranslate: 'описать',\n    wordsPerExampleSentence: 12,\n  },\n  {\n    id: '5e9f5ee35eb9e72bc21af4cd',\n    group: 0,\n    page: 2,\n    word: 'ever',\n    image: 'files/03_0046.jpg',\n    audio: 'files/03_0046.mp3',\n    audioMeaning: 'files/03_0046_meaning.mp3',\n    audioExample: 'files/03_0046_example.mp3',\n    textMeaning: '<i>Ever</i> means at any time.',\n    textExample: 'Going skiing last winter was the most fun I’ve <b>ever</b> had.',\n    transcription: '[évər]',\n    textExampleTranslate: 'Кататься на лыжах прошлой зимой было самым веселым из всего, что я когда-либо ел',\n    textMeaningTranslate: 'Всегда означает в любое время',\n    wordTranslate: 'когда-либо',\n    wordsPerExampleSentence: 11,\n  },\n  {\n    id: '5e9f5ee35eb9e72bc21af4ce',\n    group: 0,\n    page: 2,\n    word: 'fail',\n    image: 'files/03_0047.jpg',\n    audio: 'files/03_0047.mp3',\n    audioMeaning: 'files/03_0047_meaning.mp3',\n    audioExample: 'files/03_0047_example.mp3',\n    textMeaning: 'To <i>fail</i> means you do not succeed in what you try to do.',\n    textExample: 'Since he <b>failed</b> to get the job, he was sad.',\n    transcription: '[feil]',\n    textExampleTranslate: 'Так как он не смог получить работу, ему было грустно',\n    textMeaningTranslate: 'Неудача означает, что вам не удается то, что вы пытаетесь сделать',\n    wordTranslate: 'потерпеть поражение',\n    wordsPerExampleSentence: 10,\n  },\n  {\n    id: '5e9f5ee35eb9e72bc21af4cf',\n    group: 0,\n    page: 2,\n    word: 'grade',\n    image: 'files/03_0048.jpg',\n    audio: 'files/03_0048.mp3',\n    audioMeaning: 'files/03_0048_meaning.mp3',\n    audioExample: 'files/03_0048_example.mp3',\n    textMeaning: 'A <i>grade</i> is a score or mark given to someone’s work.',\n    textExample: 'I managed to get good <b>grades</b> on my report card.',\n    transcription: '[greid]',\n    textExampleTranslate: 'Мне удалось получить хорошие оценки на моем табеле',\n    textMeaningTranslate: 'Оценка - это оценка или оценка, присвоенная чьей-либо работе',\n    wordTranslate: 'класс',\n    wordsPerExampleSentence: 10,\n  },\n  {\n    id: '5e9f5ee35eb9e72bc21af4d0',\n    group: 0,\n    page: 2,\n    word: 'instead',\n    image: 'files/03_0049.jpg',\n    audio: 'files/03_0049.mp3',\n    audioMeaning: 'files/03_0049_meaning.mp3',\n    audioExample: 'files/03_0049_example.mp3',\n    textMeaning: '<i>Instead</i> means in place of.',\n    textExample: 'He ate the carrot <b>instead</b> of the ice cream.',\n    transcription: '[instéd]',\n    textExampleTranslate: 'Он съел морковку вместо мороженого',\n    textMeaningTranslate: 'Вместо означает вместо',\n    wordTranslate: 'вместо',\n    wordsPerExampleSentence: 9,\n  },\n  {\n    id: '5e9f5ee35eb9e72bc21af4d1',\n    group: 0,\n    page: 2,\n    word: 'library',\n    image: 'files/03_0050.jpg',\n    audio: 'files/03_0050.mp3',\n    audioMeaning: 'files/03_0050_meaning.mp3',\n    audioExample: 'files/03_0050_example.mp3',\n    textMeaning: 'A <i>library</i> is a place where you go to read books.',\n    textExample: 'The <b>library</b> at school is full of books.',\n    transcription: '[láibrèri]',\n    textExampleTranslate: 'Библиотека в школе полна книг',\n    textMeaningTranslate: 'Библиотека - это место, куда вы ходите читать книги',\n    wordTranslate: 'библиотека',\n    wordsPerExampleSentence: 8,\n  },\n  {\n    id: '5e9f5ee35eb9e72bc21af4d2',\n    group: 0,\n    page: 2,\n    word: 'photograph',\n    image: 'files/03_0051.jpg',\n    audio: 'files/03_0051.mp3',\n    audioMeaning: 'files/03_0051_meaning.mp3',\n    audioExample: 'files/03_0051_example.mp3',\n    textMeaning: 'I like taking <i>photographs</i>.',\n    textExample: 'I took this <b>photograph</b> with my cell phone.',\n    transcription: '[fóutəgrӕf]',\n    textExampleTranslate: 'Я сделал эту фотографию на свой мобильный',\n    textMeaningTranslate: 'Мне нравится фотографировать',\n    wordTranslate: 'фотография',\n    wordsPerExampleSentence: 8,\n  },\n  {\n    id: '5e9f5ee35eb9e72bc21af4d3',\n    group: 0,\n    page: 2,\n    word: 'planet',\n    image: 'files/03_0052.jpg',\n    audio: 'files/03_0052.mp3',\n    audioMeaning: 'files/03_0052_meaning.mp3',\n    audioExample: 'files/03_0052_example.mp3',\n    textMeaning: 'A <i>planet</i> is a large round thing in space.',\n    textExample: 'Saturn is the <b>planet</b> with the ring around it.',\n    transcription: '[plǽnət]',\n    textExampleTranslate: 'Сатурн - планета с кольцом вокруг него',\n    textMeaningTranslate: 'Планета - это большая круглая вещь в космосе',\n    wordTranslate: 'планета',\n    wordsPerExampleSentence: 9,\n  },\n  {\n    id: '5e9f5ee35eb9e72bc21af4d4',\n    group: 0,\n    page: 2,\n    word: 'report',\n    image: 'files/03_0053.jpg',\n    audio: 'files/03_0053.mp3',\n    audioMeaning: 'files/03_0053_meaning.mp3',\n    audioExample: 'files/03_0053_example.mp3',\n    textMeaning: 'A <i>report</i> is something someone writes for school or work.',\n    textExample: 'Karen had trouble writing her <b>report</b>.',\n    transcription: '[ripɔ́ːrt]',\n    textExampleTranslate: 'Карен не могла написать свой отчет',\n    textMeaningTranslate: 'Отчет - это то, что кто-то пишет для школы или работы',\n    wordTranslate: 'отчет',\n    wordsPerExampleSentence: 6,\n  },\n  {\n    id: '5e9f5ee35eb9e72bc21af4d5',\n    group: 0,\n    page: 2,\n    word: 'several',\n    image: 'files/03_0054.jpg',\n    audio: 'files/03_0054.mp3',\n    audioMeaning: 'files/03_0054_meaning.mp3',\n    audioExample: 'files/03_0054_example.mp3',\n    textMeaning: '<i>Several</i> is more than two but not many.',\n    textExample: 'He had to read <b>several</b> books for class.',\n    transcription: '[sévərəl]',\n    textExampleTranslate: 'Он должен был прочитать несколько книг для класса',\n    textMeaningTranslate: 'Несколько больше двух, но не много',\n    wordTranslate: 'несколько',\n    wordsPerExampleSentence: 8,\n  },\n  {\n    id: '5e9f5ee35eb9e72bc21af4d6',\n    group: 0,\n    page: 2,\n    word: 'shape',\n    image: 'files/03_0055.jpg',\n    audio: 'files/03_0055.mp3',\n    audioMeaning: 'files/03_0055_meaning.mp3',\n    audioExample: 'files/03_0055_example.mp3',\n    textMeaning: 'An object’s <i>shape</i> is the arrangement of its sides and surfaces.',\n    textExample: 'Even with your eyes closed you can feel the <b>shape</b> of it.',\n    transcription: '[ʃeip]',\n    textExampleTranslate: 'Даже с закрытыми глазами вы можете почувствовать его форму',\n    textMeaningTranslate: 'Форма объекта - это расположение его сторон и поверхностей',\n    wordTranslate: 'форма',\n    wordsPerExampleSentence: 12,\n  },\n  {\n    id: '5e9f5ee35eb9e72bc21af4d7',\n    group: 0,\n    page: 2,\n    word: 'solve',\n    image: 'files/03_0056.jpg',\n    audio: 'files/03_0056.mp3',\n    audioMeaning: 'files/03_0056_meaning.mp3',\n    audioExample: 'files/03_0056_example.mp3',\n    textMeaning: 'To <i>solve</i> something is to find an answer to it.',\n    textExample: 'All the students could easily <b>solve</b> the math problem.',\n    transcription: '[sɑlv]',\n    textExampleTranslate: 'Все ученики могли легко решить математическую задачу',\n    textMeaningTranslate: 'Решить что-то - значит найти ответ',\n    wordTranslate: 'решать',\n    wordsPerExampleSentence: 9,\n  },\n  {\n    id: '5e9f5ee35eb9e72bc21af4d8',\n    group: 0,\n    page: 2,\n    word: 'suddenly',\n    image: 'files/03_0057.jpg',\n    audio: 'files/03_0057.mp3',\n    audioMeaning: 'files/03_0057_meaning.mp3',\n    audioExample: 'files/03_0057_example.mp3',\n    textMeaning: 'If something happens <i>suddenly</i>, it happens quickly and unexpectedly.',\n    textExample: 'I was surprised when my friends <b>suddenly</b> shouted, “Happy birthday!”',\n    transcription: '[sʌ́dnli]',\n    textExampleTranslate: \"Я был удивлен, когда мои друзья вдруг закричали: 'С днем рождения!'\",\n    textMeaningTranslate: 'Если что-то происходит внезапно, это происходит быстро и неожиданно',\n    wordTranslate: 'вдруг, внезапно',\n    wordsPerExampleSentence: 10,\n  },\n  {\n    id: '5e9f5ee35eb9e72bc21af4d9',\n    group: 0,\n    page: 2,\n    word: 'suppose',\n    image: 'files/03_0058.jpg',\n    audio: 'files/03_0058.mp3',\n    audioMeaning: 'files/03_0058_meaning.mp3',\n    audioExample: 'files/03_0058_example.mp3',\n    textMeaning: 'To <i>suppose</i> is to guess.',\n    textExample: 'I <b>suppose</b> I should go home now.',\n    transcription: '[səpóuz]',\n    textExampleTranslate: 'Полагаю, мне пора домой',\n    textMeaningTranslate: 'Предположить, значит угадать',\n    wordTranslate: 'предположим',\n    wordsPerExampleSentence: 7,\n  },\n  {\n    id: '5e9f5ee35eb9e72bc21af4da',\n    group: 0,\n    page: 2,\n    word: 'understand',\n    image: 'files/03_0059.jpg',\n    audio: 'files/03_0059.mp3',\n    audioMeaning: 'files/03_0059_meaning.mp3',\n    audioExample: 'files/03_0059_example.mp3',\n    textMeaning: 'To <i>understand</i> something you need to know what it means.',\n    textExample: 'Henry could not <b>understand</b> the message.',\n    transcription: '[Λndərstǽnd]',\n    textExampleTranslate: 'Генри не мог понять сообщение',\n    textMeaningTranslate: 'Чтобы понять что-то, нужно знать, что это значит',\n    wordTranslate: 'понимаю',\n    wordsPerExampleSentence: 6,\n  },\n  {\n    id: '5e9f5ee35eb9e72bc21af4db',\n    group: 0,\n    page: 2,\n    word: 'view',\n    image: 'files/03_0060.jpg',\n    audio: 'files/03_0060.mp3',\n    audioMeaning: 'files/03_0060_meaning.mp3',\n    audioExample: 'files/03_0060_example.mp3',\n    textMeaning: 'To <i>view</i> is to look at something.',\n    textExample: 'Michael likes to <b>view</b> himself in the mirror.',\n    transcription: '[vjuː]',\n    textExampleTranslate: 'Михаилу нравится видеть себя в зеркале',\n    textMeaningTranslate: 'Смотреть - значит смотреть на что-то',\n    wordTranslate: 'посмотреть',\n    wordsPerExampleSentence: 8,\n  },\n];\n\nexport default data;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport GamePageView from './GamePageView.jsx';\nimport data from '../../mockData';\nimport { shuffleArray, generateQuestionsArray, playAudio } from '../../../../helpers/functions';\nimport {\n  soundSuccess,\n  soundError,\n} from '../../../../helpers/constants';\n\nclass GamePage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.props = props;\n    const { handleClickNewGame } = this.props;\n    this.handleClickNewGame = handleClickNewGame;\n    this.state = {\n      dataWords: data, // TODO API\n      level: 0,\n      questionList: [],\n      errorAnswerArray: [],\n      rightAnswerArray: [],\n      isRightAnswer: false,\n      isFalseAnswer: false,\n    };\n  }\n\n  componentDidMount = () => {\n    const { dataWords, maxLevel } = this.state;\n    const { level } = this.state;\n    const questionList = generateQuestionsArray(dataWords, maxLevel);\n    const answerArray = this.getAnswersArray(dataWords, questionList, level);\n    this.setState({ questionList, answerArray });\n  }\n\n  getAnswersArray = (dataWords, questionList, level) => {\n    const { numberLevel, numberAnswers } = this.props;\n    if (dataWords && questionList.length !== 0 && numberLevel !== level) {\n      const currentQuestion = questionList[level];\n      const arrayWrongAnswer = shuffleArray(dataWords.filter((word) => (\n        word.id !== currentQuestion.id)));\n      const answerArray = shuffleArray(\n        arrayWrongAnswer.slice(0, numberAnswers - 1).concat(currentQuestion),\n      );\n      return answerArray;\n    } return null;\n  }\n\n  changeLevel = () => {\n    const { dataWords, questionList } = this.state;\n    let { level } = this.state;\n    const { numberLevel } = this.props;\n    if (level < numberLevel) {\n      level += 1;\n      const answerArray = this.getAnswersArray(dataWords, questionList, level);\n      clearTimeout(this.nextLevel);\n      this.setState({\n        level,\n        isRightAnswer: false,\n        isFalseAnswer: false,\n        answerArray,\n      });\n    }\n  }\n\n  handleClickButton = (e) => {\n    const {\n      isRightAnswer,\n      isFalseAnswer,\n      errorAnswerArray,\n      questionList,\n      level,\n      id,\n    } = this.state;\n    e.preventDefault();\n    const question = questionList[level];\n    if (!isRightAnswer && !isFalseAnswer) {\n      this.setAnswer(errorAnswerArray, question, id);\n      playAudio(soundError);\n      this.nextLevel = setTimeout(this.changeLevel, 2000);\n    } else this.changeLevel();\n  }\n\n  setAnswer = (array, question, id) => {\n    array.push(question);\n    this.setState({\n      array: [...array],\n      isRightAnswer: true,\n      currentAnswerId: id,\n    });\n  }\n\n  handleClickAnswer = (id) => {\n    const {\n      questionList,\n      level,\n      isRightAnswer,\n      isFalseAnswer,\n      rightAnswerArray,\n      errorAnswerArray,\n    } = this.state;\n    const question = questionList[level];\n    if (!isRightAnswer && !isFalseAnswer) {\n      if (id === question.id) {\n        this.setAnswer(rightAnswerArray, question, id);\n        this.setState({ isRightAnswer: true });\n        playAudio(soundSuccess);\n        this.nextLevel = setTimeout(this.changeLevel, 2000);\n      } else {\n        this.setAnswer(errorAnswerArray, question, id);\n        this.setState({ isFalseAnswer: true });\n        playAudio(soundError);\n        this.nextLevel = setTimeout(this.changeLevel, 2000);\n      }\n    }\n  }\n\n  render() {\n    const {\n      questionList,\n      level,\n      isRightAnswer,\n      isFalseAnswer,\n      currentAnswerId,\n      answerArray,\n      rightAnswerArray,\n      errorAnswerArray,\n    } = this.state;\n    return (\n      <GamePageView\n        handleClickNewGame={this.handleClickNewGame}\n        answerArray={answerArray}\n        handleClickAnswer = {this.handleClickAnswer}\n        questionsList={questionList}\n        level={level}\n        isRightAnswer={isRightAnswer}\n        rightAnswerArray={rightAnswerArray}\n        errorAnswerArray={errorAnswerArray}\n        isFalseAnswer={isFalseAnswer}\n        currentAnswerId={currentAnswerId}\n        handleClickButton={this.handleClickButton}\n      />\n    );\n  }\n}\n\nGamePage.propTypes = {\n  handleClickNewGame: PropTypes.func,\n  numberLevel: PropTypes.number,\n  numberAnswers: PropTypes.number,\n};\n\nexport default GamePage;\n","import StartGamePage from './StartGamePageView.jsx';\n\nexport default StartGamePage;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  FormControl,\n  InputLabel,\n  Select,\n  TextField,\n  Button,\n} from '@material-ui/core';\n\nimport {\n  text,\n  count,\n  formLabel,\n  gamesData,\n} from '../../../../helpers/constants';\n\nimport style from './StartGamePageView.module.scss';\n\nconst StartGamePageView = ({\n  handleChooseLevel,\n  level,\n  setNumberLevel,\n  setNumberAnswers,\n  handleSubmitForm,\n}) => {\n  const options = [];\n  for (let numberLevel = 0; numberLevel <= count.groups; numberLevel += 1) {\n    options.push(<option value={numberLevel} key={numberLevel}>{`${formLabel.level} ${numberLevel}`}</option>);\n  }\n  return (\n    <div className={style.container}>\n      <h1 className={style.title}>{gamesData.audiocall.title}</h1>\n      <p className={style.text}>Тренировка улучшает восприятие английского на слух</p>\n      <form className={style.form} onSubmit={handleSubmitForm}>\n        <FormControl variant=\"outlined\">\n          <InputLabel htmlFor=\"outlined-level-native-simple\">{formLabel.chooseLevel}</InputLabel>\n          <Select\n            native\n            value={level || 0}\n            onChange={handleChooseLevel}\n            label={formLabel.chooseLevel}\n            inputProps={{\n              name: 'level',\n              id: 'outlined-level-native-simple',\n            }}\n          >\n            {options}\n          </Select>\n        </FormControl>\n        <TextField\n          required\n          className={style.input}\n          id=\"audiocall-start__questions\"\n          type=\"number\"\n          label={formLabel.questions}\n          defaultValue=\"5\"\n          inputProps={{ pattern: '[0-9]', min: '5', max: '12' }}\n          variant=\"filled\"\n          onChange={setNumberLevel}\n        />\n        <TextField\n          required\n          id=\"audiocall-start__questions\"\n          type=\"number\"\n          label={formLabel.answers}\n          defaultValue=\"5\"\n          inputProps={{ pattern: '[2-5]', min: '2', max: '5' }}\n          variant=\"filled\"\n          onChange={setNumberAnswers}\n        />\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n        >\n         { text.ru.button.startGame }\n        </Button>\n      </form>\n    </div>\n  );\n};\n\nStartGamePageView.propTypes = {\n  handleChooseLevel: PropTypes.func,\n  level: PropTypes.number,\n  setNumberLevel: PropTypes.func,\n  setNumberAnswers: PropTypes.func,\n  handleSubmitForm: PropTypes.func,\n};\n\nexport default StartGamePageView;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport GamePage from '../GamePage';\nimport StartGamePage from '../StartGamePage';\n\nconst MainView = ({\n  handleChooseLevel,\n  setNumberLevel,\n  setNumberAnswers,\n  handleSubmitForm,\n  level, // TODO for API\n  numberAnswers,\n  isStart,\n  numberLevel,\n  handleClickNewGame,\n}) => (\n  (!isStart)\n    ? <StartGamePage\n      handleChooseLevel={handleChooseLevel}\n      setNumberLevel={setNumberLevel}\n      setNumberAnswers={setNumberAnswers}\n      handleSubmitForm={handleSubmitForm}\n    />\n    : <GamePage\n      level={level}\n      handleClickNewGame={handleClickNewGame}\n      numberAnswers={numberAnswers}\n      isStart={isStart}\n      numberLevel={numberLevel}\n    />\n);\n\nMainView.propTypes = {\n  handleChooseLevel: PropTypes.func,\n  setNumberLevel: PropTypes.func,\n  setNumberAnswers: PropTypes.func,\n  handleSubmitForm: PropTypes.func,\n  handleClickNewGame: PropTypes.func,\n  level: PropTypes.number,\n  numberAnswers: PropTypes.number,\n  isStart: PropTypes.bool,\n  numberLevel: PropTypes.number,\n};\n\nexport default MainView;\n","import React from 'react';\nimport MainView from './MainView.jsx';\n\nclass Main extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      levelAPI: 0,\n      numberLevel: 5,\n      numberAnswers: 5,\n      isStart: false,\n    };\n  }\n\n  handleChooseLevel = (e) => {\n    const levelAPI = e.target.value;\n    this.setState({ levelAPI: +levelAPI });\n  }\n\n  setNumberLevel = (e) => {\n    const amountQuestions = e.target.value || e.target.defaultValue;\n    this.setState({ numberLevel: +amountQuestions });\n  }\n\n  setNumberAnswers = (e) => {\n    const numberAnswers = e.target.value || e.target.defaultValue;\n    this.setState({ numberAnswers: +numberAnswers });\n  }\n\n  handleSubmitForm = () => {\n    this.setState({ isStart: true });\n  }\n\n  handleClickNewGame = () => {\n    this.setState({ isStart: false });\n  }\n\n  render() {\n    const {\n      levelAPI, // TODO for ARI\n      numberAnswers,\n      isStart,\n      numberLevel,\n    } = this.state;\n    return (\n      <MainView\n        handleChooseLevel={this.handleChooseLevel}\n        handleClickNewGame={this.handleClickNewGame}\n        setNumberLevel={this.setNumberLevel}\n        setNumberAnswers={this.setNumberAnswers}\n        handleSubmitForm={this.handleSubmitForm}\n        levelAPI={levelAPI} // TODO for API\n        numberAnswers={numberAnswers}\n        isStart={isStart}\n        numberLevel={numberLevel}\n      />\n    );\n  }\n}\n\nexport default Main;\n","import AudioCall from './AudioCall.jsx';\n\nexport default AudioCall;\n","import React from 'react';\nimport Main from './components/Main';\nimport './style.scss';\n\nconst AudioCall = () => (\n  <div className=\"container\">\n    <Main />\n  </div>\n);\n\nexport default AudioCall;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\n\nexport default function Switcher({ handleChangeUserWords }) {\n  return (\n    <FormGroup row>\n      <FormControlLabel\n        control={<Switch\n          onChange={handleChangeUserWords}\n          name=\"checkedUserWords\"\n          color=\"primary\"\n        />}\n        label=\"Слова из словаря*\"\n      />\n    </FormGroup>\n  );\n}\nSwitcher.propTypes = {\n  handleChangeUserWords: PropTypes.string,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport Button from '@material-ui/core/Button';\nimport PlayCircleOutlineIcon from '@material-ui/icons/PlayCircleOutline';\nimport { text } from '../../../../helpers/constants';\n\nexport default function StartGameForm({ classNameForm, handleCurrentGroup, onSubmitForm }) {\n  const menuItemList = [...text.ru.levelsTitles];\n  menuItemList.shift();\n\n  return (\n    <form className={classNameForm} onSubmit={onSubmitForm}>\n      <FormControl\n        required\n      >\n        <InputLabel id=\"select-label\" style={{ fontSize: '1.2rem' }} >\n          {text.ru.chooseLevel}\n        </InputLabel>\n        <Select\n          labelId=\"select-label\"\n          id=\"simple-select\"\n          onChange={handleCurrentGroup}\n          defaultValue=\"\"\n        >\n          {menuItemList.map((value, key) => (\n            <MenuItem value={key} key={key}>{value}</MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n\n      <Button\n        type=\"submit\"\n        variant=\"contained\"\n        color=\"primary\"\n        startIcon={<PlayCircleOutlineIcon />}\n        style={{ background: 'rgba(130, 115, 228, 1)' }}\n      >\n        {text.ru.button.startGame}\n      </Button>\n    </form >\n  );\n}\nStartGameForm.propTypes = {\n  classNameForm: PropTypes.string,\n  handleCurrentGroup: PropTypes.func,\n  onSubmitForm: PropTypes.func,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Switcher from '../UI/switch';\nimport StartGameForm from '../UI/StartGameForm';\n\nimport { text } from '../../../../helpers/constants';\n\nimport './StartGame.scss';\n\nconst StartGame = ({\n  handleChangeUserWords, handleCurrentGroup, startGame, updateState, token,\n}) => {\n  const onSubmitForm = (event) => {\n    event.preventDefault();\n    updateState();\n    startGame();\n  };\n\n  return (\n    <div className={'sprint-start__container'}>\n      <StartGameUserForm\n        handleChangeUserWords={handleChangeUserWords}\n        handleCurrentGroup={handleCurrentGroup}\n        onSubmitForm={onSubmitForm}\n        token={token}\n        startGame={startGame}\n      />\n    </div>\n\n  );\n};\n\nconst StartGameUserForm = ({\n  handleChangeUserWords, handleCurrentGroup, onSubmitForm, token,\n}) => (\n    <div className={'sprint-start__container'}>\n\n      <div className={'sprint-start__form-container'}>\n        {token\n          ? (<React.Fragment>\n            <span className={'sprint-start__explanation'}>\n              {text.ru.notEnoughWords}\n            </span>\n            <Switcher\n              handleChangeUserWords={handleChangeUserWords}\n            />\n          </React.Fragment>)\n          : null\n        }\n\n        <StartGameForm\n          classNameForm={'sprint-start__form'}\n          handleCurrentGroup={handleCurrentGroup}\n          onSubmitForm={onSubmitForm}\n        />\n      </div>\n\n    </div>\n  );\n\nStartGame.propTypes = {\n  startGame: PropTypes.func,\n  handleChangeUserWords: PropTypes.func,\n  checkedUserWords: PropTypes.func,\n  handleCurrentGroup: PropTypes.func,\n  onSubmitForm: PropTypes.func,\n  updateState: PropTypes.func,\n  token: PropTypes.string,\n};\n\nStartGameUserForm.propTypes = {\n  startGame: PropTypes.func,\n  handleChangeUserWords: PropTypes.func,\n  checkedUserWords: PropTypes.func,\n  handleCurrentGroup: PropTypes.func,\n  onSubmitForm: PropTypes.func,\n  token: PropTypes.string,\n};\n\nfunction mapStateToProps(state) {\n  return {\n    token: state.auth.token,\n  };\n}\nexport default connect(mapStateToProps)(StartGame);\n","import StartGame from './StartGame.jsx';\n\nexport default StartGame;","import PlayGame from './PalyGame.jsx';\n\nexport default PlayGame;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport TimerIcon from '@material-ui/icons/Timer';\nimport PetsIcon from '@material-ui/icons/Pets';\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\nimport Button from '@material-ui/core/Button';\n\nimport './PlayGame.scss';\n\nclass PlayGame extends Component {\n  componentDidMount() {\n    this.props.updateTimer();\n    document.addEventListener('keyup', this.props.onCLick);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keyup', this.props.onCLick);\n  }\n\n  arr = Array(3).fill(this.props.isAnswerQuiz)\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.counterTotal !== this.props.counterTotal) {\n      this.arr.unshift(this.props.isAnswerQuiz);\n      this.arr.pop();\n    }\n\n    if (prevProps.timer !== this.props.timer) {\n      this.props.updateTimer();\n    }\n  }\n\n  render() {\n    const {\n      words, activeAnswer, onCLick,\n      volume, handleVolume, score, timer,\n    } = this.props;\n\n    return (\n      <div className={'sprint-play__container'}>\n        <div className={'sprint-play__header'}>\n\n          <div className={'sprint-play__timer-wrapper'}>\n            <TimerIcon style={{ fontSize: '2.4rem' }} />\n            <div className={'sprint-play__timer'}>{timer}</div>\n          </div>\n\n          <div className={'sprint-play__point-wrapper'}>\n            <PetsIcon style={{ fontSize: '2.4rem' }} />\n            <div className={'sprint-play__point-score'}>{score}</div>\n          </div>\n\n          <IconButton onClick={handleVolume}>\n            {volume\n              ? <VolumeUpIcon className={'sprint-play__volume'} style={{ fontSize: '2.4rem' }} />\n              : <VolumeOffIcon className={'sprint-play__volume'} style={{ fontSize: '2.4rem' }} />}\n          </IconButton>\n        </div>\n        <div className={'sprint-play__board'}>\n          <div className={'sprint-play__rangs'}>\n            {this.arr.map((value, key) => (\n              <div className={`sprint-play__rang-item sprint-play__${value}`} key={key}>\n                <i className={`fa fa-${value}`} key={key}></i>\n              </div>\n            ))}\n          </div>\n          <div className={'sprint-play__word'}>{words[0]}</div>\n\n          <div className={'sprint-play__translate'}>{activeAnswer}</div>\n\n        </div>\n        <div className={'sprint-play__control'}>\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            size=\"large\"\n            onClick={onCLick}\n            value={0}\n            style={{ width: 120, fontSize: '1.5rem' }}\n          >\n            НЕВЕРНО\n      </Button>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            size=\"large\"\n            onClick={onCLick}\n            value={1}\n            style={{ width: 120, fontSize: '1.5rem' }}\n          >\n            ВЕРНО\n      </Button>\n\n        </div>\n      </div >\n\n    );\n  }\n}\n\nPlayGame.propTypes = {\n  words: PropTypes.array,\n  activeAnswer: PropTypes.string,\n  volume: PropTypes.bool,\n  handleClose: PropTypes.func,\n  handleVolume: PropTypes.func,\n  score: PropTypes.number,\n  timer: PropTypes.number,\n  onCLick: PropTypes.func,\n  updateTimer: PropTypes.func,\n  counterTotal: PropTypes.number,\n  isAnswerQuiz: PropTypes.string,\n};\n\nexport default PlayGame;\n","import React from 'react';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport PropTypes from 'prop-types';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport PlayCircleFilledIcon from '@material-ui/icons/PlayCircleFilled';\nimport IconButton from '@material-ui/core/IconButton';\n\nconst StyledTableCell = withStyles((theme) => ({\n  root: {\n    padding: '4px 4px 4px 10px',\n    fontSize: '1.4rem',\n    lineHeight: '2.4rem',\n  },\n  head: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    '&:nth-of-type(odd)': {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n}))(TableRow);\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 700,\n  },\n});\n\nexport default function CustomizedTables({ complete, mistake, audioPlay }) {\n  function createData(name, calories, fat, carbs, protein) {\n    return {\n      name, calories, fat, carbs, protein,\n    };\n  }\n\n  const words = complete.words.concat(mistake.words);\n  const translate = complete.translate.concat(mistake.translate);\n  const audio = complete.audio.concat(mistake.audio);\n  const arr = [];\n  words.forEach((value, key) => {\n    arr.push({\n      word: value,\n      translate: translate[key],\n      audio: <IconButton onClick={() => audioPlay(audio[key])}><PlayCircleFilledIcon /></IconButton>\n      ,\n    });\n  });\n\n  const rows = arr.map((value, key) => createData(value.word, value.translate, value.audio, complete.total > key ? 'угадал' : 'не угадал'));\n\n  const classes = useStyles();\n\n  return (\n    <TableContainer component={Paper}>\n      <Table className={classes.table} aria-label=\"customized table\">\n        <TableHead>\n          <TableRow>\n            <StyledTableCell>Слово</StyledTableCell>\n            <StyledTableCell align=\"right\">Перевод</StyledTableCell>\n            <StyledTableCell align=\"right\">Аудио</StyledTableCell>\n            <StyledTableCell align=\"right\">Статус</StyledTableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map((row) => (\n            <StyledTableRow key={row.name}>\n              <StyledTableCell component=\"th\" scope=\"row\">\n                {row.name}\n              </StyledTableCell>\n              <StyledTableCell align=\"right\">{row.calories}</StyledTableCell>\n              <StyledTableCell align=\"right\">{row.fat}</StyledTableCell>\n              <StyledTableCell align=\"right\">{row.carbs}</StyledTableCell>\n              <StyledTableCell align=\"right\">{row.protein}</StyledTableCell>\n            </StyledTableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n\nCustomizedTables.propTypes = {\n  complete: PropTypes.object,\n  mistake: PropTypes.object,\n  audioPlay: PropTypes.func,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport { Link } from 'react-router-dom';\nimport Slide from '@material-ui/core/Slide';\n// eslint-disable-next-line import/no-unresolved\nimport CustomizedTables from '../../UI/Table.jsx';\nimport { pagesData, text } from '../../../../helpers/constants';\n\n// eslint-disable-next-line react/display-name\nconst Transition = React.forwardRef((props, ref) => <Slide direction=\"up\" ref={ref} {...props} />);\n\nexport default function FinishGame({\n  isFinished, complete, mistake, audioPlay, onReloadGame,\n}) {\n  return (\n    <div>\n      <Dialog\n        maxWidth={false}\n        open={isFinished}\n        TransitionComponent={Transition}\n        keepMounted\n        aria-labelledby=\"alert-dialog-slide-title\"\n        aria-describedby=\"alert-dialog-slide-description\"\n      >\n        <DialogContent >\n          <DialogContentText id=\"alert-dialog-slide-description\">\n            <CustomizedTables\n              complete={complete}\n              mistake={mistake}\n              audioPlay={audioPlay}\n            />\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Link to={`/${pagesData.learnWords.path}`}>\n            <Button\n              color=\"primary\"\n              style={{ fontSize: '1.4rem' }}\n            >\n              { text.ru.button.learnWords }\n            </Button>\n\n          </Link>\n\n          <Button style={{ fontSize: '1.4rem' }} onClick={() => onReloadGame()} color=\"primary\">\n            { text.ru.button.newGame }\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n\nFinishGame.propTypes = {\n  isFinished: PropTypes.bool,\n  complete: PropTypes.object,\n  mistake: PropTypes.object,\n  audioPlay: PropTypes.func,\n  onReloadGame: PropTypes.func,\n};\n","import FinishGame from './FinishGame.jsx';\n\nexport default FinishGame;\n","import axios from 'axios';\n\nimport { apiLinks, count } from '../constants';\nimport { getRandomNumber } from '../functions';\n\nexport const getWords = async (page, group) => {\n  const url = `${apiLinks.base}words?page=${page}&group=${group}`;\n  const response = await axios.get(url);\n  return response.data;\n};\n\nexport const getWordsById = async (wordId) => {\n  const url = `${apiLinks.base}words/${wordId}`;\n  const response = await axios.get(url);\n  return response.data;\n};\n\nexport const getRandomWordByGroup = async (group) => {\n  const randomPage = getRandomNumber(0, count.pages);\n  const data = await getWords(randomPage, group);\n  const randomKey = getRandomNumber(0, count.words);\n  return data[randomKey];\n};\n\nexport const getWordsByAmount = async (group, amountOfAnswers) => {\n  const result = Array(amountOfAnswers).fill(0)\n    .map(() => getRandomWordByGroup(group));\n  const words = await Promise.all(result);\n  return words;\n};\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport StartGame from './Components/StartGame';\nimport PlayGame from './Components/PlayGame';\nimport FinishGame from './Components/FinishGame';\nimport UserService from '../../helpers/userService';\n\nimport {\n  count,\n  applicationThings,\n  localStorageItems,\n  soundError,\n  soundSuccess,\n} from '../../helpers/constants';\n\nimport {\n  saveRightToGamesStats,\n  saveWrongToGamesStats,\n  updateUserWordRate,\n  saveGameResults,\n} from '../../helpers/wordsService';\nimport { getWordsByAmount } from '../../helpers/wordsService/wordsApi';\n\nimport './Sprint.scss';\nimport {\n  getRandomNumber,\n  playAudio,\n  shuffleArray,\n} from '../../helpers/functions';\n\nconst initialState = {\n  wordObject: {},\n  checkedUserWords: false,\n  allUserWords: [],\n  timer: 60,\n  score: 0,\n  activeQuestion: '',\n  activeAnswer: '',\n  activeCard: 0,\n  isTrue: false,\n  isAnswerQuiz: 'default',\n  audio: [],\n  answerState: null,\n  currentGroup: null,\n  counter: {\n    total: 0,\n    multiplier: 1,\n    win: 0,\n  },\n  changeGroup: false,\n  translateWords: [],\n  words: [],\n  isFinished: false,\n  isStarted: false,\n  volume: true,\n  mistake: {\n    total: 0,\n    words: [],\n    translate: [],\n    audio: [],\n  },\n  complete: {\n    total: 0,\n    words: [],\n    translate: [],\n    audio: [],\n  },\n};\n\nconst { SPRINT } = applicationThings;\n\nconst userService = new UserService();\nconst { getUserWordsNoRemoved } = userService;\n\nclass Sprint extends Component {\n  basic = count.sprint.pointsMultiplier\n\n  state = initialState\n\n  updateState = async () => {\n    const words = [];\n    const translateWords = [];\n    const answerState = null;\n    const audio = [];\n    let isTrue = false;\n    const token = this.props.token\n      || localStorage.getItem(localStorageItems.token);\n    const userId = this.props.userId\n      || localStorage.getItem(localStorageItems.userId);\n\n    try {\n      const allUserWordsRandom = shuffleArray(token && this.state.checkedUserWords\n        ? await getUserWordsNoRemoved(userId)\n        : []);\n\n      if (!this.state.allUserWords.length) {\n        this.setState({ allUserWords: allUserWordsRandom });\n      }\n      const { counter, allUserWords } = this.state;\n      const { total } = counter;\n      const userWords = allUserWords.slice(total, total + 2);\n\n      const allCards = (allUserWords.length - 1 > total)\n        ? userWords\n        : await getWordsByAmount(this.state.currentGroup, 2);\n      allCards.forEach((card) => {\n        words.push(card.word);\n        translateWords.push(card.wordTranslate);\n        audio.push(card.audio);\n      });\n      const activeCard = getRandomNumber(0, allCards.length - 1);\n      const activeQuestion = words[0];\n      const wordObject = allCards[0];\n      const activeAnswer = translateWords[Math.round(Math.random())];\n      if (translateWords[0] === activeAnswer) {\n        isTrue = true;\n      }\n      this.setState({\n        wordObject,\n        words,\n        translateWords,\n        answerState,\n        activeCard,\n        activeQuestion,\n        audio,\n        activeAnswer,\n        isTrue\n        ,\n      });\n    } catch (e) {\n      console.error(e);\n      // TODO add erorrs' handler\n    }\n  }\n\n  audioPlay = (path) => (this.state.volume) && playAudio(path);\n\n  handleVolume = () => {\n    this.setState(({ volume }) => ({\n      volume: !volume,\n    }));\n  }\n\n  resultCurrentQuiz = (value) => {\n    const {\n      words, translate, total, audio,\n    } = this.state[value];\n    translate.push(this.state.translateWords[this.state.activeCard]);\n    audio.push(this.state.audio[this.state.activeCard]);\n    words.push(this.state.activeQuestion);\n    this.setState({\n      [value]: {\n        total: total + 1,\n        words: [...words],\n        translate: [...translate],\n        audio: [...audio],\n      },\n    });\n  }\n\n  updateCounter = (mult = 1, win = 0) => {\n    const multiplier = win && this.state.counter.win\n      && this.state.counter.win % count.sprint.correctAnswerOnce === 0 ? mult : 1;\n    this.setState(({ counter }) => ({\n      counter: {\n        total: counter.total + 1,\n        multiplier: win ? counter.multiplier * multiplier : mult,\n        win: win ? counter.win + win : 0,\n      },\n    }));\n  }\n\n  updateScore = (basic) => {\n    this.setState(({ score }) => ({\n      score: score + this.state.counter.multiplier * basic,\n    }));\n  }\n\n  updateTimer = () => {\n    const timerId = setTimeout(() => {\n      this.setState(({ timer }) => ({\n        timer: timer - 1,\n      }));\n    }, 1000);\n    if (this.state.timer === 0) {\n      clearTimeout(timerId);\n      this.setState({ isFinished: true });\n      saveGameResults(applicationThings.SPRINT);\n    }\n  }\n\n  onClickHandler = (e) => {\n    let value;\n    if (e.key === 'ArrowLeft') {\n      value = false;\n    } else if (e.key === 'ArrowRight') {\n      value = true;\n    } else if (e.currentTarget.value) {\n      value = Boolean(Number(e.currentTarget.value));\n    } else {\n      value = null;\n    }\n    if (value !== null) {\n      const { answerState, wordObject, isTrue: isTrueState } = this.state;\n      const isTrue = value;\n\n      if (answerState) {\n        return;\n      }\n\n      this.setState({ answerState: true });\n\n      if (isTrue === isTrueState) {\n        this.setState({ isAnswerQuiz: 'check' });\n        this.audioPlay(soundSuccess);\n        this.updateCounter(count.sprint.counterMultiplier, 1);\n        this.updateScore(this.basic);\n        this.resultCurrentQuiz('complete');\n        saveRightToGamesStats(SPRINT);\n      } else {\n        this.audioPlay(soundError);\n        this.setState({ isAnswerQuiz: 'times' });\n        this.updateCounter();\n        this.resultCurrentQuiz('mistake');\n        saveWrongToGamesStats(SPRINT);\n        updateUserWordRate(wordObject, SPRINT);\n      }\n      this.updateState();\n    }\n  }\n\n  onReloadGame = () => {\n    const state = { ...initialState };\n    this.setState({ ...state });\n    this.updateState();\n  }\n\n  isChangeUserWords = () => {\n    this.setState(({ checkedUserWords }) => ({\n      checkedUserWords: !checkedUserWords,\n    }));\n  }\n\n  handleCurrentGroup = (event) => {\n    this.setState({ currentGroup: event.target.value });\n  }\n\n  render() {\n    const {\n      words, activeAnswer, translateWords, isAnswerQuiz, counter,\n      volume, score, timer, isFinished, mistake, complete, isStarted,\n    } = this.state;\n\n    let page;\n    if (!isStarted) {\n      page = <StartGame\n        isStarted={isStarted}\n        startGame={() => this.setState({ isStarted: true })}\n        handleChangeUserWords={this.isChangeUserWords}\n        handleCurrentGroup={this.handleCurrentGroup}\n        updateState={this.updateState}\n      />;\n    } else if (isStarted && isFinished) {\n      page = <FinishGame\n        isFinished={isFinished}\n        mistake={mistake}\n        complete={complete}\n        audioPlay={this.audioPlay}\n        onReloadGame={this.onReloadGame}\n      />;\n    } else if (isStarted && !isFinished) {\n      page = <PlayGame\n        words={words}\n        activeAnswer={activeAnswer}\n        onCLick={this.onClickHandler}\n        translateWords={translateWords}\n        isAnswerQuiz={isAnswerQuiz}\n        counterTotal={counter.total}\n        volume={volume}\n        handleVolume={this.handleVolume}\n        score={score}\n        timer={timer}\n        updateTimer={this.updateTimer}\n      />;\n    }\n\n    return (\n      <div className={'sprint__wrapper'}>\n        <div className={'sprint__container'}>\n          {page}\n\n        </div>\n      </div>\n\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    token: state.auth.token,\n    userId: state.auth.userId,\n  };\n}\n\nSprint.propTypes = {\n  token: PropTypes.string,\n  userId: PropTypes.string,\n};\n\nexport default connect(mapStateToProps)(Sprint);\n","import Sprint from './Sprint.jsx';\n\nexport default Sprint;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\nimport CloseIcon from '@material-ui/icons/Close';\n\nimport classes from './Header.module.scss';\n\nconst Header = ({\n  volume, heartCount, handleVolume, mistakeTotal, handleClose,\n}) => {\n  const arrComplete = Array(heartCount).fill(<FavoriteIcon style={{ fontSize: 20 }} />);\n  const arrMistake = Array(mistakeTotal).fill(<FavoriteBorderIcon style={{ fontSize: 20 }} />);\n  return (\n    <div className={classes.Header}>\n      <IconButton onClick={handleVolume}>\n        {volume\n          ? <VolumeUpIcon className={classes.Icon} style={{ fontSize: 20 }} />\n          : <VolumeOffIcon className={classes.Icon} style={{ fontSize: 20 }} />}\n      </IconButton>\n      <div>\n        {arrMistake.map((value) => value)}\n        {arrComplete.map((value) => value)}\n        <IconButton\n          onClick={handleClose}\n          className={classes.CloseButton}>\n          <CloseIcon className={classes.Icon} style={{ fontSize: 20 }} />\n        </IconButton>\n      </div>\n    </div>\n\n  );\n};\n\nHeader.propTypes = {\n  volume: PropTypes.bool,\n  heartCount: PropTypes.number,\n  handleVolume: PropTypes.func,\n  mistakeTotal: PropTypes.number,\n  handleClose: PropTypes.func,\n};\n\nHeader.defaultProps = {\n  volume: true,\n  heartCount: 5,\n  handleVolume: () => { },\n  mistakeTotal: 0,\n  handleClose: () => { },\n};\n\nexport default Header;\n","import Header from './Header.jsx';\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\n\nexport default function Switcher({ handleChangeUserWords }) {\n  return (\n    <FormGroup row>\n      <FormControlLabel\n        control={<Switch\n          onChange={handleChangeUserWords}\n          name=\"checkedUserWords\"\n          color=\"primary\"\n        />}\n        label=\"Слова из словаря*\"\n        style={{ color: '#505050' }}\n      />\n    </FormGroup>\n  );\n}\nSwitcher.propTypes = {\n  handleChangeUserWords: PropTypes.func,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\nimport { connect } from 'react-redux';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Button from '@material-ui/core/Button';\nimport PlayCircleOutlineIcon from '@material-ui/icons/PlayCircleOutline';\nimport Switcher from '../UI/switch';\n\nimport { count, gamesData, text } from '../../../../helpers/constants';\n\nimport classes from './StartPage.module.scss';\nimport { getAverageNumber } from '../../../../helpers/functions';\n\nconst StartPage = ({\n  onTotalQuizUpdate, onSubmitForm, handleCurrentGroup, handleChangeUserWords,\n  handleTotalAnswer, totalAnswers, totalQuestions, token,\n}) => {\n  const errorAnswer = totalAnswers > count.savannah.maxAnswers\n    || totalAnswers < count.savannah.minAnswers\n    || !totalAnswers;\n\n  const errorQuiz = totalQuestions > count.savannah.maxQuestions\n    || totalQuestions < count.savannah.minQuestions\n    || !totalQuestions;\n\n  const menuItemList = text.ru.levelsTitles;\n  const [age, setAge] = React.useState('');\n\n  const handleChange = (event) => {\n    setAge(event.target.value);\n    handleCurrentGroup(event);\n  };\n\n  return (\n    <div className={classes.StartPage}>\n      <h1>{gamesData.savannah.title}</h1>\n      <form className={classes.form} onSubmit={(!errorQuiz && !errorAnswer) ? onSubmitForm : null}>\n        <FormControl className={classes.formControl} required>\n          <InputLabel id=\"select-label\">\n            {text.ru.chooseLevel}\n          </InputLabel>\n          <Select\n            labelId=\"select-label\"\n            id=\"simple-select\"\n            value={age}\n            onChange={handleChange}\n          >\n            {menuItemList.map((value, key) => (\n              <MenuItem value={key - 1} key={key}>{value}</MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n\n        <TextField\n          required\n          error={errorQuiz}\n          id=\"savannah-start__questions\"\n          label={`${text.ru.howManyWords} (${count.savannah.minQuestions}—${count.savannah.maxQuestions})`}\n          value={ getAverageNumber(count.savannah.minQuestions, count.savannah.maxQuestions) }\n          variant=\"filled\"\n          onChange={onTotalQuizUpdate}\n          style={{ margin: '20px 0' }}\n        />\n        <TextField\n          required\n          error={errorAnswer}\n          id=\"savannah-start__answers\"\n          label={`${text.ru.howManyAnswers} (${count.savannah.minAnswers}—${count.savannah.maxAnswers})`}\n          inputProps={{ pattern: '[2-5]' }}\n          variant=\"filled\"\n          onChange={handleTotalAnswer}\n          style={{ marginBottom: 20 }}\n          value={ getAverageNumber(count.savannah.minAnswers, count.savannah.maxAnswers) }\n        />\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.button}\n          startIcon={<PlayCircleOutlineIcon />}\n          style={{ background: 'rgba(130, 115, 228, 1)' }}\n        >\n          {text.ru.button.startGame}\n        </Button>\n\n        {token\n          ? (<React.Fragment>\n            <Switcher\n              handleChangeUserWords={handleChangeUserWords}\n            />\n            <span className={classes.startExplanation}>\n              {text.ru.notEnoughWords}\n            </span>\n          </React.Fragment>)\n          : null\n        }\n      </form >\n    </div >);\n};\n\nStartPage.propTypes = {\n  onTotalQuizUpdate: PropTypes.func,\n  onSubmitForm: PropTypes.func,\n  handleCurrentGroup: PropTypes.func,\n  handleTotalAnswer: PropTypes.func,\n  totalAnswers: PropTypes.number,\n  totalQuestions: PropTypes.number,\n  token: PropTypes.string,\n  handleChangeUserWords: PropTypes.func,\n};\n\nStartPage.defaultProps = {\n  onTotalQuizUpdate: () => { },\n  onSubmitForm: () => { },\n  handleCurrentGroup: () => { },\n  handleTotalAnswer: () => { },\n  totalAnswers: 0,\n  totalQuestions: 0,\n};\n\nfunction mapStateToProps(state) {\n  return {\n    token: state.auth.token,\n  };\n}\nexport default connect(mapStateToProps)(StartPage);\n","import StartPage from './StartPage.jsx';\n\nexport default StartPage;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport VolumeDownIcon from '@material-ui/icons/VolumeDown';\n\nimport {\n  playAudio,\n  getFilePath,\n} from '../../../../../../helpers/functions';\n\nimport classes from './ResultItem.module.scss';\n\nconst ResultItem = ({\n  word, keyItem, translate, audio,\n}) => (\n    <div className={classes.Item} key={keyItem}>\n      <IconButton onClick={() => playAudio(getFilePath(audio))}>\n        <VolumeDownIcon className={classes.VolumeDownIcon} style={{ fontSize: 20 }} />\n      </IconButton>\n      <span className={classes.Word}>{word}</span>\n      <span className={classes.Translate}>{`-${translate}`}</span>\n    </div>);\n\nResultItem.propTypes = {\n  word: PropTypes.string,\n  keyItem: PropTypes.number,\n  translate: PropTypes.string,\n  audio: PropTypes.string,\n};\n\nResultItem.defaultProps = {\n  word: '',\n  keyItem: 0,\n  translate: '',\n  audio: '',\n};\n\nexport default ResultItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ResultItem from './ResultItem/ResultItem.jsx';\n\nimport classes from './ResultList.module.scss';\n\nconst ResultList = ({ result, resultTitle, status }) => {\n  const {\n    words, translate, total, audio,\n  } = result;\n  const cls = [classes.Total];\n  cls.push(classes[status]);\n  return (\n    <div className={classes.Wrapper}>\n      <div className={classes.Title}>\n        {resultTitle}\n        <span className={cls.join(' ')}>{total}</span>\n      </div>\n      <div className={classes.Content}>\n        {words.map((word, key) => (\n          <ResultItem\n            keyItem={key}\n            word={word}\n            translate={translate[key]}\n            result={result}\n            audio={audio[key]}\n          />\n        ))}\n\n      </div>\n    </div>\n  );\n};\n\nResultList.propTypes = {\n  result: PropTypes.object,\n  resultTitle: PropTypes.string,\n  status: PropTypes.string,\n};\n\nResultList.defaultProps = {\n  result: {\n    total: 0,\n    words: [],\n    translate: [],\n    audio: [],\n  },\n  resultTitle: '',\n  status: '',\n};\n\nexport default ResultList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport ResultList from './ResultList/ResultList.jsx';\nimport classes from './FinishPage.module.scss';\n\nimport { text } from '../../../../helpers/constants';\n\nconst FinishPage = ({\n  complete, mistake, resultTitle, status, newStartGameHandle,\n}) => (\n    <div className={classes.FinishPage}>\n      <div className={classes.finishWrapper}>\n        <ResultList\n          result={mistake}\n          resultTitle={resultTitle.error}\n          status={status.error}\n        />\n        <ResultList\n          result={complete}\n          resultTitle={resultTitle.success}\n          status={status.success}\n        />\n      </div>\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        size=\"large\"\n        onClick={newStartGameHandle}\n        style={{\n          background: 'rgba(130, 115, 228, 1)',\n          position: 'absolute',\n          bottom: 50,\n        }}\n      >\n        {text.ru.button.newGame}\n      </Button>\n    </div>);\n\nFinishPage.propTypes = {\n  status: PropTypes.object,\n  resultTitle: PropTypes.object,\n  complete: PropTypes.object,\n  mistake: PropTypes.object,\n  newStartGameHandle: PropTypes.func,\n};\n\nFinishPage.defaultProps = {\n  newStartGameHandle: () => { },\n  status: {},\n  resultTitle: {},\n  complete: {\n    total: 0,\n    words: [],\n    translate: [],\n  },\n  mistake: {\n    total: 0,\n    words: [],\n    translate: [],\n  },\n};\n\nexport default FinishPage;\n","import FinishPage from './FInishPage.jsx';\n\nexport default FinishPage;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport classes from './AnswerItem.module.scss';\n\nclass AnswerItem extends Component {\n  componentDidMount() {\n    document.addEventListener('keyup', this.props.keyPressed);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keyup', this.props.keyPressed);\n  }\n\n  render() {\n    const {\n      id, guessedWords, trueAnswer, state, value,\n    } = this.props;\n    const cls = [classes.AnswerItem];\n    if (state) {\n      cls.push(classes[state]);\n    }\n    if (trueAnswer) {\n      cls.push(classes[trueAnswer]);\n    }\n\n    return (\n      <span\n        className={cls.join(' ')}\n        id={id}\n        onClick={guessedWords}\n        key={id}\n      >\n        {value}\n      </span>\n    );\n  }\n}\n\nAnswerItem.propTypes = {\n  id: PropTypes.string,\n  guessedWords: PropTypes.func,\n  trueAnswer: PropTypes.string,\n  state: PropTypes.string,\n  value: PropTypes.string,\n  keyPressed: PropTypes.func,\n};\n\nAnswerItem.defaultProps = {\n  id: '',\n  guessedWords: () => { },\n  trueAnswer: '',\n  state: '',\n  value: '',\n  keyPressed: () => { },\n};\n\nexport default AnswerItem;\n","import AnswerItem from './AnswerItem.jsx';\n\nexport default AnswerItem;\n","import AnswerList from './AnswerList.jsx';\n\nexport default AnswerList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport AnswerItem from './AnswerItem';\n\nimport classes from './AnswerList.module.scss';\n\nconst AnswerList = ({\n  translateWords, id, guessedWords, state, keyPressed,\n}) => {\n  const trueNumberAnswer = state ? Object.keys(state[1])[0] : null;\n\n  return (\n    <div className={classes.words}>\n\n      {translateWords.map((value, key) => (\n        <AnswerItem\n          key={key}\n          id={id[key]}\n          guessedWords={guessedWords}\n          value={`${key + 1} ${value}`}\n          state={state ? state[0][id[key]] : null}\n          trueAnswer={state && key === +trueNumberAnswer ? state[1][trueNumberAnswer] : null}\n          keyPressed={keyPressed}\n        />\n      ))\n      }\n    </div >\n  );\n};\n\nAnswerList.propTypes = {\n  translateWords: PropTypes.array,\n  id: PropTypes.array,\n  guessedWords: PropTypes.func,\n  state: PropTypes.array,\n  keyPressed: PropTypes.func,\n};\n\nexport default AnswerList;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport styled, { keyframes } from 'styled-components';\nimport { zoomInLeft } from 'react-animations';\n\nimport AnswerList from './AnswerList';\n\nimport classes from './ActiveQuiz.module.scss';\n\nconst Zoom = styled.div`animation: 2s ${keyframes`${zoomInLeft}`}`;\n\nclass ActiveQuiz extends Component {\n  componentDidUpdate() {\n    if (this.props.timer === 6) this.props.onDefault();\n  }\n\n  componentDidMount() {\n    this.props.onTimeOut();\n  }\n\n  render() {\n    const {\n      guessedWords, translateWords, id, state, activeQuestion, keyPressed,\n    } = this.props;\n    return (\n      <div className={classes.ActiveQuiz}>\n        <AnswerList\n          guessedWords={guessedWords}\n          translateWords={translateWords}\n          id={id}\n          state={state}\n          keyPressed={keyPressed}\n        />\n        {\n          (!state && translateWords)\n          && (<Zoom>\n            <div className={classes.Question}>\n              {activeQuestion}\n            </div>\n          </Zoom>)\n        }\n      </div>);\n  }\n}\n\nActiveQuiz.propTypes = {\n  guessedWords: PropTypes.func,\n  translateWords: PropTypes.array,\n  id: PropTypes.array,\n  state: PropTypes.array,\n  activeQuestion: PropTypes.string,\n  keyPressed: PropTypes.func,\n  timer: PropTypes.number,\n  onDefault: PropTypes.func,\n  onTimeOut: PropTypes.func,\n};\n\nActiveQuiz.defaultProps = {\n  guessedWords: () => { },\n  translateWords: [],\n  id: [],\n  state: null,\n  activeQuestion: '',\n  keyPressed: () => { },\n  timer: 0,\n  onDefault: () => { },\n  onTimeOut: () => { },\n};\n\nexport default ActiveQuiz;\n","import ActiveQuiz from './ActiveQuiz.jsx';\n\nexport default ActiveQuiz;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Header from './components/Header';\nimport StartPage from './components/StartPage';\nimport FinishPage from './components/FinishPage';\nimport ActiveQuiz from './components/ActiveQuiz';\nimport UserService from '../../helpers/userService';\n\nimport {\n  questionStatus,\n  text, localStorageItems, applicationThings,\n  soundFinish, soundSuccess, soundError,\n} from '../../helpers/constants';\n\nimport {\n  countQuestionsSets,\n  getRandomNumber,\n  playAudio,\n  shuffleArray,\n} from '../../helpers/functions';\n\nimport {\n  saveRightToGamesStats,\n  saveWrongToGamesStats,\n  updateUserWordRate,\n  saveGameResults,\n} from '../../helpers/wordsService';\n\nimport { getWordsByAmount } from '../../helpers/wordsService/wordsApi';\n\nimport classes from './Savannah.module.scss';\n\nconst initialState = {\n  currentUserWordId: '',\n  wordObject: {},\n  checkedUserWords: false,\n  allUserWords: [],\n  timer: 0,\n  activeQuestion: '',\n  activeCard: 0,\n  audio: [],\n  answerState: null,\n  currentGroup: null,\n  counter: 1,\n  changeGroup: false,\n  idWords: [],\n  isFinished: false,\n  isStarted: false,\n  totalAnswers: 2,\n  totalQuestions: 5,\n  translateWords: [],\n  volume: true,\n  heartCount: 5,\n  keyPressed: null,\n  words: [],\n  mistake: {\n    total: 0,\n    words: [],\n    translate: [],\n    audio: [],\n  },\n  complete: {\n    total: 0,\n    words: [],\n    translate: [],\n    audio: [],\n  },\n};\nconst userService = new UserService();\n\nconst { getUserWordsNoRemoved } = userService;\n\nconst { SAVANNAH } = applicationThings;\n\nclass Savannah extends Component {\n  status = questionStatus;\n\n  resultTitle = {\n    success: text.ru.answersCorrect,\n    error: text.ru.answersMistaken,\n  };\n\n  state = { ...initialState };\n\n  updateState = async () => {\n    const words = [];\n    const translateWords = [];\n    const idWords = [];\n    const answerState = null;\n    const audio = [];\n    try {\n      const { counter, totalAnswers, allUserWords } = this.state;\n\n      const { userId, token } = this.props;\n\n      const isRegUser = (token || localStorage.getItem(localStorageItems.token))\n        && this.state.checkedUserWords;\n\n      let allUserWordsRandom = [];\n      let currentUserWordId = null;\n      let activeCard = null;\n\n      if (isRegUser) {\n        allUserWordsRandom = await getUserWordsNoRemoved(userId);\n        currentUserWordId = allUserWordsRandom[counter - 1]?._id;\n      }\n\n      const resultArray = [allUserWordsRandom[counter - 1], ...await getWordsByAmount(2, totalAnswers - 1)];\n\n      if (!allUserWords.length) {\n        this.setState({ allUserWords: allUserWordsRandom });\n      }\n\n      const allCards = (allUserWordsRandom.length + 1 > counter)\n        ? shuffleArray(resultArray)\n        : await getWordsByAmount(this.state.currentGroup, this.state.totalAnswers);\n\n      allCards.forEach((card, key) => {\n        words.push(card.word);\n        translateWords.push(card.wordTranslate);\n        idWords.push(card.id || card._id);\n        audio.push(card.audio);\n        if (isRegUser\n          && card.word === allUserWords[counter - 1]?.word\n          && allUserWordsRandom.length + 1 > counter\n        ) {\n          activeCard = key;\n        }\n      });\n      if (allUserWords.length < counter) {\n        activeCard = getRandomNumber(0, allCards.length - 1);\n      }\n      const wordObject = allCards[activeCard];\n\n      const activeQuestion = isRegUser && allUserWords.length - 1 > counter\n        ? resultArray[0].word\n\n        : allCards[activeCard].word;\n\n      this.setState({\n        words,\n        translateWords,\n        idWords,\n        answerState,\n        activeCard,\n        activeQuestion,\n        audio,\n        currentUserWordId,\n        wordObject,\n      });\n    } catch (e) {\n      console.log(e);\n      // TODO handle error for showing user\n    }\n  }\n\n  onTotalQuizUpdate = (e) => {\n    this.setState({ totalQuestions: +e.target.value });\n  }\n\n  guessedWords = (currentAnswer, error, success) => {\n    this.setState({\n      answerState: [\n        { [currentAnswer]: error },\n        { [this.state.activeCard]: success },\n      ],\n    });\n  }\n\n  handleHeart = () => {\n    this.setState(({ heartCount }) => ({\n      heartCount: heartCount - 1,\n    }));\n  }\n\n  updateCounter = () => {\n    this.setState(({ counter }) => ({\n      counter: counter + 1,\n    }));\n  }\n\n  handleVolume = () => {\n    this.setState(({ volume }) => ({\n      volume: !volume,\n    }));\n  }\n\n  handleClose = () => {\n    this.setState({ isFinished: true });\n    this.playAudio(soundFinish);\n    saveGameResults(applicationThings.SAVANNAH);\n  }\n\n  playAudio = (path) => this.state.volume && playAudio(path);\n\n  resultCurrentQuiz = (value) => {\n    const {\n      words, translate, total, audio,\n    } = this.state[value];\n    translate.push(this.state.translateWords[this.state.activeCard]);\n    audio.push(this.state.audio[this.state.activeCard]);\n    words.push(this.state.activeQuestion);\n    this.setState({\n      [value]: {\n        total: total + 1,\n        words: [...words],\n        translate: [...translate],\n        audio: [...audio],\n      },\n    });\n  }\n\n  handleCurrentGroup = (event) => {\n    if (event.target.value === -1) {\n      this.setState({ changeGroup: true, currentGroup: 0 });\n    } else {\n      this.setState({ currentGroup: event.target.value, changeGroup: false });\n    }\n  }\n\n  handleTotalAnswer = (e) => {\n    this.setState({ totalAnswers: Number(e.target.value) });\n  }\n\n  onClickHandler = () => {\n    if (this.state.currentGroup !== null) {\n      this.setState({ isStarted: true });\n    }\n    this.updateState();\n  }\n\n  onTimeOut = () => {\n    setInterval(() => {\n      this.setState(({ timer }) => ({\n        timer: timer + 1,\n      }));\n    }, 1000);\n  }\n\n  gameStatus = (idWordPressed = 'default') => {\n    if (this.state.heartCount === 1 || this.state.counter === +this.state.totalQuestions) {\n      setTimeout(() => {\n        this.handleClose();\n      }, 800);\n    } else if (idWordPressed) {\n      setTimeout(() => {\n        this.updateState(this.state.currentGroup, this.state.totalAnswers);\n      }, 500);\n      this.updateCounter();\n    }\n  }\n\n  onChangeGroupwords = () => {\n    if (this.state.counter !== 0 && this.state.counter\n      % countQuestionsSets(this.state.totalQuestions) === 0 && this.state.changeGroup) {\n      this.setState(({ currentGroup }) => ({ currentGroup: currentGroup + 1 }));\n    }\n  }\n\n  onCorrectAnswer = (idWordPressed) => {\n\n    const { idWords, activeCard, wordObject } = this.state;\n\n    if (idWordPressed === idWords[activeCard]) {\n      this.resultCurrentQuiz('complete');\n      this.guessedWords(idWordPressed, null, 'success');\n      this.playAudio(soundSuccess);\n      saveRightToGamesStats(SAVANNAH);\n    } else {\n      this.resultCurrentQuiz('mistake');\n      this.handleHeart();\n      this.playAudio(soundError);\n      this.guessedWords(idWordPressed, (!idWordPressed ? null : 'error'), 'success');\n      saveWrongToGamesStats(SAVANNAH);\n      updateUserWordRate(wordObject, SAVANNAH);\n    }\n  }\n\n  onAnswerClickHandler = (e) => {\n    const keys = this.state.words;\n\n    e.preventDefault();\n    const { idWords, answerState } = this.state;\n    this.setState({ timer: 0 });\n    const idWordPressed = e.target.id || idWords[Number(e.key) - 1];\n\n    if (answerState) {\n      const key = Object.keys(answerState)[0];\n      if (answerState[key] === this.status.error || this.status.success) {\n        return;\n      }\n    }\n\n    keys.forEach((value, key) => {\n      if (Number(e.key) === key + 1) {\n        this.gameStatus(idWordPressed);\n        this.onChangeGroupwords();\n        this.onCorrectAnswer(idWordPressed);\n      }\n    });\n\n    if (e.target.id) {\n      this.gameStatus(idWordPressed);\n      this.onChangeGroupwords();\n      this.onCorrectAnswer(idWordPressed);\n    }\n  }\n\n  onDefault = () => {\n    this.gameStatus();\n    this.onChangeGroupwords();\n    this.onCorrectAnswer();\n    this.setState({ timer: 0 });\n  }\n\n  isChangeUserWords = () => {\n    this.setState(({ checkedUserWords }) => ({\n      checkedUserWords: !checkedUserWords,\n    }));\n  }\n\n  newStartGameHandle = () => {\n    const state = { ...initialState };\n    this.setState({ ...state });\n  }\n\n  render() {\n    const {\n      heartCount, volume, complete, mistake, translateWords, idWords, timer,\n      answerState, activeQuestion, isStarted, isFinished, audio, totalAnswers,\n      totalQuestions,\n    } = this.state;\n\n    let page;\n    if (!isStarted) {\n      page = < StartPage\n        onTotalQuizUpdate={this.onTotalQuizUpdate}\n        onSubmitForm={this.onClickHandler}\n        handleCurrentGroup={this.handleCurrentGroup}\n        handleTotalAnswer={this.handleTotalAnswer}\n        handleChangeUserWords={this.isChangeUserWords}\n        totalAnswers={totalAnswers}\n        totalQuestions={totalQuestions}\n      />;\n    } else if (isStarted && isFinished) {\n      page = <FinishPage\n        complete={complete}\n        mistake={mistake}\n        resultTitle={this.resultTitle}\n        status={this.status}\n        pathAudio={audio}\n        newStartGameHandle={this.newStartGameHandle}\n      />;\n    } else if (isStarted && !isFinished) {\n      page = <div>\n        <Header\n          volume={volume}\n          heartCount={heartCount}\n          handleVolume={this.handleVolume}\n          mistakeTotal={mistake.total}\n          handleClose={this.handleClose}\n        />\n        <ActiveQuiz\n          guessedWords={this.onAnswerClickHandler}\n          translateWords={translateWords}\n          id={idWords}\n          state={answerState}\n          activeQuestion={activeQuestion}\n          isStarted={isStarted}\n          keyPressed={this.onAnswerClickHandler}\n          timer={timer}\n          onTimeOut={this.onTimeOut}\n          onDefault={this.onDefault}\n          updateState={this.updateState}\n        />\n      </div>;\n    }\n\n    return (\n      <div className={classes.Savannah}>\n        <div className={classes.Container}>\n          {page}\n        </div>\n      </div>\n    );\n  }\n}\nfunction mapStateToProps(state) {\n  return {\n    token: state.auth.token,\n    userId: state.auth.userId,\n  };\n}\n\nSavannah.propTypes = {\n  token: PropTypes.string,\n  userId: PropTypes.string,\n};\nexport default connect(mapStateToProps)(Savannah);\n","import Savannah from './Savannah.jsx';\n\nexport default Savannah;\n","import StartButton from './StartButton.jsx';\n\nexport default StartButton;\n","import React from 'react';\n\nconst StartButton = () => (\n  <button className=\"start-page__start-button\">Начать игру</button>\n);\n\nexport default StartButton;\n","import Preloader from './Preloader.jsx';\n\nexport default Preloader;\n","import React from 'react';\n\nconst Preloader = () => (\n  <div className=\"lds-circle\"><div></div></div>\n);\n\nexport default Preloader;\n","import React from 'react';\nimport PropTypes, { number } from 'prop-types';\nimport { Typography, Slider } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\nimport classNames from 'classnames';\n\nconst standartMarks = [\n  {\n    value: 0,\n    label: '0°C',\n  },\n  {\n    value: 20,\n    label: '20°C',\n  },\n  {\n    value: 37,\n    label: '37°C',\n  },\n  {\n    value: 100,\n    label: '100°C',\n  },\n];\n\nfunction valuetext(value) {\n  return `${value}°C`;\n}\n\nclass DiscreteSlider extends React.Component {\n  constructor(props) {\n    super(props);\n    const { marks = standartMarks } = props;\n    const { defaultValue = marks[0].value } = props;\n    this.arrayOfColorsForTrack = props.arrayOfColorsForTrack || (new Array(marks.length)).fill('#000');\n    const indexOfDefaultValue = marks.findIndex((mark) => defaultValue === mark.value);\n    this.defaultColor = this.arrayOfColorsForTrack[indexOfDefaultValue];\n  }\n\n  componentDidMount() {\n    if (this.props.stickyLabel) {\n      document\n        .querySelector(`.${this.props.className}`)\n        .style.setProperty('--stickyLabelValue', `\"${this.props.defaultValue}\"`);\n    }\n  }\n\n  render() {\n    const {\n      marks = standartMarks,\n      label = 'Your label',\n      className = '',\n      max = 100,\n      min = 0,\n      onChangeCommitted = null,\n      stickyLabel,\n    } = this.props;\n    const {\n      defaultValue = marks[0].value,\n      step = max / marks.length,\n    } = this.props;\n\n    const indexOfDefaultValue = marks.findIndex((mark) => defaultValue === mark.value);\n    this.defaultColor = this.arrayOfColorsForTrack[indexOfDefaultValue];\n\n    const StyledSlider = withStyles({\n      root: {\n        width: 300,\n      },\n      track: {\n        backgroundColor: this.defaultColor,\n      },\n      thumb: {\n        backgroundColor: this.defaultColor,\n      },\n      markLabel: {\n        display: stickyLabel ? 'none' : 'block',\n      },\n    })(Slider);\n\n    const stepperContainerClasses = classNames({\n      'stepper-container': true,\n      [className]: true,\n      'sticky-label': stickyLabel,\n    });\n\n    return (\n      <div className={stepperContainerClasses}>\n        <Typography id=\"discrete-slider-custom\" gutterBottom>\n          {label}\n        </Typography>\n        <StyledSlider\n          defaultValue={defaultValue}\n          getAriaValueText={valuetext}\n          aria-labelledby=\"discrete-slider-custom\"\n          step={step}\n          valueLabelDisplay=\"off\"\n          marks={marks}\n          max={max}\n          min={min}\n          onChange={(event, value) => {\n            const indexOfNewValue = marks.findIndex((mark) => value === mark.value);\n            document.querySelector(`.${className} .MuiSlider-track`)\n              .style.backgroundColor = this.arrayOfColorsForTrack[indexOfNewValue];\n            document.querySelector(`.${className} .MuiSlider-thumb`)\n              .style.backgroundColor = this.arrayOfColorsForTrack[indexOfNewValue];\n            if (stickyLabel) {\n              document\n                .querySelector(`.${this.props.className}`)\n                .style.setProperty('--stickyLabelValue', `\"${value}\"`);\n            }\n          }}\n          onChangeCommitted={onChangeCommitted}\n        />\n      </div>\n    );\n  }\n}\n\nDiscreteSlider.propTypes = {\n  marks: PropTypes.arrayOf(PropTypes.object),\n  label: PropTypes.string,\n  defaultValue: number,\n  step: PropTypes.number,\n  className: PropTypes.string,\n  max: PropTypes.number,\n  min: PropTypes.number,\n  arrayOfColorsForTrack: PropTypes.arrayOf(PropTypes.string),\n  onChangeCommitted: PropTypes.func,\n  stickyLabel: PropTypes.bool,\n};\n\nexport default DiscreteSlider;\n","import Stepper from './Stepper.jsx';\n\nexport default Stepper;\n","const pagesCount = 30;\nconst levelsCount = 6;\nconst wordsPerPage = 10;\n\nconst localStorageItems = {\n  latestResults: 'unmess_latest-results',\n};\n\nexport {\n  pagesCount,\n  levelsCount,\n  wordsPerPage,\n  localStorageItems,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nimport StartButton from '../../StartButton';\nimport Preloader from '../../Preloader';\nimport Stepper from '../../../../../../basicComponents/Stepper';\n\nimport { levelsCount, pagesCount } from '../../../helpers/contants';\n\nconst generateStepperMarks = (stepsCount) => (\n  (new Array(stepsCount).fill({}))\n    .map((obj, index) => ({\n      value: index + 1,\n      label: `${index + 1}`,\n    }))\n);\n\nconst StartPage = (props) => {\n  const {\n    loading,\n    levelChanged,\n    pageChanged,\n    currentLevel,\n    currentPage,\n  } = props;\n\n  return (\n    <div className=\"start-page\">\n      <h2 className=\"start-page__title game-title\">Unmess</h2>\n      <p className=\"start-page__description\">Соедините правильно слова и их значения</p>\n      {\n        loading\n          ? <Preloader />\n          : (<>\n            <div className=\"unmess-steppers-container\">\n              <Stepper\n                  defaultValue={currentLevel + 1}\n                  onChangeCommitted={(event, value, ...args) => levelChanged(value - 1, ...args)}\n                  step={null}\n                  max={levelsCount}\n                  marks={generateStepperMarks(levelsCount)}\n                  className=\"unmess-levels-stepper\"\n                  label=\"Выберите уровень:\"\n                  arrayOfColorsForTrack={['#7CCBB3', '#90BE6D', '#F9C74F', '#F8961E', '#F3722C', '#F94144']}\n                  stickyLabel={false}\n                />\n                <Stepper\n                  defaultValue={currentPage + 1}\n                  onChangeCommitted={(event, value, ...args) => pageChanged(value - 1, ...args)}\n                  step={null}\n                  max={pagesCount}\n                  marks={generateStepperMarks(pagesCount)}\n                  className=\"unmess-pages-stepper\"\n                  label=\"Выберите страницу:\"\n                  arrayOfColorsForTrack={(new Array(pagesCount)).fill('#84D7C3')}\n                  stickyLabel={true}\n                />\n            </div>\n              <Link to=\"/unmess/game\"><StartButton /></Link>\n            </>)\n      }\n    </div>\n  );\n};\n\nStartPage.propTypes = {\n  loading: PropTypes.bool,\n  levelChanged: PropTypes.func,\n  pageChanged: PropTypes.func,\n  currentLevel: PropTypes.number,\n  currentPage: PropTypes.number,\n};\n\nexport default StartPage;\n","import StartPage from './StartPage.jsx';\n\nexport default StartPage;\n","export default (str, replacement) => (\n  str.replace(/<i>.*<\\/i>/, replacement)\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Popover from '@material-ui/core/Popover';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  popover: {\n    pointerEvents: 'none',\n  },\n  paper: {\n    padding: theme.spacing(1),\n  },\n}));\n\nconst MouseOverPopover = ({\n  title = 'I\\'m title',\n  description = 'I\\'m description',\n  className = '',\n  descriptionClassName = '',\n}) => {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handlePopoverOpen = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handlePopoverClose = () => {\n    setAnchorEl(null);\n  };\n\n  const open = Boolean(anchorEl);\n\n  return (\n    <div className={className}>\n      <Typography\n        className=\"popover-title\"\n        aria-owns={open ? 'mouse-over-popover' : undefined}\n        aria-haspopup=\"true\"\n        onMouseEnter={handlePopoverOpen}\n        onMouseLeave={handlePopoverClose}\n      >\n        {title}\n      </Typography>\n      <Popover\n        id=\"mouse-over-popover\"\n        className={classes.popover}\n        classes={{\n          paper: classes.paper,\n        }}\n        open={open}\n        anchorEl={anchorEl}\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'center',\n        }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'center',\n        }}\n        onClose={handlePopoverClose}\n        disableRestoreFocus\n        disableScrollLock\n      >\n        <Typography className={`popover-description ${descriptionClassName}`}>{description}</Typography>\n      </Popover>\n    </div>\n  );\n};\n\nMouseOverPopover.propTypes = {\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  description: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  className: PropTypes.string,\n  descriptionClassName: PropTypes.string,\n};\n\nexport default MouseOverPopover;\n","import Popover from './Popover.jsx';\n\nexport default Popover;\n","import GameTitle from './GameTitle.jsx';\n\nexport default GameTitle;\n","import React from 'react';\n\nimport Popover from '../../../../../basicComponents/Popover';\nimport {\n  gamesData,\n  text\n} from '../../../../../helpers/constants';\n\nconst GameTitle = () => (\n  <div className=\"game-title-container\">\n    <h2 className=\"game-title-container__title game-title\">{gamesData.unmess.title}</h2>\n    <Popover\n      className=\"game-title-container__question\"\n      descriptionClassName=\"game-title-container__description\"\n      title={<span className=\"question-icon\"></span>}\n      description={(\n        <span> {text.ru.unmess.instruction} </span>\n      )} />\n  </div>\n);\n\nexport default GameTitle;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport replaceTagInString from '../../../helpers/remove_tag_from_string';\n\nimport GameTitle from '../../GameTitle';\n\nconst GamePage = (props) => {\n  const {\n    untouchedWords,\n    dragStart,\n    touchStart,\n    dragEnd,\n    dragEnter,\n    dragLeave,\n    drop,\n    untouchedDefinitions,\n    guessedWords,\n    wrongWords,\n    showDefinition,\n  } = props;\n\n  return (\n    <div className=\"game-page\">\n      <GameTitle />\n      <div className=\"game-container\">\n        <div className=\"words-container\">\n          {\n            untouchedWords.map((wordObj) => (\n                <div\n                  key={`${wordObj.id}-word`}\n                  className=\"words-container__word flex-div-with-span\"\n                  draggable=\"true\"\n                  onDragStart={(event) => {\n                    dragStart(event, wordObj);\n                  }}\n                  onTouchStart={(event) => {\n                    touchStart(event, wordObj);\n                  }}\n                  onDragEnd={(event) => {\n                    dragEnd(event);\n                  }}>\n                  <span>{wordObj.word}</span>\n                </div>\n            ))\n          }\n        </div>\n        <div className=\"definitions-container\">\n          {\n            untouchedDefinitions.map((wordObj) => (\n              <div\n                data-id={wordObj.id}\n                key={`${wordObj.id}-definition`}\n                className=\"definitions-container__definition flex-div-with-span\"\n                onDragEnter={(event) => {\n                  dragEnter(event);\n                }}\n                onDragLeave={(event) => {\n                  dragLeave(event);\n                }}\n                onDrop={(event) => {\n                  drop(event, wordObj);\n                }}\n                >\n                <span>{wordObj.textMeaning.replace(/<i>.*<\\/i>/, '…')}</span>\n              </div>\n            ))\n          }\n        </div>\n      </div>\n      <div className=\"attempts-container\">\n        <div className=\"right-attempts-container\">\n          {\n            guessedWords.map((wordObj) => (\n              <div key={wordObj.id} className=\"right-attempt\">\n                <div className=\"right-attempt__word flex-div-with-span\">\n                  <span>{wordObj.word}</span>\n                </div>\n                <div className=\"right-attempt__definition flex-div-with-span\">\n                  <span>{replaceTagInString(wordObj.textMeaning, wordObj.word)}</span>\n                </div>\n              </div>\n            ))\n          }\n        </div>\n        <div className=\"wrong-attempts-container\">\n          {\n            wrongWords.map((wordObj) => (\n              <div key={wordObj.id} className=\"wrong-attempt\">\n                <div className=\"wrong-attempt__word flex-div-with-span\">\n                  <span>{wordObj.word}</span>\n                </div>\n                {wordObj.hideDefinition === true\n                  ? (\n                   <div\n                      className=\"wront-attempt__show-answer flex-div-with-span\">\n                      <span onClick={() => showDefinition(wordObj)}>Показать ответ</span>\n                    </div>\n                  )\n                  : (\n                    <div className=\"wrong-attempt__definition flex-div-with-span\">\n                      <span>{replaceTagInString(wordObj.textMeaning, wordObj.word)}</span>\n                    </div>\n                  )\n                }\n              </div>\n            ))\n          }\n        </div>\n      </div>\n    </div>\n  );\n};\n\nGamePage.propTypes = {\n  untouchedWords: PropTypes.arrayOf(PropTypes.object),\n  dragStart: PropTypes.func,\n  untouchedDefinitions: PropTypes.arrayOf(PropTypes.object),\n  guessedWords: PropTypes.arrayOf(PropTypes.object),\n  wrongWords: PropTypes.arrayOf(PropTypes.object),\n  showDefinition: PropTypes.func,\n  dragEnd: PropTypes.func,\n  dragEnter: PropTypes.func,\n  dragLeave: PropTypes.func,\n  drop: PropTypes.func,\n};\n\nexport default GamePage;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect } from 'react-router-dom';\n\nimport GamePageView from './GamePage.jsx';\nimport { localStorageItems } from '../../../helpers/contants';\n\nimport {\n  getPath,\n  playAudio,\n} from '../../../../../../helpers/functions';\nimport {\n  gamesData,\n  soundFinish,\n} from '../../../../../../helpers/constants';\n\nclass GamePage extends React.Component {\n  currentDraggedWord = null;\n\n  preventDefaultFunc = (event) => {\n    event.preventDefault();\n  }\n\n  componentDidMount() {\n    document.addEventListener('dragover', this.preventDefaultFunc);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('dragover', this.preventDefaultFunc);\n  }\n\n  dragStart = (event, wordObj) => {\n    const { target } = event;\n    this.currentDraggedWord = { ...wordObj };\n    target.style.opacity = 0.5;\n    document.querySelectorAll('.definitions-container__definition').forEach((el) => {\n      el.classList.add('dash-border-animated');\n    });\n  }\n\n  touchStart = (event, wordObj) => {\n    let currentDragoveredElement = null;\n    let isPageScrollingUp = false;\n    let isPageScrollingDown = false;\n    let scrollUpInterval;\n    let scrollDownInterval;\n    const currentCursorPosition = {\n      pageX: event.targetTouches[0].pageX,\n      pageY: event.targetTouches[0].pageY,\n      clientX: event.targetTouches[0].clientX,\n      clientY: event.targetTouches[0].clientY,\n    };\n\n    this.currentDraggedWord = { ...wordObj };\n    const { currentTarget } = event;\n    const cloneNode = currentTarget.cloneNode(true);\n\n    function moveAt() {\n      if ((currentCursorPosition.pageX + cloneNode.offsetWidth / 2 <= window.innerWidth)\n      && (currentCursorPosition.pageX - cloneNode.offsetWidth / 2 >= 0)) {\n        cloneNode.style.left = `${currentCursorPosition.pageX - cloneNode.offsetWidth / 2}px`;\n      }\n      cloneNode.style.top = `${currentCursorPosition.pageY - cloneNode.offsetHeight / 2}px`;\n    }\n\n    function setCurrentDragoveredElement() {\n      document.querySelectorAll('.definitions-container__definition').forEach((el) => {\n        el.classList.remove('dragover');\n      });\n      const currentDisplay = cloneNode.style.display;\n      cloneNode.style.display = 'none';\n      currentDragoveredElement = document.elementFromPoint(\n        currentCursorPosition.clientX,\n        currentCursorPosition.clientY,\n      );\n      cloneNode.style.display = currentDisplay;\n      if (currentDragoveredElement\n        && currentDragoveredElement.closest\n        && currentDragoveredElement.closest('.definitions-container__definition')) {\n        currentDragoveredElement.classList.add('dragover');\n      }\n    }\n\n    function onTouchMove(touchEvent) {\n      currentCursorPosition.pageX = touchEvent.targetTouches[0].pageX;\n      currentCursorPosition.pageY = touchEvent.targetTouches[0].pageY;\n      currentCursorPosition.clientX = touchEvent.targetTouches[0].clientX;\n      currentCursorPosition.clientY = touchEvent.targetTouches[0].clientY;\n      if (touchEvent.cancelable) {\n        touchEvent.preventDefault();\n      }\n\n      setCurrentDragoveredElement();\n\n      if (Math.round(\n        100 * (touchEvent.targetTouches[0].clientY / (window.innerHeight - 110)),\n      ) < 40) {\n        if (!isPageScrollingUp) {\n          isPageScrollingUp = true;\n          scrollUpInterval = setInterval(\n            () => {\n              if (window.scrollY - 1 >= 0) {\n                window.scroll(0, window.scrollY - 1);\n                currentCursorPosition.pageY -= 1;\n              } else {\n                window.scroll(0, 0);\n              }\n              moveAt();\n              setCurrentDragoveredElement();\n            },\n            10,\n          );\n        }\n      } else if (Math.round(\n        100 * (touchEvent.targetTouches[0].clientY / (window.innerHeight)),\n      ) > 80) {\n        if (!isPageScrollingDown) {\n          isPageScrollingDown = true;\n          scrollDownInterval = setInterval(\n            () => {\n              const maxScrollDown = document.body.offsetHeight - window.innerHeight;\n              if (window.scrollY + 1 <= maxScrollDown) {\n                window.scroll(0, window.scrollY + 1);\n                currentCursorPosition.pageY += 1;\n              } else {\n                window.scroll(0, maxScrollDown);\n              }\n              moveAt();\n              setCurrentDragoveredElement();\n            },\n            10,\n          );\n        }\n      } else {\n        clearInterval(scrollUpInterval);\n        clearInterval(scrollDownInterval);\n        isPageScrollingUp = false;\n        isPageScrollingDown = false;\n      }\n\n      moveAt();\n    }\n\n    const copiedStyles = Object.entries(window.getComputedStyle(currentTarget))\n      .reduce((acc, currentValue) => {\n        const [key, value] = currentValue;\n        if (!/\\d/.test(key)) {\n          return `${acc}\n            ${key}: ${value};\n          `;\n        }\n        return acc;\n      }, '');\n    cloneNode.style.cssText = copiedStyles;\n    currentTarget.style.opacity = '0.5';\n    cloneNode.style.position = 'absolute';\n    cloneNode.style.zIndex = '1000';\n    document.body.appendChild(cloneNode);\n    moveAt();\n\n    document.querySelectorAll('.definitions-container__definition').forEach((el) => {\n      el.classList.add('dash-border-animated');\n    });\n    document.addEventListener('touchmove', onTouchMove, { passive: false });\n    currentTarget.ontouchend = () => {\n      clearInterval(scrollUpInterval);\n      clearInterval(scrollDownInterval);\n      isPageScrollingUp = false;\n      isPageScrollingDown = false;\n\n      if (currentDragoveredElement\n        && currentDragoveredElement.closest\n        && currentDragoveredElement.closest('.definitions-container__definition')) {\n        this.drop(\n          { currentTarget: currentDragoveredElement },\n          this.props.shuffledCurrentWords.find((word) => (\n            word.id === currentDragoveredElement.dataset.id\n          )),\n        );\n      } else {\n        this.dragEnd({ target: currentTarget });\n      }\n      cloneNode.parentNode.removeChild(cloneNode);\n      document.removeEventListener('touchmove', onTouchMove);\n      currentTarget.ontouchend = null;\n    };\n  }\n\n  dragEnd = (event) => {\n    const { target } = event;\n    target.style.opacity = '';\n    document.querySelectorAll('.definitions-container__definition').forEach((el) => {\n      el.classList.remove('dash-border-animated');\n    });\n  }\n\n  dragEnter = (event) => {\n    const { currentTarget } = event;\n    currentTarget.classList.add('dragover');\n  }\n\n  dragLeave = (event) => {\n    const { currentTarget } = event;\n    currentTarget.classList.remove('dragover');\n  }\n\n  drop = (event, wordObj) => {\n    const { currentTarget } = event;\n    currentTarget.classList.remove('dragover');\n    this.props.wordDropped(this.currentDraggedWord, wordObj);\n    document.querySelectorAll('.definitions-container__definition').forEach((el) => {\n      el.classList.remove('dash-border-animated');\n    });\n  }\n\n  render() {\n    const {\n      currentWords,\n      shuffledCurrentWords,\n    } = this.props;\n\n    const untouchedWords = [];\n    const untouchedDefinitions = [];\n    const guessedWords = [];\n    const wrongWords = [];\n\n    if (currentWords === null) {\n      return <Redirect to={getPath(gamesData.unmess.startPath)} />;\n    }\n\n    currentWords.forEach((wordObj) => {\n      if (wordObj.attempt === null) {\n        untouchedWords.push({ ...wordObj });\n      } else if (wordObj.attempt === true) {\n        guessedWords.push({ ...wordObj });\n      } else if (wordObj.attempt === false) {\n        wrongWords.push({ ...wordObj });\n      }\n    });\n\n    if (untouchedWords.length === 0) {\n      playAudio(soundFinish);\n      const currentLatestResults = JSON.parse(\n        localStorage.getItem(localStorageItems.latestResults),\n      );\n      currentLatestResults.unshift({\n        results: currentWords,\n        date: (new Date()).toLocaleString('ru', {\n          year: 'numeric',\n          month: 'long',\n          day: 'numeric',\n          hour: '2-digit',\n          minute: '2-digit',\n          second: '2-digit',\n          hour12: false,\n        }),\n      });\n      localStorage.setItem(\n        localStorageItems.latestResults,\n        JSON.stringify(currentLatestResults.slice(0, 10)),\n      );\n\n      setTimeout(() => {\n        this.props.history.push('/unmess/results');\n      }, 1500);\n    }\n\n    shuffledCurrentWords.forEach((wordObj) => {\n      if (wordObj.hideDefinition === true) {\n        untouchedDefinitions.push({ ...wordObj });\n      }\n    });\n\n    return <GamePageView\n      {...this.props}\n      untouchedWords={untouchedWords}\n      dragStart={this.dragStart}\n      touchStart={this.touchStart}\n      dragEnd={this.dragEnd}\n      dragEnter={this.dragEnter}\n      dragLeave={this.dragLeave}\n      drop={this.drop}\n      untouchedDefinitions={untouchedDefinitions}\n      guessedWords={guessedWords}\n      wrongWords={wrongWords} />;\n  }\n}\n\nGamePage.propTypes = {\n  wordDropped: PropTypes.func,\n  shuffledCurrentWords: PropTypes.arrayOf(PropTypes.object),\n  currentWords: PropTypes.arrayOf(PropTypes.object),\n  history: PropTypes.object,\n};\n\nexport default GamePage;\n","import React from 'react';\n\nimport { apiLinks } from '../../../../helpers/constants';\nimport { playAudio } from '../../../../helpers/functions';\nimport replaceTagInString from './remove_tag_from_string';\n\nconst mapWordsObjectsToItems = (wordObj, classesPrefix) => (\n  <div\n    onClick={() => playAudio(`${apiLinks.file}${wordObj.audioMeaning}`)}\n    key={`${wordObj.id}-${classesPrefix}`}\n    className={`${classesPrefix}-word-container`}>\n    <span className={`${classesPrefix}-word-container__word`}>{wordObj.word}</span>\n    <span className={`${classesPrefix}-word-container__definition`}>{\n      replaceTagInString(wordObj.textMeaning, wordObj.word)\n    }</span>\n    <div className={`${classesPrefix}-word-container__audio-icon`}>\n      <span className=\"audio-icon\"></span>\n    </div>\n  </div>\n);\n\nexport default mapWordsObjectsToItems;\n","import React from 'react';\n\nimport mapWordsObjectsToItems from './map_words_objects_to_result_items';\n\nconst mapLatestResultsToItems = (results, showDate) => (\n  results.map((resultObj) => {\n    const rightWords = [];\n    const wrongWords = [];\n\n    resultObj.results.forEach((wordObj) => {\n      if (wordObj.attempt) {\n        rightWords.push({ ...wordObj });\n      } else {\n        wrongWords.push({ ...wordObj });\n      }\n    });\n\n    return (\n      <React.Fragment key={resultObj.date}>\n        {\n          showDate\n            ? <div className=\"results-container__date\">{resultObj.date}</div>\n            : null\n        }\n        <div className=\"results-container\">\n          <div className=\"right-container\">\n            <p className=\"right-container__count\">Правильно <span>{rightWords.length}</span></p>\n            <div className=\"right-words-container\">\n              {\n                rightWords.map((wordObj) => (\n                  mapWordsObjectsToItems(wordObj, 'right')\n                ))\n              }\n            </div>\n          </div>\n          <div className=\"wrong-container\">\n            <p className=\"wrong-container__count\">Неправильно <span>{wrongWords.length}</span></p>\n            <div className=\"wrong-words-container\">\n              {\n                wrongWords.map((wordObj) => (\n                  mapWordsObjectsToItems(wordObj, 'wrong')\n                ))\n              }\n            </div>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  })\n);\n\nexport default mapLatestResultsToItems;\n","import ResultsPage from './ResultsPage.jsx';\n\nexport default ResultsPage;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect } from 'react-router-dom';\n\nimport getDate from '../../../helpers/get_date';\nimport mapResultsToItems from '../../../helpers/map_latest_results_to_items';\n\nimport GameTitle from '../../GameTitle';\n\nconst ResultsPage = ({\n  currentWords,\n  history,\n  currentLevel,\n  levelChanged,\n}) => {\n  if (currentWords === null) {\n    return <Redirect to=\"/unmess/home\" />;\n  }\n\n  return (\n    <div className=\"results-page\">\n      <GameTitle />\n      {\n        mapResultsToItems([\n          {\n            results: currentWords,\n            date: getDate(),\n          },\n        ], false)\n      }\n      <div\n        onClick={() => {\n          history.push('/unmess/home');\n          levelChanged(currentLevel);\n        }}\n        className=\"results-page__play-again\">Играть снова</div>\n      <div\n        onClick={() => history.push('/unmess/latest-results')}\n        className=\"results-page__latest-results\">Последние результаты</div>\n    </div>\n  );\n};\n\nResultsPage.propTypes = {\n  currentWords: PropTypes.arrayOf(PropTypes.object),\n  history: PropTypes.object,\n  currentLevel: PropTypes.number,\n  levelChanged: PropTypes.func,\n};\n\nexport default ResultsPage;\n","export default () => (\n  (new Date()).toLocaleString('ru', {\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric',\n    hour: '2-digit',\n    minute: '2-digit',\n    second: '2-digit',\n    hour12: false,\n  })\n);\n","import LatestResults from './LatestResults.jsx';\n\nexport default LatestResults;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect } from 'react-router-dom';\n\nimport GameTitle from '../../GameTitle';\n\nimport mapLatestResultsToItems from '../../../helpers/map_latest_results_to_items';\nimport { localStorageItems } from '../../../helpers/contants';\n\nconst LatestResults = (props) => {\n  const {\n    history,\n    levelChanged,\n    currentLevel,\n    currentWords,\n  } = props;\n\n  if (currentWords === null) {\n    return <Redirect to=\"/unmess/home\" />;\n  }\n\n  const latestResults = JSON.parse(localStorage.getItem(localStorageItems.latestResults));\n\n  return (\n    <div className=\"results-page\">\n      <GameTitle />\n      {\n        mapLatestResultsToItems(latestResults, true)\n      }\n      <div\n        onClick={() => {\n          history.push('/unmess/home');\n          levelChanged(currentLevel);\n        }}\n        className=\"results-page__play-again\">Играть снова</div>\n      <div\n        onClick={() => history.push('/unmess/results')}\n        className=\"results-page__current-results\">Текущие результаты</div>\n    </div>\n  );\n};\n\nLatestResults.propTypes = {\n  history: PropTypes.object,\n  levelChanged: PropTypes.func,\n  currentLevel: PropTypes.number,\n  currentWords: PropTypes.arrayOf(PropTypes.object),\n};\n\nexport default LatestResults;\n","import React from 'react';\n\nconst {\n  Provider: WordsServiceProvider,\n  Consumer: WordsServiceConsumer,\n} = React.createContext();\n\nexport {\n  WordsServiceProvider,\n  WordsServiceConsumer,\n};\n","import React from 'react';\nimport { WordsServiceConsumer } from '../contexts/words-service-context';\n\nconst withWordsService = () => (Wrapped) => (props) => (\n  <WordsServiceConsumer>\n    {\n      (wordsService) => <Wrapped {...props} wordsService={wordsService}/>\n    }\n  </WordsServiceConsumer>\n);\n\nexport default withWordsService;\n","import React from 'react';\n\nconst {\n  Provider: RecognitionServiceProvider,\n  Consumer: RecognitionServiceConsumer,\n} = React.createContext();\n\nexport {\n  RecognitionServiceProvider,\n  RecognitionServiceConsumer,\n};\n","import React from 'react';\n\nconst {\n  Provider: LocalStorageServiceProvider,\n  Consumer: LocalStorageServiceConsumer,\n} = React.createContext();\n\nexport {\n  LocalStorageServiceProvider,\n  LocalStorageServiceConsumer,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Switch, Route } from 'react-router-dom';\n\nimport './App.scss';\n\nimport StartPage from './components/pages/Start';\nimport GamePage from './components/pages/Game';\nimport ResultsPage from './components/pages/Results';\nimport LatestResultsPage from './components/pages/LatestResults';\n\nimport { withWordsService } from '../hoc';\n\nimport {\n  pagesCount,\n  levelsCount,\n  wordsPerPage,\n  localStorageItems,\n} from './helpers/contants';\n\nimport {\n  soundSuccess,\n  soundError,\n} from '../../../helpers/constants';\nimport { playAudio } from '../../../helpers/functions';\n\nconst getRandomWords = (words) => (\n  words\n    .sort(() => Math.random() - 0.5)\n    .slice(0, wordsPerPage)\n    .map((obj) => ({ ...obj, attempt: null, hideDefinition: true }))\n);\n\nconst getShuffledWords = (words) => (\n  words\n    .slice()\n    .sort(() => Math.random() - 0.5)\n    .map((wordObj) => ({ ...wordObj }))\n);\n\nconst replaceElInArrayOfObject = (array, object, newProps) => {\n  const indexOfObject = array.findIndex((wordObj) => (\n    wordObj.id === object.id\n  ));\n\n  return [\n    ...array.slice(0, indexOfObject),\n    { ...object, ...newProps },\n    ...array.slice(indexOfObject + 1),\n  ].map((wordObj) => ({ ...wordObj }));\n};\n\nclass App extends React.Component {\n  state = {\n    currentLevel: 0,\n    currentPage: 0,\n    loading: true,\n    currentWords: null,\n    shuffledCurrentWords: null,\n  }\n\n  allWords = null;\n\n  componentDidMount() {\n    if (localStorage.getItem(localStorageItems.latestResults) === null) {\n      localStorage.setItem(localStorageItems.latestResults, JSON.stringify([]));\n    }\n\n    const { wordsService } = this.props;\n    wordsService.getAllWords(pagesCount, levelsCount)\n      .then((result) => {\n        this.allWords = result;\n        const { currentLevel, currentPage } = this.state;\n        const currentWords = getRandomWords(this.allWords[currentLevel][currentPage]);\n        const shuffledCurrentWords = getShuffledWords(currentWords);\n        this.setState({\n          loading: false,\n          currentWords,\n          shuffledCurrentWords,\n        });\n      });\n  }\n\n  levelChanged = (level) => {\n    const currentWords = getRandomWords(this.allWords[level][this.state.currentPage]);\n    const shuffledCurrentWords = getShuffledWords(currentWords);\n    this.setState({\n      currentLevel: level,\n      currentWords,\n      shuffledCurrentWords,\n    });\n  }\n\n  pageChanged = (page) => {\n    const currentWords = getRandomWords(this.allWords[this.state.currentLevel][page]);\n    const shuffledCurrentWords = getShuffledWords(currentWords);\n    this.setState({\n      currentPage: page,\n      currentWords,\n      shuffledCurrentWords,\n    });\n  }\n\n  showDefinition = (definitionObj) => {\n    this.setState((state) => {\n      const currentWords = replaceElInArrayOfObject(\n        state.currentWords, definitionObj, { hideDefinition: false },\n      );\n\n      const shuffledCurrentWords = replaceElInArrayOfObject(\n        state.shuffledCurrentWords, definitionObj, { hideDefinition: false },\n      );\n\n      return {\n        currentWords,\n        shuffledCurrentWords,\n      };\n    });\n  }\n\n  wordDropped = (droppedWordObj, dropTargetWordObj) => {\n    this.setState((state) => {\n      const isRightAttempt = droppedWordObj.id === dropTargetWordObj.id;\n      const audio = isRightAttempt ? soundSuccess : soundError;\n      playAudio(audio);\n\n      const currentWords = replaceElInArrayOfObject(\n        state.currentWords, droppedWordObj, {\n          attempt: isRightAttempt, hideDefinition: !isRightAttempt,\n        },\n      );\n\n      const shuffledCurrentWords = replaceElInArrayOfObject(\n        state.shuffledCurrentWords, dropTargetWordObj, {\n          attempt: isRightAttempt, hideDefinition: !isRightAttempt,\n        },\n      );\n\n      return {\n        currentWords,\n        shuffledCurrentWords,\n      };\n    });\n  }\n\n  render() {\n    const {\n      loading,\n      currentWords,\n      currentLevel,\n      currentPage,\n      shuffledCurrentWords,\n    } = this.state;\n\n    return (\n      <div className=\"unmess-game-container\">\n        <Switch>\n          <Route path=\"/unmess/home\" render={() => (\n            <StartPage\n              currentPage={currentPage}\n              currentLevel={currentLevel}\n              loading={loading}\n              levelChanged={this.levelChanged}\n              pageChanged={this.pageChanged}\n            />\n          )} />\n          <Route path=\"/unmess/game\" render={({ history }) => (\n            <GamePage\n              history={history}\n              shuffledCurrentWords={shuffledCurrentWords}\n              currentWords={currentWords}\n              wordDropped={this.wordDropped}\n              showDefinition={this.showDefinition}\n            />\n          )} />\n          <Route path=\"/unmess/results\" render={({ history }) => (\n            <ResultsPage\n              history={history}\n              currentWords={currentWords}\n              currentLevel={currentLevel}\n              levelChanged={this.levelChanged}\n            />\n          )} />\n          <Route path=\"/unmess/latest-results\" render={({ history }) => (\n            <LatestResultsPage\n              history={history}\n              currentLevel={currentLevel}\n              levelChanged={this.levelChanged}\n              currentWords={currentWords} />\n          )} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nApp.propTypes = {\n  wordsService: PropTypes.object,\n};\n\nexport default withWordsService()(App);\n","import React from 'react';\n\nimport App from './App';\n\nimport { WordsServiceProvider } from '../contexts/words-service-context';\nimport WordsService from '../services/words-service';\n\nconst wordsService = new WordsService();\n\nconst Unmess = () => (\n  <WordsServiceProvider value={wordsService}>\n    <App />\n  </WordsServiceProvider>\n);\n\nexport default Unmess;\n","export default class WordsService {\n  getAllWords = async (pageCount, groupsCount) => {\n    const allWords = {\n      0: {},\n      1: {},\n      2: {},\n      3: {},\n      4: {},\n      5: {},\n    };\n    async function wordsRequest(page, group) {\n      const url = `https://afternoon-falls-25894.herokuapp.com/words?page=${page}&group=${group}`;\n      const result = await fetch(url);\n      const json = await result.json();\n      allWords[`${group}`][`${page}`] = json;\n    }\n    const allRequests = [];\n    for (let group = 0; group < groupsCount; group += 1) {\n      for (let page = 0; page < pageCount; page += 1) {\n        allRequests.push(wordsRequest(page, group));\n      }\n    }\n    await Promise.all(allRequests);\n    return allWords;\n  }\n}\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport AboutUsPage from '../pages/AboutUs';\nimport LearnWords from '../pages/LearnWords';\nimport SettingsPage from '../pages/Settings';\nimport StatisticPage from '../pages/Statistics';\nimport PromoPage from '../pages/Promo';\nimport PlayGamesPage from '../pages/PlayGames';\nimport VocabularyPage from '../pages/Vocabulary';\nimport SignInPage from '../pages/SignIn';\nimport SignUpPage from '../pages/SignUp';\nimport AudioCallGame from '../AudioCallGame';\nimport SprintGame from '../Sprint';\nimport SavannahGame from '../Savannah';\nimport UnmessGame from '../games/Unmess';\n\nimport { gamesData, pagesData } from '../../helpers/constants';\nimport { getPath } from '../../helpers/functions';\n\nconst {\n  learnWords, settings, statistics, vocabulary,\n  aboutUs, promo, play, signIn, register,\n} = pagesData;\n\nconst {\n  audiocall, sprint, savannah,\n  unmess, // englishPuzzle, speakit,\n} = gamesData;\n\nconst Main = () => (\n  <main className=\"main\">\n    <Switch>\n      <Route path={getPath(learnWords.path)} component={LearnWords} />\n      <Route path={getPath(settings.path)} component={SettingsPage} />\n      <Route path={getPath(statistics.path)} component={StatisticPage} />\n      <Route path={getPath(aboutUs.path)} component={AboutUsPage} />\n      <Route exact path={getPath() || getPath(promo.path)} component={PromoPage} />\n      <Route path={getPath(play.path)} component={PlayGamesPage} />\n      <Route path={getPath(vocabulary.path)} component={VocabularyPage} />\n      <Route path={getPath(signIn.path)} component={SignInPage} />\n      <Route path={getPath(register.path)} component={SignUpPage} />\n      <Route path={getPath(audiocall.path)} component={AudioCallGame} />\n      <Route path={getPath(sprint.path)} component={SprintGame} />\n      <Route path={getPath(savannah.path)} component={SavannahGame} />\n      <Route path={getPath(unmess.path)} component={UnmessGame} />\n      {/*<Route path={getPath(speakit.path)} component={SpeakitGame} />*/}\n      {/*<Route path={getPath(englishPuzzle.path)} component={EnglishPuzzleGame} />*/}\n    </Switch>\n  </main>\n);\n\nexport default Main;\n","import Main from './Main.jsx';\n\nexport default Main;\n","import { AUTH_LOGOUT, AUTH_SUCCESS } from '../actions/actionsTypes';\n\nconst initialState = {\n  name: null,\n  userId: null,\n  token: null,\n};\n\nexport default function authReducer(state = initialState, action) {\n  switch (action.type) {\n    case AUTH_SUCCESS:\n      return {\n        ...state,\n        name: action.name,\n        userId: action.userId,\n        token: action.token,\n      };\n    case AUTH_LOGOUT:\n      return { ...state, ...initialState };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport authReducer from './auth';\n\nexport default combineReducers({\n  auth: authReducer,\n});\n","import { createStore, compose, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers/rootReducer';\n\nconst composeEnhancers = typeof window === 'object'\n  && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n  ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n  }) : compose;\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(\n    applyMiddleware(thunk),\n  ),\n);\n\nexport default store;\n","import React from 'react';\nimport './App.scss';\nimport { HashRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\n\nimport Header from './components/Header';\nimport Main from './components/Main';\n\nimport store from './redux/store';\n\nconst App = () => (\n  <Provider store={store}>\n    <Router>\n      <div className=\"App\">\n        <Header />\n        <Main />\n      </div>\n    </Router>\n  </Provider>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    || window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service '\n              + 'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all '\n                  + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404\n        || (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root'),\n);\n\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/avatar.e0cdb196.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"iconButton\":\"QuestionView_iconButton__qyJf0\",\"volumeUpRounded\":\"QuestionView_volumeUpRounded__2WQS_\",\"picture\":\"QuestionView_picture__2ZdD-\",\"hidden\":\"QuestionView_hidden__2XxPX\",\"container\":\"QuestionView_container__tC3A4\",\"description\":\"QuestionView_description__2mhkr\",\"word\":\"QuestionView_word__nCUPl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FinishGamePageView_container__5ttAY\",\"title\":\"FinishGamePageView_title__1ExX5\",\"right\":\"FinishGamePageView_right__pyEpY\",\"wrong\":\"FinishGamePageView_wrong__2py0K\",\"button\":\"FinishGamePageView_button__2y0RY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"StartGamePageView_container__9A5N-\",\"title\":\"StartGamePageView_title__2wnYq\",\"text\":\"StartGamePageView_text__2gKuM\",\"form\":\"StartGamePageView_form__2Q2bA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"Header_Header__2esZG\",\"CloseButton\":\"Header_CloseButton__3eAzX\",\"Icon\":\"Header_Icon__2Aml1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"StartPage\":\"StartPage_StartPage__yeIKM\",\"titleName\":\"StartPage_titleName__3c17c\",\"form\":\"StartPage_form__1oxCB\",\"startExplanation\":\"StartPage_startExplanation__z2dAB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ResultList\":\"ResultList_ResultList__o0OH1\",\"mistakeTitle\":\"ResultList_mistakeTitle__mpfVD\",\"Total\":\"ResultList_Total__2fDJ8\",\"error\":\"ResultList_error__3hDEN\",\"success\":\"ResultList_success__zNF7Z\",\"Title\":\"ResultList_Title__2Lb_S\",\"Content\":\"ResultList_Content__mcD5k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"AnswerView_item__lWTze\",\"disable\":\"AnswerView_disable__3oT3S\",\"right\":\"AnswerView_right__23vE2\",\"wrong\":\"AnswerView_wrong__LKzBm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"VolumeDownIcon\":\"ResultItem_VolumeDownIcon__bKwbo\",\"Translate\":\"ResultItem_Translate__2zNOW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AnswerItem\":\"AnswerItem_AnswerItem__1RCh_\",\"success\":\"AnswerItem_success__1_eur\",\"error\":\"AnswerItem_error__ihJao\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FinishGameItemView_container__21EMF\",\"text\":\"FinishGameItemView_text__2tGxB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FinishPage\":\"FinishPage_FinishPage__3R2ZC\",\"finishWrapper\":\"FinishPage_finishWrapper__3L1YI\"};"],"sourceRoot":""}