{"version":3,"sources":["components/Savannah/Savannah.module.scss","assets/audio/error.mp3","assets/audio/success.mp3","assets/audio/finish.mp3","assets/images/team-photo.png","components/AudioCallGame/components/GamePage/GamePageView.module.scss","components/AudioCallGame/components/AnswerPanel/AnswerPanelView.module.scss","components/AudioCallGame/components/Button/ButtonView.module.scss","components/Savannah/components/ActiveQuiz/AnswerList/AnswerList.module.scss","helpers/constants.js","helpers/functions.js","redux/actions/auth.js","redux/actions/actionsTypes.js","basicComponents/MenuList/index.js","basicComponents/MenuList/MenuList.jsx","components/Header/HeaderView.jsx","components/Header/index.js","components/TeamMember/index.js","components/TeamMember/TeamMemberView.jsx","basicComponents/Button/index.js","basicComponents/Button/ButtonView.jsx","components/pages/AboutUs/AboutUsPage.jsx","components/pages/AboutUs/index.js","components/pages/LearnWords/helpers/constants.js","components/pages/LearnWords/Views/Header/Header.jsx","components/pages/LearnWords/Views/Header/index.js","helpers/wordsService/dataModels.js","helpers/wordsService/storageModel.js","helpers/wordsService/spacingRepeating.js","helpers/wordsService/index.js","components/pages/LearnWords/Views/StatusBar/StatusBar.jsx","components/pages/LearnWords/Views/StatusBar/index.js","components/pages/LearnWords/helpers/settings.js","components/pages/LearnWords/helpers/style-options.js","components/pages/LearnWords/helpers/index.js","components/pages/LearnWords/Views/SideBar/SideBar.jsx","components/pages/LearnWords/Views/SideBar/index.js","components/pages/LearnWords/Views/CheckedSentence/index.js","components/pages/LearnWords/Views/CheckedSentence/CheckedSentense.jsx","components/pages/LearnWords/Views/Word/index.js","components/pages/LearnWords/Views/Word/Word.jsx","components/pages/LearnWords/Views/WordExtraInfo/index.js","components/pages/LearnWords/Views/WordExtraInfo/WordExtraInfo.jsx","components/pages/LearnWords/Views/SpacingRepeating/SpacingRepeating.jsx","components/pages/LearnWords/Views/SpacingRepeating/index.js","components/pages/LearnWords/Views/WordCard/WordCard.jsx","components/pages/LearnWords/Views/WordCard/index.js","components/pages/LearnWords/LearnWords.jsx","components/pages/LearnWords/index.js","basicComponents/Slider/SliderView.jsx","basicComponents/Slider/index.js","basicComponents/LinearProgress/index.js","basicComponents/LinearProgress/LinearProgressView.jsx","components/LearnWordCardPreview/index.js","components/LearnWordCardPreview/LearnWordCardView.jsx","basicComponents/Checkbox/CheckboxView.jsx","basicComponents/Checkbox/index.js","redux/actions/index.js","components/pages/Settings/index.js","components/pages/Settings/SettingsPage.jsx","components/pages/Statistics/index.js","components/pages/Statistics/StatisticPage.jsx","components/pages/Promo/index.js","components/pages/Promo/PromoPage.jsx","components/GameCard/index.js","components/GameCard/GameCardView.jsx","components/pages/PlayGames/PlayGamesPage.jsx","components/pages/PlayGames/index.js","components/pages/Vocabulary/WordCard/WordCard.jsx","components/pages/Vocabulary/WordCard/index.js","components/pages/Vocabulary/VocabularyPage.jsx","helpers/wordsData.js","components/pages/Vocabulary/index.js","basicComponents/Input/index.js","basicComponents/Input/InputView.jsx","components/pages/SignIn/SignInPage.jsx","components/pages/SignIn/index.js","helpers/userService/axiosUser.js","helpers/userService/index.js","components/pages/SignUp/SignUpPage.jsx","components/pages/SignUp/index.js","components/AudioCallGame/components/Question/QuestionView.jsx","components/AudioCallGame/components/Question/index.js","components/AudioCallGame/components/Answer/index.js","components/AudioCallGame/components/Answer/AnswerView.jsx","components/AudioCallGame/components/AnswerPanel/index.js","components/AudioCallGame/components/AnswerPanel/AnswerPanelView.jsx","components/AudioCallGame/components/Button/index.js","components/AudioCallGame/components/Button/ButtonView.jsx","components/AudioCallGame/components/FinishGameItem/index.js","components/AudioCallGame/components/FinishGameItem/FinishGameItemView.jsx","components/AudioCallGame/components/FinishGamePage/index.js","components/AudioCallGame/components/FinishGamePage/FinishGamePageView.jsx","components/AudioCallGame/components/GamePage/GamePageView.jsx","components/AudioCallGame/mockData.js","components/AudioCallGame/components/GamePage/index.js","components/AudioCallGame/components/StartGamePage/index.js","components/AudioCallGame/components/StartGamePage/StartGamePageView.jsx","components/AudioCallGame/components/Main/MainView.jsx","components/AudioCallGame/components/Main/index.js","components/AudioCallGame/index.js","components/AudioCallGame/AudioCall.jsx","components/Sprint/Components/UI/switch.js","components/Sprint/Components/UI/StartGameForm.js","components/Sprint/Components/StartGame/StartGame.jsx","components/Sprint/Components/StartGame/index.js","components/Sprint/Components/PlayGame/index.js","components/Sprint/Components/PlayGame/PalyGame.jsx","components/Sprint/UI/Table.jsx","components/Sprint/Components/FinishGame/FinishGame.jsx","components/Sprint/Components/FinishGame/index.js","helpers/wordsService/wordsApi.js","components/Sprint/Sprint.jsx","components/Sprint/index.js","components/Savannah/components/Header/Header.jsx","components/Savannah/components/Header/index.js","components/Savannah/components/StartPage/StartPage.jsx","components/Savannah/components/StartPage/index.js","components/Savannah/components/FinishPage/ResultList/ResultItem/ResultItem.jsx","components/Savannah/components/FinishPage/ResultList/ResultList.jsx","components/Savannah/components/FinishPage/FInishPage.jsx","components/Savannah/components/FinishPage/index.js","components/Savannah/components/ActiveQuiz/AnswerList/AnswerItem/AnswerItem.jsx","components/Savannah/components/ActiveQuiz/AnswerList/AnswerItem/index.js","components/Savannah/components/ActiveQuiz/AnswerList/index.js","components/Savannah/components/ActiveQuiz/AnswerList/AnswerList.jsx","components/Savannah/components/ActiveQuiz/ActiveQuiz.jsx","components/Savannah/components/ActiveQuiz/index.js","components/Savannah/Savannah.jsx","components/Savannah/index.js","components/Main/Main.jsx","components/Main/index.js","redux/reducers/auth.js","redux/reducers/rootReducer.js","redux/store.js","App.js","serviceWorker.js","index.js","assets/images/avatar.jpg","components/AudioCallGame/components/Question/QuestionView.module.scss","components/AudioCallGame/components/FinishGamePage/FinishGamePageView.module.scss","components/AudioCallGame/components/StartGamePage/StartGamePageView.module.scss","components/Savannah/components/Header/Header.module.scss","components/Savannah/components/FinishPage/ResultList/ResultList.module.scss","components/AudioCallGame/components/Answer/AnswerView.module.scss","components/Savannah/components/StartPage/StartPage.module.scss","components/Savannah/components/FinishPage/ResultList/ResultItem/ResultItem.module.scss","components/Savannah/components/FinishPage/FinishPage.module.scss","components/Savannah/components/ActiveQuiz/AnswerList/AnswerItem/AnswerItem.module.scss","components/AudioCallGame/components/FinishGameItem/FinishGameItemView.module.scss","components/Savannah/components/ActiveQuiz/ActiveQuiz.module.scss"],"names":["module","exports","apiLinks","localStorageItems","applicationThings","LEARN_WORDS","SAVANNAH","SPRINT","AUDIOCALL","SPEAK_IT","PUZZLE","UNMESS","levelsOfDifficulty","pagesData","aboutUs","title","path","guest","isVisible","index","user","learnWords","play","promo","settings","signIn","register","statistics","vocabulary","gamesData","speakit","description","englishPuzzle","savannah","audiocall","sprint","unmess","teamMembers","name","surname","role","image","noAvatar","linkedinUsername","selectorOptions","text","nickname","email","password","repeatPassword","alreadyRegistered","firstTimeOrForgotPassword","incorrectLoginData","userUndefined","levelsTitles","answersCorrect","answersMistaken","howManyAnswers","howManyWords","chooseLevel","notEnoughWords","button","next","dontKnow","startGame","newGame","formLabel","questionStatus","success","error","count","maxLevels","defaultLevel","minAnswers","maxAnswers","minQuestions","maxQuestions","counterMultiplier","pointsMultiplier","correctAnswerOnce","getPath","modulePath","getRandomNumber","min","max","Math","floor","random","ceil","getAverageNumber","round","shuffleArray","array","newArray","i","length","j","getTokenLifetimeInMs","countQuestionsSets","questionsNumber","getFilePath","mediaPath","playAudio","Audio","logout","localStorage","removeItem","type","autoLogout","time","dispatch","setTimeout","authSuccess","userId","token","MenuList","menuTitle","menuItems","React","useState","anchorEl","setAnchorEl","handleClose","menuItemClasses","root","className","Button","aria-controls","aria-haspopup","onMouseEnter","event","currentTarget","onMouseLeave","undefined","relatedTarget","closest","Menu","classes","list","id","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","open","Boolean","onClose","MenuListProps","disableScrollLock","autoFocus","BackdropComponent","PopoverClasses","paper","map","item","key","MenuItem","onClick","addLinksToHeader","link","activeClassName","to","Object","values","gameObj","exact","connect","links","isUserLogged","IconButton","color","style","fontSize","Header","getPagesLinks","reduce","props","updatedLinks","this","getItem","Component","state","auth","TeamMember","src","alt","target","href","value","variant","size","mapTeamMembersToItems","member","AboutUsPage","teamPhoto","buttonsNames","difficultLabels","word","repeats","AUTO_VOICE","categoriesSelect","onToggleAutoPlay","onToggleCategory","onChange","el","defaultProps","userWordTemplate","difficulty","optional","rate","removed","repeated","userWordThings","statsGameTemplate","games","wrong","right","statsLearnTemplate","learned","inProgress","complicated","statsPuzzleTemplate","statsThingNames","generateStatsTemplate","stats","learnedWords","properties","forEach","thing","checkStatsThingTemplate","sumObjectProps","targetObject","newData","result","keys","changeStats","statsOption","optionData","currentStats","newStats","updated","current","today","moment","format","temlate","changeGameStats","changeSessionStatsObject","statsObject","keyName","keyValue","generateUserWordsTemplate","createUserWord","wordObject","userWord","wordId","changeUserWord","userOption","oldRepeated","days","newUserWord","add","generateSpacingRepeatingTemplate","localThings","sessionThings","SETTINGS","WORDS","REPEATING","gameSessionThings","speakIt","puzzle","checkForLocalThing","thingName","templateGenerator","JSON","parse","checkForessionThing","template","getSessionThing","saveSessionThing","thingValue","setItem","stringify","calculateLearnRate","level","coefficient","correction","correctedRate","newRate","defineNewRate","prepareWordObject","userWords","find","checkUserWordById","checkForCurrentUserWord","storage","checkForUserWords","updateRepeatingWords","twice","repeatingArray","newWords","saveSpacingRepeating","updateUserWord","newWord","areWordsStored","words","isWordStored","findIndex","updatedWords","saveLocalUserWord","convertDifficultLevelToRepeats","getOldData","oldRate","updateUserWordRate","updateStats","getDiffAndCoplicatedInProgress","arrayOfWordsObjects","isRemoved","isComplicated","getWordsDiffAndComplicated","saveDataToSessionStats","saveRightToGamesStats","saveWrongToGamesStats","getGameSessionResults","getSessionData","saveGameResults","results","COMPLICATED","REMOVE","handleWordRemove","onChangeProgress","updateUserWordRemoved","handleWordComplicated","updateUserWordDifficulty","StatusBar","progress","currentWord","wordCount","totalWords","isShownComplicatedButton","classNames","active","initialProgressObject","isGuessed","isShownWord","isWordSemiOpacity","isUsedTip","difference","isDifficultChosen","hideWordStyles","backgroundColor","pointerEvents","userSelect","showWordStyles","absolutElement","position","width","height","left","top","inputWrapper","zIndex","transition","inputField","resourceUrl","extractEmphasizedWord","str","surroundingTag","sentence","beginTag","endTag","begin","substring","indexOf","emphasis","end","showDifferenceInWords","inputWord","arr","split","push","letter","errorColor","checkSessionProgress","clearSessionProgress","playAudios","audios","audio","Array","isArray","onended","SHOW_ANSWER","PREV","NEXT","SideBar","isShownAnswerButton","isShownImageAssociation","onNextWord","onPrevWord","disabled","CheckedSentense","styles","Word","handleInput","setState","handleSubmit","preventDefault","textExample","handleError","handleSuccess","onPlayAudio","textExampleTranslate","isShownTranslation","wrongAnswerStyles","display","opacity","prepareWrongAnswerStyles","rightAnswerStyles","prepareRightAnswerStyles","output","onSubmit","autoComplete","marginLeft","WordExtraInfo","wordTranslate","transcription","textMeaning","textMeaningTranslate","isShownTranscription","isShownExampleSentence","isShownMeaning","HARD","NORMAL","EASY","HARD_LABEL","NORMAL_LABEL","EASY_LABEL","handleChoseDifficulty","SpacingRepeating","WordCard","currentInput","isLogged","LearnWords","isAutoPlay","isPlaying","isFetching","category","toggleAutoPlay","toggleCategory","checkForLoggedUser","rslangUserId","checkForEndOfGame","audioName","data","audioMeaning","audioExample","handleNextWord","handleEndOfCards","handlePrevWord","handleChangeProgress","console","log","learnSessionProgress","prevProps","prevState","setSessionProgress","textExampleSentence","textMeaningSentence","response","useStyles","makeStyles","padding","colorSecondary","input","Slider","setValue","Grid","container","spacing","alignItems","xs","newValue","aria-labelledby","Input","margin","Number","onBlur","inputProps","step","LinearProgress","done","all","filledWidth","LearnWordCardPreview","previewSettings","learnCardPreviewSettings","translationVisibility","translation","complicatedButtonVisibility","complicatedButton","imageAssociatationVisibility","imageAssociatation","meaningVisibility","meaning","transcriptionVisibility","showAnswerButtonVisibility","showAnswerButton","exampleSentenceVisibility","exampleSentence","translationItemClasses","hidden","complicatedButtonItemClasses","imageAssociatationItemClasses","meaningItemClasses","transcriptionItemClasses","showAnswerButtonItemClasses","exampleSentenceItemClasses","CheckboxView","checked","checkbox","defaultChecked","settingChanged","previewSettingName","payload","bind","SettingsPage","StatisticsPage","PromoPage","controls","GameCard","renderGames","PlayGamesPage","WordCardView","wordData","playSound","restoreWord","createMarkup","markup","__html","dangerouslySetInnerHTML","VocabularyView","changeVocabularyType","selectedOption","options","cards","e","persist","onSelectorChange","wordsData","group","page","wordsPerExampleSentence","VocabularyPage","placeholder","initialState","repeatPass","emailValid","SignInPage","isEmailValid","mail","test","String","onChangeEmail","onChangePass","onSubmitForm","a","authData","url","axios","post","refreshTokenDate","Date","getTime","expData","alert","getToken","axiosuser","create","baseURL","headers","Authorization","Accept","getAuthHeader","UserService","registerUser","fetch","method","body","rawResponse","json","loginUser","getUserById","get","updateUserById","withCredentials","getUserWordById","content","updateUserWordById","deleteUserWordById","delete","getUserAllWords","getAllUserWordsArray","allWords","wordCard","getUserWordsNoRemoved","getAllWords","createUserStatistics","option","getUserStatistics","x","createUserSettings","getUserSettings","getUserWordsFilter","filter","URL","pathname","searchParams","append","Headers","userService","nickValid","passValid","passRepeatValid","formValid","SignUpPage","isPassValid","pass","isNickValid","nick","isFormValid","onChangeNick","onChangeRepeatPass","required","QuestionView","isFalseAnswer","isRightAnswer","srcImage","audioElement","iconClasses","volumeUpRounded","wordClasses","pictureClasses","picture","dataid","aria-label","iconButton","VolumeUpRounded","Question","question","oncanplay","Answer","answer","handleClickAnswer","currentAnswerId","answerItem","disable","AnswerPanel","answerArray","handleClickButton","buttonValue","FinishGameItem","FinishGamePage","errorAnswerArray","rightAnswerArray","handleClickNewGame","generateItemsWords","soundFinish","GamePageView","questionsList","GamePage","componentDidMount","dataWords","maxLevel","questionList","amountLevels","slice","generateQuestionsArray","getAnswersArray","numberLevel","numberAnswers","currentQuestion","arrayWrongAnswer","concat","changeLevel","clearTimeout","nextLevel","setAnswer","soundError","soundSuccess","StartGamePage","handleChooseLevel","setNumberLevel","setNumberAnswers","handleSubmitForm","form","FormControl","InputLabel","htmlFor","Select","native","label","TextField","defaultValue","pattern","MainView","isStart","Main","levelAPI","amountQuestions","AudioCall","Switcher","handleChangeUserWords","FormGroup","row","FormControlLabel","control","Switch","StartGameForm","classNameForm","handleCurrentGroup","menuItemList","labelId","startIcon","background","StartGameUserForm","Fragment","StartGame","updateState","PlayGame","fill","isAnswerQuiz","updateTimer","document","addEventListener","onCLick","removeEventListener","counterTotal","unshift","pop","timer","activeAnswer","volume","handleVolume","score","StyledTableCell","withStyles","theme","lineHeight","head","palette","common","black","white","TableCell","StyledTableRow","action","hover","TableRow","table","minWidth","CustomizedTables","complete","mistake","audioPlay","translate","rows","calories","fat","carbs","total","protein","TableContainer","component","Paper","Table","TableHead","align","TableBody","scope","Transition","forwardRef","ref","Slide","direction","FinishGame","isFinished","onReloadGame","Dialog","maxWidth","TransitionComponent","keepMounted","aria-describedby","DialogContent","DialogContentText","DialogActions","getWords","getRandomWordByGroup","randomPage","randomKey","getWordsByAmount","amountOfAnswers","Promise","checkedUserWords","allUserWords","activeQuestion","activeCard","isTrue","answerState","currentGroup","counter","multiplier","win","changeGroup","translateWords","isStarted","Sprint","basic","allUserWordsRandom","allCards","card","resultCurrentQuiz","updateCounter","mult","updateScore","timerId","onClickHandler","isChangeUserWords","heartCount","mistakeTotal","arrComplete","arrMistake","Icon","CloseButton","StartPage","onTotalQuizUpdate","handleTotalAnswer","totalAnswers","totalQuestions","errorAnswer","errorQuiz","age","setAge","formControl","marginBottom","ResultItem","Item","VolumeDownIcon","Translate","ResultList","resultTitle","status","cls","Total","Wrapper","Title","join","Content","FinishPage","finishWrapper","completeWrapper","AnswerItem","keyPressed","guessedWords","trueAnswer","AnswerList","trueNumberAnswer","Zoom","styled","div","keyframes","zoomInLeft","ActiveQuiz","onDefault","onTimeOut","idWords","Savannah","currentAnswer","handleHeart","setInterval","gameStatus","idWordPressed","onChangeGroupwords","onCorrectAnswer","onAnswerClickHandler","pathAudio","Container","StatisticPage","AudioCallGame","SprintGame","SavannahGame","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","thunk","App","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.f83a80a0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Savannah\":\"Savannah_Savannah__YP-xA\",\"Container\":\"Savannah_Container__3_Qfn\"};","module.exports = __webpack_public_path__ + \"static/media/error.48034e1e.mp3\";","module.exports = __webpack_public_path__ + \"static/media/success.3f4effb5.mp3\";","module.exports = __webpack_public_path__ + \"static/media/finish.889fedc6.mp3\";","module.exports = __webpack_public_path__ + \"static/media/team-photo.2a0a7268.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"GamePageView_container__2lWS6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"AnswerPanelView_container__2SuQY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ButtonView_button__2yGrZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"words\":\"AnswerList_words__2eimr\"};","import noAvatar from '../assets/images/avatar.jpg';\nimport soundError from '../assets/audio/error.mp3';\nimport soundSuccess from '../assets/audio/success.mp3';\nimport soundFinish from '../assets/audio/finish.mp3';\n\nconst apiLinks = {\n  file: 'https://raw.githubusercontent.com/hallovarvara/rslang-data/master/',\n  base: 'https://kagafon-learn-words.herokuapp.com/',\n  paintings: 'https://raw.githubusercontent.com/hallovarvara/rslang_data_paintings/master/',\n};\n\nconst localStorageItems = {\n  nickname: 'rslangName',\n  token: 'rslangToken',\n  userId: 'rslangUserId',\n  refreshTokenDate: 'refreshTokenDate',\n};\n\nexport const applicationThings = {\n  LEARN_WORDS: 'learnWords',\n  SAVANNAH: 'savannah',\n  SPRINT: 'sprint',\n  AUDIOCALL: 'audiocall',\n  SPEAK_IT: 'speakIt',\n  PUZZLE: 'puzzle',\n  UNMESS: 'unmess',\n};\n\nexport const userSettingsTemplate = {\n  IS_SHOWN_COMPLICATED_BUTTON: 'isShownComplicatedButton',\n  IS_SHOWN_ANSWER_BUTTON: 'isShownAnswerButton',\n  IS_SHOWN_IMAGE_ASSOCIATION: 'isShownImageAssociation',\n  IS_SHOWN_TRANSLATION: 'isShownTranslation',\n  IS_SHOWN_TRANSCRIPTION: 'isShownTranscription',\n  IS_SHOWN_EXAMPLE_SENTENCE: 'isShownExampleSentence',\n  IS_SHOWN_MEANING: 'isShownMeaning',\n};\n\nexport const levelsOfDifficulty = {\n  HARD: 'hard',\n  NORMAL: 'normal',\n  EASY: 'easy',\n};\n\nexport const dateFormatTemplate = 'DD.MM.YYYY';\n\nconst projectPath = 'rslang';\nconst linkedinLink = 'https://www.linkedin.com/in/';\n\nconst pagesData = {\n  aboutUs: {\n    title: 'Кто мы',\n    path: 'about-us',\n    guest: { isVisible: true, index: 3 },\n    user: { isVisible: true, index: 2 },\n  },\n  learnWords: {\n    title: 'Учить слова',\n    path: '',\n    guest: { isVisible: true, index: 1 },\n    user: { isVisible: true, index: 0 },\n  },\n  play: {\n    title: 'Играть',\n    path: 'play',\n    guest: { isVisible: true, index: 2 },\n    user: { isVisible: true, index: 1 },\n  },\n  promo: {\n    title: 'О проекте',\n    path: 'promo',\n    guest: { isVisible: true, index: 0 },\n    user: { isVisible: true, index: 2 },\n  },\n  settings: {\n    title: 'Настройки',\n    path: 'settings',\n    guest: { isVisible: false },\n    user: { isVisible: true, index: 6 },\n  },\n  signIn: {\n    title: 'Войти',\n    path: 'sign-in',\n    guest: { isVisible: true, index: 6 },\n    user: { isVisible: false },\n  },\n  register: {\n    title: 'Зарегистрироваться',\n    path: 'register',\n    guest: { isVisible: false },\n    user: { isVisible: false },\n  },\n  statistics: {\n    title: 'Статистика',\n    path: 'statistics',\n    guest: { isVisible: true, index: 4 },\n    user: { isVisible: true, index: 4 },\n  },\n  vocabulary: {\n    title: 'Словарь',\n    path: 'vocabulary',\n    guest: { isVisible: true, index: 5 },\n    user: { isVisible: true, index: 5 },\n  },\n};\n\nconst gamesData = {\n  speakit: {\n    title: 'SpeakIt',\n    description: 'Вырабатывайте правильное произношение слов вместе с нашей космической игрой',\n    path: 'speakit',\n  },\n  englishPuzzle: {\n    title: 'English Puzzle',\n    description: 'Учитесь строить предложения и знакомьтесь с величайшими произведениями искусства',\n    path: 'english-puzzle',\n  },\n  savannah: {\n    title: 'Саванна',\n    description: 'Угадывайте, как переводятся слова, и вместе с этим пополняйте лексикон',\n    path: 'savannah',\n  },\n  audiocall: {\n    title: 'Аудиовызов',\n    description: 'Прокачивайте восприятие языка на слух, а также увеличивайте свой словарный запас',\n    path: 'audiocall',\n  },\n  sprint: {\n    title: 'Спринт',\n    description: 'Играйте на время, чтобы точно знать, как много слов вы можете перевести за минуту',\n    path: 'sprint',\n  },\n  unmess: {\n    title: 'Unmess',\n    description: 'Соединяйте слова и их значения, расширяя запас слов и улучшая понимание смысла фраз',\n    path: 'unmess',\n  },\n};\n\nconst teamMembers = [\n  {\n    name: 'Дмитрий',\n    surname: 'Лебецкий',\n    role: 'Работал как волк, делал все подряд',\n    image: noAvatar,\n    linkedinUsername: 'dmitry-lebetsky',\n  },\n  {\n    name: 'Варвара',\n    surname: 'Девятерикова',\n    role: 'Работала как волчица, делала все подряд',\n    image: noAvatar,\n    linkedinUsername: 'hallovarvara',\n  },\n  {\n    name: 'Артем',\n    surname: 'Римарчук',\n    role: 'Работал как волк, делал все подряд',\n    image: noAvatar,\n    linkedinUsername: 'artemrimarchyk',\n  },\n  {\n    name: 'Ксения',\n    surname: 'Яцкевич',\n    role: 'Работала как волчица, делала все подряд',\n    image: noAvatar,\n    linkedinUsername: 'ksenia-yatskevich',\n  },\n  {\n    name: 'Максим',\n    surname: 'Касприв',\n    role: 'Работал как волк, делал все подряд',\n    image: noAvatar,\n    linkedinUsername: 'maksym-kaspriv',\n  },\n  {\n    name: 'Алексей',\n    surname: 'Осипов',\n    role: 'Работал как волк, делал все подряд',\n    image: noAvatar,\n    linkedinUsername: '',\n  },\n];\n\nconst selectorOptions = [\n  ['new', 'new & repeating'],\n  ['complicated', 'complicated'],\n  ['removed', 'removed'],\n];\n\n/* Games */\n\nconst audio = {\n  error: 'error.mp3',\n  success: 'success.mp3',\n  win: 'finish.mp3',\n};\n\nconst text = {\n  ru: {\n    /* Sign In, Register */\n    nickname: 'Логин',\n    email: 'Емейл',\n    password: 'Пароль',\n    repeatPassword: 'Повторите пароль',\n    alreadyRegistered: 'Уже зарегистрированы?',\n    firstTimeOrForgotPassword: 'Впервые тут или забыли пароль?',\n    incorrectLoginData: 'Вы ввели неправильный логин или пароль. Попробуйте снова',\n    userUndefined: 'Емейл не зарегистрирован. Проверьте правильность его написания или зарегистрируйтесь',\n\n    /* Games */\n    levelsTitles: ['Все', 'Первый', 'Второй', 'Третий', 'Четвертый', 'Пятый', 'Шестой'],\n    answersCorrect: 'Угадано',\n    answersMistaken: 'Не угадано',\n    howManyAnswers: 'Сколько показывать вариантов ответа',\n    howManyWords: 'Сколько слов хотите угадать',\n    chooseLevel: 'Выберите уровень сложности',\n    notEnoughWords: '* Если в словаре недостаточно слов для игр, слова будут появляться из выбранного уровня',\n\n    /* Buttons */\n    button: {\n      next: 'Далее',\n      dontKnow: 'Не знаю',\n      startGame: 'Играть',\n      newGame: 'Начать новую игру',\n      learnWords: 'Изучать словау',\n    },\n  },\n};\n\nconst formLabel = {\n  level: 'Уровень',\n  chooseLevel: 'Выберите уровень',\n  questions: 'Сколько слов хотите отгадать? (5—12)',\n  answers: 'Сколько показывать вариантов ответов? (2—5)',\n};\n\nconst questionStatus = {\n  success: 'success',\n  error: 'error',\n};\n\nconst count = {\n  /* API settings */\n  groups: 6,\n  pages: 29,\n  words: 19,\n\n  /* Time */\n  minInHour: 60,\n  secInMin: 60,\n  msInSec: 1000,\n  tokenLifetimeInHours: 4,\n\n  /* Defaults */\n  elementsPerPage: 10,\n\n  /* Game Audiocall */\n  audiocall: {\n    maxLevels: 12,\n  },\n\n  /* Game Savannah */\n  savannah: {\n    defaultLevel: 0,\n    minAnswers: 2,\n    maxAnswers: 5,\n    minQuestions: 5,\n    maxQuestions: 50,\n  },\n\n  /* Game Sprint */\n  sprint: {\n    counterMultiplier: 2,\n    pointsMultiplier: 10,\n    correctAnswerOnce: 4,\n  },\n};\n\nexport {\n  projectPath,\n  pagesData,\n  selectorOptions,\n  apiLinks,\n  linkedinLink,\n  gamesData,\n  teamMembers,\n  audio,\n  formLabel,\n  count,\n  localStorageItems,\n  text,\n  soundError,\n  soundSuccess,\n  soundFinish,\n  questionStatus,\n};\n","import {\n  apiLinks,\n  count,\n  projectPath,\n} from './constants';\n\nconst getPath = (modulePath = '') => `/${projectPath}/${modulePath}`;\n\nconst getRandomNumber = (min, max) => (\n  Math.floor(\n    Math.random() * (\n      Math.floor(max) - Math.ceil(min) + 1\n    ),\n  ) + min\n);\n\nconst getAverageNumber = (min, max) => Math.round((max - min) / 2);\n\nconst shuffleArray = (array) => {\n  const newArray = [...array];\n  for (let i = newArray.length - 1; i > 0; i -= 1) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [newArray[i], newArray[j]] = [newArray[j], newArray[i]];\n  }\n  return newArray;\n};\n\nconst getTokenLifetimeInMs = () => {\n  const {\n    minInHour, secInMin, msInSec, tokenLifetimeInHours,\n  } = count;\n  return tokenLifetimeInHours * minInHour * secInMin * msInSec;\n};\n\n/* Words */\nconst countQuestionsSets = (questionsNumber) => (\n  Math.round(questionsNumber / count.groups)\n);\n\nconst generateQuestionsArray = (\n  data,\n  amountLevels = count.audiocall.maxLevels,\n) => (\n  shuffleArray(data).slice(0, amountLevels)\n);\n\n/* Media */\nconst getFilePath = (mediaPath) => apiLinks.file + mediaPath;\n\nconst playAudio = (path) => {\n  const audioElement = new Audio(path);\n  audioElement.play();\n};\n\nconst pauseAudio = (path) => {\n  const audioElement = new Audio(path);\n  audioElement.pause();\n};\n\nexport {\n  getFilePath,\n  generateQuestionsArray,\n  playAudio,\n  pauseAudio,\n  countQuestionsSets,\n  shuffleArray,\n  getRandomNumber,\n  getAverageNumber,\n  getTokenLifetimeInMs,\n  getPath,\n};\n","import axios from 'axios';\n\nimport { AUTH_LOGOUT, AUTH_SUCCESS } from './actionsTypes';\n\nimport {\n  apiLinks,\n  count,\n  localStorageItems,\n  pagesData,\n  text,\n} from '../../helpers/constants';\n\nimport { getTokenLifetimeInMs } from '../../helpers/functions';\n\nexport function logout() {\n  localStorage.removeItem(localStorageItems.token);\n  localStorage.removeItem(localStorageItems.nickname);\n  localStorage.removeItem(localStorageItems.userId);\n  localStorage.removeItem(localStorageItems.refreshTokenDate);\n  return {\n    type: AUTH_LOGOUT,\n  };\n}\n\nexport function autoLogout(time) {\n  return (dispatch) => {\n    setTimeout(() => {\n      dispatch(logout());\n    }, time * 1000);\n  };\n}\n\nexport function authSuccess(name, userId, token) {\n  return {\n    type: AUTH_SUCCESS,\n    name,\n    userId,\n    token,\n  };\n}\n\nexport function auth(email, password) {\n  return async (dispatch) => {\n    const authData = {\n      email,\n      password,\n    };\n    try {\n      const url = apiLinks.base + pagesData.signIn.path;\n\n      const response = await axios.post(url, authData);\n      const { data } = response;\n      const { name, userId, token } = data;\n      const refreshTokenDate = new Date(new Date().getTime() + getTokenLifetimeInMs());\n\n      localStorage.setItem(localStorageItems.token, token);\n      localStorage.setItem(localStorageItems.userId, userId);\n      localStorage.setItem(localStorageItems.refreshTokenDate, refreshTokenDate);\n      localStorage.setItem(localStorageItems.nickname, name);\n\n      const expData = new Date(localStorage.getItem(localStorageItems.refreshTokenDate));\n      dispatch(authSuccess(name, userId, token));\n      dispatch(autoLogout((expData.getTime() - new Date().getTime()) / count.msInSec));\n    } catch (e) {\n      // TODO Delete alert, add error message below the H1 title\n      alert(text.ru.incorrectLoginData);\n    }\n  };\n}\n","export const FETCH_QUIZES_START = 'FETCH_QUIZES_START';\nexport const FETCH_QUIZES_SUCCESS = 'FETCH_QUIZES_SUCCESS';\nexport const FETCH_QUIZES_ERROR = 'FETCH_QUIZES_ERROR';\nexport const FETCH_QUIZ_SUCCESS = 'FETCH_QUIZ_SUCCESS';\n\nexport const QUIZ_SET_STATE = 'QUIZ_SET_STATE';\nexport const FINISH_QUIZ = 'FINISH_QUIZ';\nexport const QUIZ_NEXT_QUESTION = 'QUIZ_NEXT_QUESTION';\nexport const QUIZ_RETRY = 'QUIZ_RETRY';\n\nexport const CREATE_QUIZ_QUESTION = 'CREATE_QUIZ_QUESTION';\nexport const RESET_QUIZ_CREATION = 'RESET_QUIZ_CREATION';\n\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';\n","import MenuList from './MenuList.jsx';\n\nexport default MenuList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nconst SimpleMenu = ({\n  menuTitle = 'Menu title',\n  menuItems = ['Profile', 'My account', 'Logout'],\n}) => {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const menuItemClasses = {\n    root: 'menu-list-item',\n  };\n\n  const menuListClasses = {\n    list: 'menu-list',\n  };\n\n  return (\n    <div className=\"hello\">\n      <Button\n        aria-controls=\"simple-menu\"\n        aria-haspopup=\"true\"\n        onMouseEnter={handleClick}\n        onMouseLeave={(event) => {\n          if (event.relatedTarget.closest === undefined\n            || !event.relatedTarget.closest('.menu-list-popover__paper')) {\n            handleClose();\n          }\n        }}\n      >\n        {menuTitle}\n      </Button>\n      <Menu\n        classes={menuListClasses}\n        id=\"simple-menu\"\n        anchorEl={anchorEl}\n        getContentAnchorEl={null}\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\n        transformOrigin={{ vertical: 'top', horizontal: 'center' }}\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n        MenuListProps={{ onMouseLeave: handleClose }}\n        disableScrollLock\n        autoFocus={false}\n        BackdropComponent={() => <div></div>}\n        PopoverClasses={{ root: 'menu-list-popover', paper: 'menu-list-popover__paper' }}\n      >\n        {\n          menuItems.map((item, key) => (\n            <MenuItem classes={menuItemClasses} key={key} onClick={handleClose}>{item}</MenuItem>\n          ))\n        }\n      </Menu>\n    </div>\n  );\n};\n\nSimpleMenu.propTypes = {\n  menuTitle: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  menuItems: PropTypes.arrayOf(PropTypes.oneOfType([\n    PropTypes.string, PropTypes.element,\n  ])),\n};\n\nexport default SimpleMenu;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport IconButton from '@material-ui/core/IconButton';\nimport { connect } from 'react-redux';\nimport { logout } from '../../redux/actions/auth';\nimport MenuList from '../../basicComponents/MenuList';\nimport { gamesData, pagesData } from '../../helpers/constants';\nimport { getPath } from '../../helpers/functions';\n\nconst addLinksToHeader = (link, index) => {\n  const { title, path } = link;\n  return (\n    <li key={index} className=\"navigation__item\">\n      {\n        path === pagesData.play.path\n          ? <MenuList\n            menuTitle={<NavLink activeClassName=\"navigation__item_active\" to={getPath(path)}>{title}</NavLink>}\n            menuItems={Object.values(gamesData).map((gameObj, i) => (\n              <NavLink\n                className=\"menu-list-item__link\"\n                activeClassName=\"navigation__item_active\"\n                key={i}\n                to={gameObj.path}>{gameObj.title}\n              </NavLink>\n            ))}\n          />\n          : <NavLink\n            activeClassName=\"navigation__item_active\"\n            exact to={getPath(path)}\n          >\n            {title}\n          </NavLink>\n      }\n    </li>\n  );\n};\n\nconst HeaderView = ({ links, isUserLogged, logout }) => {\n\n  return (\n    <header className=\"header\">\n      <h1 className=\"header__title\"><NavLink activeClassName=\"navigation__item_active\" to=\"/promo\">RS Lang</NavLink></h1>\n      <nav>\n        <ul className=\"navigation\">\n          {\n            links.map(addLinksToHeader)\n          }\n          {\n            isUserLogged && <li className=\"navigation__item exit-icon\">\n              <NavLink activeClassName=\"navigation__item_active\" to=\"/\">\n                <IconButton\n                  onClick={logout}>\n                  <ExitToAppIcon\n                    color=\"disabled\"\n                    style={{ fontSize: '3rem' }}\n                  />\n                </IconButton>\n\n              </NavLink>\n            </li>\n          }\n        </ul>\n      </nav>\n    </header>\n  );\n};\n\nHeaderView.propTypes = {\n  linkTitles: PropTypes.arrayOf(PropTypes.string),\n  isUserLogged: PropTypes.bool,\n  links: PropTypes.array,\n};\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    logout: () => dispatch(logout()),\n  };\n}\n\nexport default connect(null, mapDispatchToProps)(HeaderView);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { authSuccess } from '../../redux/actions/auth';\nimport HeaderView from './HeaderView.jsx';\nimport {\n  pagesData,\n  localStorageItems,\n} from '../../helpers/constants';\n\nclass Header extends React.Component {\n  componentDidMount() {\n    this.props.authSuccess(\n      localStorage.getItem(localStorageItems.nickname),\n      localStorage.getItem(localStorageItems.userId),\n      localStorage.getItem(localStorageItems.token),\n    );\n  }\n\n  getPagesLinks = () => Object.values(pagesData).reduce((links, item) => {\n    const role = this.props.token ? 'user' : 'guest';\n    const updatedLinks = links;\n\n    if (item[role].isVisible) {\n      updatedLinks[item[role].index] = item;\n    }\n\n    return updatedLinks;\n  }, [])\n\n  render() {\n    return (\n      <HeaderView\n        links={this.getPagesLinks()}\n        isUserLogged={(Boolean(this.props.token))} />\n    );\n  }\n}\nfunction mapStateToProps(state) {\n  return {\n    token: state.auth.token,\n\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    authSuccess: (name, email, password) => dispatch(authSuccess(name, email, password)),\n  };\n}\nHeader.propTypes = {\n  token: PropTypes.string,\n  authSuccess: PropTypes.func,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\n","import TeamMember from './TeamMemberView.jsx';\n\nexport default TeamMember;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport noAvatar from '../../assets/images/avatar.jpg';\nimport { linkedinLink } from '../../helpers/constants';\n\nconst TeamMemberView = (props) => {\n  const {\n    name = 'Безымянный герой',\n    surname = '',\n    role = 'Сделал всё несделанное',\n    image = noAvatar,\n    linkedinUsername = '',\n  } = props;\n  return (\n    <div className=\"team-member\">\n      <img src={image} alt=\"team-member\" className=\"team-member__image\"/>\n      <p className=\"team-member__full-name\">{`${name} ${surname}`}</p>\n      <p className=\"team-member__role\">{role}</p>\n      {\n        linkedinUsername.length > 0 &&\n        <p className=\"team-member-linked-profile\">\n          <a target=\"_blunk\" href={linkedinLink + linkedinUsername} className=\"team-member-linked-profile__link\">\n            <span className=\"linkedin-icon\"></span>{linkedinUsername}\n          </a>\n        </p>\n      }\n    </div>\n  );\n};\n\nTeamMemberView.propTypes = {\n  name: PropTypes.string,\n  surname: PropTypes.string,\n  role: PropTypes.string,\n  image: PropTypes.string,\n  linkedinUsername: PropTypes.string,\n};\n\nexport default TeamMemberView;\n","import Button from './ButtonView.jsx';\r\n\r\nexport default Button;\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Button from '@material-ui/core/Button';\n\nconst ButtonView = ({ type = 'primary', value = 'Button', className = '' }) => {\n  return <Button\n    className={className}\n    classes={{ root: `btn btn-${type}` }}\n    variant=\"contained\"\n    size=\"large\">{value}</Button>;\n};\n\nButtonView.propTypes = {\n  type: PropTypes.string,\n  className: PropTypes.string,\n  value: PropTypes.string,\n};\n\nexport default ButtonView;\n","import React from 'react';\nimport { Link } from \"react-router-dom\";\nimport teamPhoto from '../../../assets/images/team-photo.png';\nimport { teamMembers, pagesData } from '../../../helpers/constants';\nimport TeamMember from '../../TeamMember';\nimport Button from '../../../basicComponents/Button';\n\nconst mapTeamMembersToItems = (member, index) => <TeamMember key={index} {...member} />;\n\nconst AboutUsPage = () => (\n  <div className=\"about-us-page\">\n    <section className=\"about-us\">\n      <h1>{pagesData.aboutUs.title}</h1>\n      <p className=\"about-us__desctiption\">Привет! Мы рады представить продукт нашей совместной работы — приложение по изучению английского языка</p>\n      <img src={teamPhoto} alt=\"team\" className=\"about-us__team-photo\"></img>\n    </section>\n    <section className=\"team-members\">\n      {\n        teamMembers.map(mapTeamMembersToItems)\n      }\n    </section>\n    <Link to={ pagesData.learnWords.path }>\n      <Button className=\"demonstration-container__start-button\" value=\"Учите английский с нами\" />\n    </Link>\n  </div>\n);\n\nexport default AboutUsPage;\n","import AboutUsPage from './AboutUsPage.jsx';\n\nexport default AboutUsPage;\n","export const buttonsNames = {\n  COMPLICATED: 'Сложное',\n  REMOVE: 'Удалить',\n  AUTO_VOICE: 'Автоозвучка',\n  SHOW_ANSWER: 'Показать ответ',\n  PREV: 'пред.',\n  NEXT: 'след.',\n};\n\nexport const RSLANG = 'rslang';\nexport const RSLANG_SESSION_PROGRESS = 'rslangSessionProgress';\n\nexport const difficultLabels = {\n  HARD_LABEL: {\n    word: 'Трудно',\n    repeats: '+ 2 повтора',\n  },\n  NORMAL_LABEL: {\n    word: 'Хорошо',\n    repeats: '+ 1 повтор',\n  },\n  EASY_LABEL: {\n    word: 'Легко',\n    repeats: 'без повторов',\n  },\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { buttonsNames } from '../../helpers/constants';\nimport { pagesData } from '../../../../../helpers/constants';\n\nconst { AUTO_VOICE } = buttonsNames;\n\nconst Header = ({ categoriesSelect, onToggleAutoPlay, onToggleCategory }) => (\n  <div>\n    <div>\n      <h1>{pagesData.learnWords.title}</h1>\n      {/* //TODO: Here will be helper: Add right English word to sentence */}\n    </div>\n    {/* //TODO: Here will be two UI components */}\n    {/* //TODO: Button: Auto paly on */}\n    {/* //TODO: Drop-dawn: `Learn` category */}\n    <button onClick={() => onToggleAutoPlay()}>{AUTO_VOICE}</button>\n    <select onChange={(event) => onToggleCategory(event)}>\n      {categoriesSelect.map((el, i) => (\n        <option key={`category-${i}`} value={el}>\n          {el}\n        </option>\n      ))}\n    </select>\n  </div>\n);\n\nHeader.propTypes = {\n  categoriesSelect: PropTypes.array,\n  onToggleAutoPlay: PropTypes.func,\n  onToggleCategory: PropTypes.func,\n};\n\nHeader.defaultProps = {\n  categoriesSelect: [],\n  onToggleAutoPlay: () => {},\n  onToggleCategory: () => {},\n};\n\nexport default Header;\n\n","import Header from './Header.jsx';\n\nexport default Header;\n","import moment from 'moment';\nimport {\n  applicationThings,\n  userSettingsTemplate,\n  dateFormatTemplate,\n  levelsOfDifficulty,\n} from '../constants';\n\nexport const userWordTemplate = {\n  difficulty: false,\n  optional: {\n    rate: 0,\n    next: '',\n    removed: false,\n    repeated: 0,\n  },\n};\n\nexport const userWordThings = {\n  DIFFICULTY: 'difficulty',\n  OPTIONAL: 'optional',\n  RATE: 'rate',\n  NEXT: 'next',\n  REMOVED: 'removed',\n  REPEATED: 'repeated',\n};\n\nexport const statsGameTemplate = {\n  games: 0,\n  wrong: 0,\n  right: 0,\n};\n\nexport const statsLearnTemplate = {\n  learned: 0,\n  inProgress: 0,\n  complicated: 0,\n  removed: 0,\n};\n\nexport const statsPuzzleTemplate = {\n  games: 0,\n  wrong: 0,\n};\n\nexport const statsThingNames = {\n  LEARNED: 'learned',\n  IN_PROGRESS: 'inProgress',\n  COMPLICATED: 'complicated',\n  REMOVED: 'removed',\n  GAMES: 'games',\n  WRONG: 'wrong',\n  RIGHT: 'right',\n};\n\nexport const checkStatsThingTemplate = (thing) => {\n  switch (thing) {\n    case applicationThings.LEARN_WORDS:\n      return { ...statsLearnTemplate };\n    default:\n      return {};\n  }\n};\n\nexport const statsMainTemplate = () => (\n  {\n    learnedWords: 0,\n    optional: {},\n  }\n);\n\nexport const generateStatsTemplate = () => {\n  const stats = statsMainTemplate();\n  const properties = {};\n  Object.values(applicationThings).forEach((thing) => {\n    properties[thing] = checkStatsThingTemplate(thing);\n  });\n  stats.optional = { ...properties };\n  return stats;\n};\n\nconst sumObjectProps = (targetObject, newData) => {\n  const result = {};\n  Object.keys(targetObject).forEach((key) => {\n    result[key] = key === 'games'\n      ? targetObject[key] + 1\n      : targetObject[key] + newData[key] || 0;\n  });\n  return result;\n};\n\nconst changeGameStats = (statsOption, optionData, currentStats) => {\n  const today = moment().format(dateFormatTemplate);\n  const optional = currentStats?.optional || {};\n  const current = optional[statsOption][today];\n  let updated = {};\n\n  const temlate = statsOption === applicationThings.PUZZLE\n    ? statsPuzzleTemplate\n    : statsGameTemplate;\n  updated = current\n    ? { ...sumObjectProps(current, optionData) }\n    : { ...sumObjectProps(temlate, optionData) };\n  optional[statsOption][today] = { ...updated };\n  return optional[statsOption];\n};\n\nexport const changeStats = (statsOption, optionData, currentStats) => {\n  const newStats = { ...currentStats };\n  const { optional } = currentStats;\n  let updated = {};\n  let current = {};\n  switch (statsOption) {\n    case applicationThings.LEARN_WORDS:\n      current = optional[statsOption];\n      updated = {\n        ...sumObjectProps(current, optionData),\n      };\n      break;\n    default:\n      updated = changeGameStats(statsOption, optionData, currentStats);\n  }\n  optional[statsOption] = updated;\n  return { ...newStats, optional };\n};\n\nexport const changeSessionStatsObject = (statsObject, keyName, keyValue) => {\n  const result = { ...statsObject };\n  result[keyName] += keyValue;\n  return result;\n};\n\nexport const generateSettingsTemplate = () => {\n  const settings = {};\n  Object.values(userSettingsTemplate).forEach((setting) => {\n    settings[setting] = true;\n  });\n  return settings;\n};\n\nexport const changeSettings = (userOption, wordObject) => {\n  const settings = { ...wordObject };\n  const optionData = settings[userOption];\n  settings[userOption] = !optionData;\n  return { ...settings };\n};\n\nexport const generateUserWordsTemplate = () => (\n  []\n);\n\nexport const createUserWord = (wordObject) => {\n  const userWord = { wordId: wordObject.id, ...userWordTemplate };\n  return { ...wordObject, userWord };\n};\n\nexport const convertDate = (days) => (\n  days === 0\n    ? moment().format(dateFormatTemplate)\n    : moment().add(days, 'days').format(dateFormatTemplate)\n);\n\nexport const changeUserWord = (userOption, optionData, oldRepeated, wordObject) => {\n  const newUserWord = wordObject?.userWord\n    ? { ...wordObject.userWord }\n    : { ...userWordTemplate };\n  const { optional } = newUserWord;\n  if (userOption === userWordThings.DIFFICULTY) {\n    newUserWord[userWordThings.DIFFICULTY] = optionData;\n  } else {\n    switch (userOption) {\n      case userWordThings.RATE:\n        optional.rate = optionData;\n        optional.next = convertDate(optionData);\n        optional.repeated = oldRepeated + 1;\n        break;\n      case userWordThings.REMOVED:\n        optional.removed = optionData;\n        break;\n      default:\n        break;\n    }\n  }\n  const userWord = { ...newUserWord, optional };\n  return { ...wordObject, userWord };\n};\n\nexport const checkUserWordById = (userWords, wordId) => (\n  userWords.find((word) => word.id === wordId)\n);\n\nexport const checkForCurrentUserWord = (userWords, wordObject) => (\n  {\n    ...userWords.length > 0\n      ? checkUserWordById(userWords, wordObject.id) || createUserWord(wordObject)\n      : createUserWord(wordObject),\n  }\n);\n\nexport const generateSpacingRepeatingTemplate = () => (\n  []\n);\n\nexport const getWordsDiffAndComplicated = ({ difficulty, optional }) => (\n  {\n    isRemoved: optional.removed,\n    isComplicated: difficulty === levelsOfDifficulty.HARD,\n  }\n);\n","import {\n  statsGameTemplate,\n  statsLearnTemplate,\n  generateStatsTemplate,\n  generateSettingsTemplate,\n  generateUserWordsTemplate,\n  generateSpacingRepeatingTemplate,\n} from './dataModels';\nimport { applicationThings } from '../constants';\n\nexport const localThings = {\n  STATISTICS: 'rslangUserStatistics',\n  WORDS: 'rslangUserWords',\n  SETTINGS: 'rslangUserSettings',\n};\n\nexport const sessionThings = {\n  SETTINGS: 'rslangSessionStatistics',\n  WORDS: 'rslangSessionWords',\n  REPEATING: 'rslangSessionRepeating',\n};\n\nexport const gameSessionThings = {\n  learnWords: 'rslangLearnWordsSession',\n  savannah: 'rslangSavannahSession',\n  sprint: 'rslangSprintSession',\n  audiocall: 'rslangAudiocallSession',\n  speakIt: 'rslangSpeakItSession',\n  puzzle: 'rslangPuzzleSession',\n  unmess: 'rslangUnmessSession',\n};\n\nexport const checkForLocalThing = (thingName, templateGenerator) => (\n  !localStorage.getItem(thingName)\n    ? templateGenerator()\n    : JSON.parse(localStorage.getItem(thingName))\n);\n\nexport const getSessionThing = (thingName, template) => (\n  !localStorage.getItem(thingName)\n    ? template\n    : JSON.parse(localStorage.getItem(thingName))\n);\n\nexport const checkForessionThing = (thingName) => {\n  let template;\n  if (thingName === applicationThings.LEARN_WORDS) {\n    template = { ...statsLearnTemplate };\n  } else {\n    template = { ...statsGameTemplate };\n    delete template.games;\n    if (thingName === applicationThings.PUZZLE) {\n      delete template.right;\n    }\n  }\n  return getSessionThing(gameSessionThings[thingName], template);\n};\n\nexport const saveSessionThing = (thingName, thingValue) => {\n  localStorage.setItem(gameSessionThings[thingName], JSON.stringify(thingValue));\n};\n\nexport const checkForStatistics = () => (\n  checkForLocalThing(localThings.STATISTICS, generateStatsTemplate)\n);\n\nexport const saveLocalStatistics = (statsObject) => {\n  localStorage.setItem(localThings.STATISTICS, JSON.stringify({ ...statsObject }));\n};\n\nexport const checkForUserWords = (storage = sessionThings) => (\n  checkForLocalThing(storage.WORDS, generateUserWordsTemplate)\n);\n\nexport const saveLocalUserWord = (wordObject, storage = sessionThings) => {\n  const areWordsStored = localStorage.getItem(storage.WORDS);\n  if (areWordsStored) {\n    localStorage.setItem(storage.WORDS, JSON.stringify([wordObject]));\n  } else {\n    const words = JSON.parse(localStorage.getItem(storage.WORDS));\n    const isWordStored = words.findIndex((el) => el.id === wordObject.id) !== -1;\n\n    let updatedWords = [];\n    if (isWordStored) {\n      updatedWords = words.map((word) => (word.id === wordObject.id\n        ? { ...word, ...wordObject }\n        : word));\n    } else {\n      updatedWords = [...words, wordObject];\n    }\n\n    localStorage.setItem(storage.WORDS, JSON.stringify([...updatedWords]));\n  }\n};\n\nexport const checkForSettings = () => (\n  checkForLocalThing(localThings.SETTINGS, generateSettingsTemplate)\n);\n\nexport const saveLocalSettings = (settings) => {\n  localStorage.setItem(localThings.SETTINGS, JSON.stringify({ ...settings }));\n};\n\nexport const checkForSpacingRepeating = () => (\n  checkForLocalThing(sessionThings.REPEATING, generateSpacingRepeatingTemplate)\n);\n\nexport const saveSpacingRepeating = (repeatingArray, wordObject, twice = false) => {\n  const newWords = twice ? [wordObject, ...repeatingArray, wordObject] : [wordObject];\n  localStorage.setItem(sessionThings.REPEATING, JSON.stringify(newWords));\n};\n\nexport const getDataFromStorage = (storage, data) => (\n  JSON.parse(localStorage.getItem(storage[data]))\n);\n\nexport const clearStorageData = (storage, data) => {\n  localStorage.removeItem(storage[data]);\n};\n\nexport const getSessionData = (thingName) => (\n  JSON.parse(localStorage.getItem(gameSessionThings[thingName]))\n);\n\nexport const clearSessionData = (thingName) => {\n  localStorage.removeItem(gameSessionThings[thingName]);\n};\n","import { levelsOfDifficulty } from '../constants';\n\nexport const defineNewRate = (rate) => {\n  let newRate = 0;\n  switch (true) {\n    case rate <= 2:\n      newRate = 4;\n      break;\n    case rate <= 4:\n      newRate = 7;\n      break;\n    case rate <= 7:\n      newRate = 10;\n      break;\n    case rate <= 10:\n      newRate = 15;\n      break;\n    case rate <= 15:\n      newRate = 30;\n      break;\n    default:\n      newRate = rate;\n      break;\n  }\n  return newRate;\n};\n\nexport const correctedRate = (rate, level) => {\n  let coefficient = 0;\n  let correction = 0;\n  if (level !== levelsOfDifficulty.NORMAL && rate <= 4) {\n    correction = level === levelsOfDifficulty.HARD ? -1 : 1;\n  }\n  switch (level) {\n    case levelsOfDifficulty.HARD:\n      coefficient = 0.8;\n      break;\n    case levelsOfDifficulty.EASY:\n      coefficient = 1.3;\n      break;\n    default:\n      coefficient = 1;\n      break;\n  }\n  return Math.floor(rate * coefficient) + correction;\n};\n\nexport const calculateLearnRate = (rate, level) => {\n  const newRate = defineNewRate(rate);\n  return correctedRate(newRate, level);\n};\n","import { levelsOfDifficulty } from '../constants';\nimport {\n  checkForStatistics,\n  saveLocalStatistics,\n  checkForUserWords,\n  saveLocalUserWord,\n  checkForSettings,\n  saveLocalSettings,\n  checkForSpacingRepeating,\n  saveSpacingRepeating,\n  checkForessionThing,\n  saveSessionThing,\n  getSessionData,\n  clearSessionData,\n} from './storageModel';\nimport {\n  changeStats,\n  checkForCurrentUserWord,\n  changeUserWord,\n  userWordThings,\n  changeSettings,\n  getWordsDiffAndComplicated,\n  statsThingNames,\n  changeSessionStatsObject,\n} from './dataModels';\nimport { calculateLearnRate } from './spacingRepeating';\n\nexport const prepareWordObject = (wordObject) => {\n  const userWords = checkForUserWords();\n  return checkForCurrentUserWord(userWords, wordObject);\n};\n\nexport const updateRepeatingWords = (wordObject, twice) => {\n  const repeating = checkForSpacingRepeating();\n  saveSpacingRepeating(repeating, wordObject, twice);\n};\n\nexport const convertDifficultLevelToRepeats = (level) => (\n  level === levelsOfDifficulty.HARD\n);\n\nexport const updateUserWord = (userOption, optionData, oldRepeated, wordObject, level) => {\n  const newWord = changeUserWord(userOption, optionData, oldRepeated, wordObject);\n  saveLocalUserWord(newWord);\n  if (level !== levelsOfDifficulty.EASY && userOption === userWordThings.RATE) {\n    const twice = convertDifficultLevelToRepeats(level);\n    updateRepeatingWords(newWord, twice);\n  }\n};\n\nconst getOldData = ({ userWord }) => (\n  {\n    oldRate: userWord?.optional?.rate || 0,\n    oldRepeated: userWord?.optional?.repeated || 0,\n  }\n);\n\nexport const updateUserWordRate = (\n  wordObject,\n  level = levelsOfDifficulty.HARD,\n) => {\n  const { oldRate, oldRepeated } = getOldData(wordObject);\n  const current = prepareWordObject(wordObject);\n  const rate = calculateLearnRate(oldRate, level);\n  updateUserWord(userWordThings.RATE, rate, oldRepeated, current, level);\n};\n\nexport const updateUserWordDifficulty = (wordObject) => {\n  const current = prepareWordObject(wordObject);\n  const { difficulty } = current.userWord;\n  updateUserWord(userWordThings.DIFFICULTY, !difficulty, current);\n};\n\nexport const updateUserWordRemoved = (wordObject) => {\n  const current = prepareWordObject(wordObject);\n  const { removed } = current.userWord.optional;\n  updateUserWord(userWordThings.REMOVED, !removed, current);\n};\n\nexport const updateStats = (statsOption, optionData) => {\n  const stats = checkForStatistics();\n  const newStats = changeStats(statsOption, optionData, stats);\n  saveLocalStatistics(newStats);\n};\n\nexport const updateSettings = (settingOption) => {\n  const settings = checkForSettings();\n  const newSettings = changeSettings(settingOption, settings);\n  saveLocalSettings(newSettings);\n};\n\nexport const getDiffAndCoplicatedInProgress = (arrayOfWordsObjects, template) => (\n  arrayOfWordsObjects.map((wordObject) => (wordObject?.userWord\n    ? { ...template, ...getWordsDiffAndComplicated(wordObject) }\n    : { ...template }))\n);\n\nexport const saveDataToSessionStats = (thingName, keyName, keyValue = 1) => {\n  const current = checkForessionThing(thingName);\n  const updated = changeSessionStatsObject(current, keyName, keyValue);\n  saveSessionThing(thingName, updated);\n};\n\nexport const saveRightToGamesStats = (thingName) => {\n  saveDataToSessionStats(thingName, statsThingNames.RIGHT);\n};\n\nexport const saveWrongToGamesStats = (thingName) => {\n  saveDataToSessionStats(thingName, statsThingNames.WRONG);\n};\n\nexport const getGameSessionResults = (thingName) => (\n  getSessionData(thingName)\n);\n\nexport const clearGameSessionResults = (thingName) => {\n  clearSessionData(thingName);\n};\n\nexport const saveGameResults = (thingName) => {\n  const results = getGameSessionResults(thingName);\n  updateStats(thingName, results);\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { buttonsNames } from '../../helpers/constants';\nimport {\n  updateUserWordDifficulty,\n  updateUserWordRemoved,\n} from '../../../../../helpers/wordsService';\n\nconst { COMPLICATED, REMOVE } = buttonsNames;\n\nexport const handleWordRemove = (wordObject, onChangeProgress, isRemoved) => {\n  updateUserWordRemoved(wordObject);\n  onChangeProgress({ isRemoved: !isRemoved });\n};\n\nexport const handleWordComplicated = (wordObject, onChangeProgress, isComplicated) => {\n  updateUserWordDifficulty(wordObject);\n  onChangeProgress({ isComplicated: !isComplicated });\n};\n\nconst StatusBar = ({\n  progress: { isRemoved, isComplicated },\n  onChangeProgress,\n  currentWord,\n  wordCount,\n  totalWords,\n  isShownComplicatedButton,\n}) => (\n  <div>\n    {/* //TODO: Here will be Material UI ProgressBar with 'totalWords' / 'wordCount' */}\n    <div>{`${wordCount} / ${totalWords}`}</div>\n    <div>\n      {isShownComplicatedButton\n          && <button\n          className={classNames({ active: isComplicated })}\n          onClick={\n            () => handleWordComplicated(currentWord, onChangeProgress, isComplicated)\n          } >\n            {COMPLICATED}\n          </button>\n      }\n        <button\n          className={classNames({ active: isRemoved })}\n          onClick={\n            () => handleWordRemove(currentWord, onChangeProgress, isRemoved)\n          } >\n        {REMOVE}\n      </button>\n    </div>\n  </div>\n);\n\nStatusBar.propTypes = {\n  progress: PropTypes.object,\n  onChangeProgress: PropTypes.func,\n  currentWord: PropTypes.object,\n  wordCount: PropTypes.number,\n  totalWords: PropTypes.number,\n  isShownComplicatedButton: PropTypes.bool,\n};\n\nexport default StatusBar;\n","import StatusBar from './StatusBar.jsx';\n\nexport default StatusBar;\n","export const isShownComplicatedButton = true;\nexport const isShownAnswerButton = true;\nexport const isShownImageAssociation = true;\nexport const isShownTranslation = true;\nexport const isShownTranscription = true;\nexport const isShownExampleSentence = true;\nexport const isShownMeaning = true;\n\nexport const categoriesSelect = [\n  'all', 'only new', 'for repeating', 'complicated',\n];\n\nexport const baseUrl = 'https://raw.githubusercontent.com/hallovarvara/rslang-data/master/';\n\nexport const initialProgressObject = {\n  isGuessed: false,\n  isShownWord: false,\n  isWordSemiOpacity: false,\n  isUsedTip: false,\n  difference: null,\n  isDifficultChosen: false,\n  isRemoved: false,\n  isComplicated: false,\n};\n","const hideColor = '#999999';\nexport const successColor = '#2ab823';\nexport const fewErrorsColor = '#f28029';\nexport const manyErrorsColor = '#db4621';\n\nexport const hideWordStyles = {\n  backgroundColor: hideColor,\n  color: hideColor,\n  pointerEvents: 'none',\n  userSelect: 'none',\n};\n\nexport const showWordStyles = {\n  backgroundColor: 'transparent',\n  color: 'inherit',\n  pointerEvents: 'auto',\n  userSelect: 'auto',\n};\n\nconst absolutElement = {\n  position: 'absolute',\n  width: '100%',\n  height: '100%',\n  left: '0',\n  top: '0',\n};\n\nexport const inputWrapper = {\n  ...absolutElement,\n  zIndex: '10',\n  transition: 'all 0.5s ease',\n};\n\nexport const bgElement = {\n  ...absolutElement,\n  zIndex: 5,\n  backgroundColor: hideColor,\n};\n\nexport const inputField = {\n  width: '100%',\n  height: '100%',\n  backgroundColor: 'transparent',\n  zIndex: '11',\n};\n","import { baseUrl } from './settings';\nimport { RSLANG_SESSION_PROGRESS } from './constants';\nimport { successColor, fewErrorsColor, manyErrorsColor } from './style-options';\n\nexport const resourceUrl = (path) => `${baseUrl}${path}`;\n\nexport const extractEmphasizedWord = (str, surroundingTag) => {\n  const sentence = {};\n  const beginTag = `<${surroundingTag}>`;\n  const endTag = `</${surroundingTag}>`;\n\n  sentence.begin = str.substring(0, str.indexOf(beginTag));\n  sentence.emphasis = str.substring(\n    str.indexOf(beginTag) + 3,\n    str.indexOf(endTag),\n  );\n  sentence.end = str.substring(str.indexOf(endTag) + 4);\n  return sentence;\n};\n\nexport const showDifferenceInWords = (currentWord, inputWord) => {\n  const result = [];\n  const errorsCounter = 0;\n  const arr = inputWord.split('');\n  arr.forEach((el, i) => {\n    if (el === currentWord[i]) {\n      result.push({ letter: el, color: successColor });\n    } else {\n      const errorColor = errorsCounter >= arr.length\n        ? manyErrorsColor\n        : fewErrorsColor;\n      result.push({ letter: el, color: errorColor });\n    }\n  });\n  return result;\n};\n\nexport const getSessionProgress = () => {\n  const progress = JSON.parse(localStorage.getItem(RSLANG_SESSION_PROGRESS));\n  return progress || [];\n};\n\nexport const setSessionProgress = (progress) => {\n  localStorage.setItem(RSLANG_SESSION_PROGRESS, JSON.stringify(progress));\n};\n\nexport const checkSessionProgress = (progress) => (\n  progress.find((el) => el.isGuessed === true)\n);\n\nexport const clearSessionProgress = () => {\n  localStorage.removeItem(RSLANG_SESSION_PROGRESS);\n};\n\nexport const prepareRightAnswerStyles = (isGuessed) => {\n  const styles = {};\n  styles.zIndex = 8;\n  styles.color = isGuessed ? successColor : 'transparent';\n  return styles;\n};\n\nexport const prepareWrongAnswerStyles = (isShownWord, isWordSemiOpacity) => {\n  const styles = {\n    display: 'inline',\n    transition: 'all 0.5s ease',\n  };\n  if (isShownWord) {\n    styles.opacity = !isWordSemiOpacity ? 1 : 0.5;\n  } else {\n    styles.opacity = 0;\n  }\n  return styles;\n};\n\nexport const playAudios = (audios) => {\n  const audio = new Audio();\n  if (!Array.isArray(audios)) {\n    audio.src = resourceUrl(audios);\n    audio.play();\n  } else {\n    let index = 0;\n    audio.src = resourceUrl(audios[index]);\n    audio.play();\n\n    audio.onended = () => {\n      if (index < audios.length) {\n        setTimeout(() => {\n          index += 1;\n          audio.src = resourceUrl(audios[index]);\n          audio.play();\n        }, 300);\n      }\n    };\n  }\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { resourceUrl } from '../../helpers';\nimport { buttonsNames } from '../../helpers/constants';\n\nconst { SHOW_ANSWER, PREV, NEXT } = buttonsNames;\n\nconst SideBar = ({\n  progress,\n  word,\n  image,\n  isShownAnswerButton,\n  isShownImageAssociation,\n  onNextWord,\n  onPrevWord,\n  onChangeProgress,\n}) => (\n  <div>\n    <div>\n      {isShownImageAssociation && <img src={resourceUrl(image)} alt={word} />}\n        {isShownAnswerButton && (\n          <button\n            onClick={() => onChangeProgress({\n              isGuessed: true,\n              isShownWord: true,\n              isUsedTip: true,\n            })}\n            disabled={progress.isGuessed}\n          >\n            {SHOW_ANSWER}\n          </button>\n        )}\n    </div>\n    <div>\n      <button onClick={() => onPrevWord()}>{PREV}</button>\n      <button onClick={() => onNextWord()}>{NEXT}</button>\n    </div>\n  </div>\n);\n\nSideBar.propTypes = {\n  progress: PropTypes.object,\n  word: PropTypes.string,\n  image: PropTypes.string,\n  isShownAnswerButton: PropTypes.bool,\n  isShownImageAssociation: PropTypes.bool,\n  onNextWord: PropTypes.func,\n  onPrevWord: PropTypes.func,\n  onChangeProgress: PropTypes.func,\n};\n\nexport default SideBar;\n","import SideBar from './SideBar.jsx';\n\nexport default SideBar;\n","import CheckedSentense from './CheckedSentense.jsx';\n\nexport default CheckedSentense;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst CheckedSentense = ({ sentence, styles }) => (\n  <p style={styles}>\n    {sentence.map((el, i) => (\n      <span\n        key={i}\n        style={{ color: el.color }}\n      >\n        {el.letter}\n      </span>\n    ))}\n  </p>\n);\n\nCheckedSentense.propTypes = {\n  sentence: PropTypes.array,\n  styles: PropTypes.object,\n};\n\nexport default CheckedSentense;\n","import Word from './Word.jsx';\n\nexport default Word;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  inputField,\n  inputWrapper,\n} from '../../helpers/style-options';\nimport {\n  showDifferenceInWords,\n  prepareRightAnswerStyles,\n  prepareWrongAnswerStyles,\n} from '../../helpers';\nimport CheckedSentense from '../CheckedSentence';\n\nclass Word extends Component {\n  state = {\n    value: '',\n  }\n\n  handleInput = ({ target: { value } }) => {\n    this.setState({ value });\n    const { onChangeProgress, progress: { difference } } = this.props;\n    if (value && difference) {\n      onChangeProgress({ isShownWord: false });\n    }\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const currentWord = this.props.textExample.emphasis;\n    const inputWord = this.state.value;\n    if (currentWord !== inputWord) {\n      this.handleError(currentWord, inputWord);\n    } else {\n      this.handleSuccess();\n    }\n    this.setState({\n      value: '',\n    });\n  }\n\n  handleError = (currentWord, inputWord) => {\n    const difference = showDifferenceInWords(currentWord, inputWord);\n    const { onChangeProgress } = this.props;\n    onChangeProgress({ isShownWord: true, difference });\n    setTimeout(() => {\n      onChangeProgress({ isWordSemiOpacity: true });\n    }, 2000);\n  }\n\n  handleSuccess = () => {\n    const { onChangeProgress, onPlayAudio } = this.props;\n    onChangeProgress({\n      isGuessed: true,\n      isShownWord: true,\n      difference: null,\n    });\n    onPlayAudio();\n  }\n\n  render() {\n    const {\n      progress,\n      textExample,\n      textExampleTranslate,\n      isShownTranslation,\n      onPlayAudio,\n    } = this.props;\n    const { begin, emphasis, end } = textExample;\n    const {\n      isGuessed,\n      isShownWord,\n      isWordSemiOpacity,\n      difference,\n    } = progress;\n    const {\n      value,\n    } = this.state;\n    const wrongAnswerStyles = prepareWrongAnswerStyles(isShownWord, isWordSemiOpacity);\n    const rightAnswerStyles = prepareRightAnswerStyles(isGuessed);\n    const output = difference\n      ? <CheckedSentense sentence={difference} styles={wrongAnswerStyles} />\n      : <span style={rightAnswerStyles}>{emphasis}</span>;\n    return (\n      <div>\n        <div>\n          {isGuessed && <button onClick={() => onPlayAudio('audioExample')}>Play</button>}\n          <span>{begin}</span>\n          <div style={{ position: 'relative', display: 'inline' }}>\n            {output}\n            <form style={inputWrapper} onSubmit={this.handleSubmit}>\n              <input\n                type=\"text\"\n                style={inputField}\n                autoComplete=\"off\"\n                autoFocus=\"on\"\n                disabled={isGuessed}\n                onChange={this.handleInput}\n                value={value}\n              />\n            </form>\n          </div>\n          <span style={{ marginLeft: '10px' }}>{end}</span>\n        </div>\n        <button disabled={!value} onClick={this.handleSubmit}>Проверить ответ</button>\n        {isGuessed && isShownTranslation && <p>{textExampleTranslate}</p>}\n      </div>\n    );\n  }\n}\n\nWord.propTypes = {\n  progress: PropTypes.object,\n  textExampleTranslate: PropTypes.string,\n  textExample: PropTypes.object,\n  isShownTranslation: PropTypes.bool,\n  onChangeProgress: PropTypes.func,\n  onPlayAudio: PropTypes.func,\n};\n\nexport default Word;\n","import WordExtraInfo from './WordExtraInfo.jsx';\n\nexport default WordExtraInfo;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { hideWordStyles, showWordStyles } from '../../helpers/style-options';\n\nconst WordExtraInfo = ({\n                         progress,\n                         word,\n                         wordTranslate,\n                         transcription,\n                         textMeaning,\n                         textMeaningTranslate,\n                         isShownTranscription,\n                         isShownExampleSentence,\n                         isShownMeaning,\n                         onPlayAudio,\n                       }) => {\n  const { begin, emphasis, end } = textMeaning;\n  const { isGuessed } = progress;\n  return (\n    <div>\n      <div>\n        {\n          isGuessed && <div>\n            {/* TODO: Please, replace buton text 'play' to an appropriate icon */}\n            <button onClick={() => onPlayAudio('audio')}>Play</button>\n            <p>{word}</p>\n          </div>\n        }\n        <p>{isGuessed && wordTranslate}</p>\n        {isGuessed && isShownTranscription && <p>{transcription}</p>}\n      </div>\n      {\n        isShownExampleSentence && <div>\n          {/* TODO: Please, replace buton text 'play' to an appropriate icon */}\n          {isGuessed && <button onClick={() => onPlayAudio('audioMeaning')}>Play</button>}\n          <span>{begin}</span>\n          <span style={isGuessed ? showWordStyles : hideWordStyles}>{emphasis}</span>\n          <span>{end}</span>\n        </div>\n      }\n      {isGuessed && isShownMeaning && <div>\n        {/* TODO: Please, replace buton text 'play' to an appropriate icon */}\n        <p>{textMeaningTranslate}</p>\n      </div>}\n    </div>\n  );\n};\n\nWordExtraInfo.propTypes = {\n  progress: PropTypes.object,\n  word: PropTypes.string,\n  wordTranslate: PropTypes.string,\n  transcription: PropTypes.string,\n  textMeaning: PropTypes.object,\n  textMeaningTranslate: PropTypes.string,\n  isShownTranscription: PropTypes.bool,\n  isShownExampleSentence: PropTypes.bool,\n  isShownMeaning: PropTypes.bool,\n  onPlayAudio: PropTypes.func,\n};\n\nexport default WordExtraInfo;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { difficultLabels } from '../../helpers/constants';\nimport { levelsOfDifficulty } from '../../../../../helpers/constants';\nimport {\n  updateUserWordRate,\n  // updateRepeatingWords,\n} from '../../../../../helpers/wordsService';\n\nconst { HARD, NORMAL, EASY } = levelsOfDifficulty;\nconst { HARD_LABEL, NORMAL_LABEL, EASY_LABEL } = difficultLabels;\n\nconst handleChoseDifficulty = (word, onChangeProgress, level) => {\n  updateUserWordRate(word, level);\n  onChangeProgress({ isDifficultChosen: true });\n};\n\nconst SpacingRepeating = (props) => {\n  const { currentWord, onChangeProgress } = props;\n  return (\n    <div>\n      <button onClick={() => handleChoseDifficulty({ ...currentWord }, onChangeProgress, HARD)}>\n        <span>{HARD_LABEL.word}</span>\n        <span>{HARD_LABEL.repeats}</span>\n      </button>\n      <button onClick={() => handleChoseDifficulty({ ...currentWord }, onChangeProgress, NORMAL)}>\n        <span>{NORMAL_LABEL.word}</span>\n        <span>{NORMAL_LABEL.repeats}</span>\n      </button>\n      <button onClick={() => handleChoseDifficulty({ ...currentWord }, onChangeProgress, EASY)}>\n        <span>{EASY_LABEL.word}</span>\n        <span>{EASY_LABEL.repeats}</span>\n      </button>\n    </div>\n  );\n};\n\nSpacingRepeating.propTypes = {\n  progress: PropTypes.object,\n  currentWord: PropTypes.object,\n  onChangeProgress: PropTypes.func,\n};\n\nexport default SpacingRepeating;\n","import SpacingRepeating from './SpacingRepeating.jsx';\n\nexport default SpacingRepeating;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport StatusBar from '../StatusBar';\nimport SideBar from '../SideBar';\nimport Word from '../Word';\nimport WordExtraInfo from '../WordExtraInfo';\nimport SpacingRepeating from '../SpacingRepeating';\nimport { initialProgressObject } from '../../helpers/settings';\n\nconst WordCard = ({\n  currentWord,\n  // isLogged,\n  currentInput,\n  progress,\n  textExample,\n  textExampleTranslate,\n  isShownTranslation,\n  wordCount,\n  totalWords,\n  isShownComplicatedButton,\n  image,\n  isShownAnswerButton,\n  isShownImageAssociation,\n  word,\n  wordTranslate,\n  transcription,\n  textMeaning,\n  textMeaningTranslate,\n  isShownTranscription,\n  isShownExampleSentence,\n  isShownMeaning,\n  onNextWord,\n  onPrevWord,\n  onChangeProgress,\n  onPlayAudio,\n}) => (\n  <div>\n      <div>\n        <StatusBar\n          progress={progress}\n          onChangeProgress={onChangeProgress}\n          currentWord={currentWord}\n          wordCount={wordCount}\n          totalWords={totalWords}\n          isShownComplicatedButton={isShownComplicatedButton}\n        />\n        <Word\n          progress={progress}\n          textExample={textExample}\n          textExampleTranslate={textExampleTranslate}\n          isShownTranslation={isShownTranslation}\n          onChangeProgress={onChangeProgress}\n          onPlayAudio={onPlayAudio}\n        />\n        <WordExtraInfo\n          progress={progress}\n          word={word}\n          wordTranslate={wordTranslate}\n          transcription={transcription}\n          textMeaning={textMeaning}\n          textMeaningTranslate={textMeaningTranslate}\n          isShownTranscription={isShownTranscription}\n          isShownExampleSentence={isShownExampleSentence}\n          isShownMeaning={isShownMeaning}\n          onPlayAudio={onPlayAudio}\n        />\n        {(progress.isGuessed && !progress.isDifficultChosen)\n          && <SpacingRepeating\n            progress={progress}\n            currentWord={currentWord}\n            onChangeProgress={onChangeProgress}\n            />\n        }\n      </div>\n      <div>\n        <SideBar\n          progress={progress}\n          currentInput={currentInput}\n          word={word}\n          image={image}\n          isShownAnswerButton={isShownAnswerButton}\n          isShownImageAssociation={isShownImageAssociation}\n          onNextWord={onNextWord}\n          onPrevWord={onPrevWord}\n          onChangeProgress={onChangeProgress}\n        />\n      </div>\n  </div>\n);\n\nWordCard.propTypes = {\n  currentWord: PropTypes.object,\n  isLogged: PropTypes.bool,\n  currentInput: PropTypes.string,\n  progress: PropTypes.object,\n  textExampleTranslate: PropTypes.string,\n  textExample: PropTypes.object,\n  isShownTranslation: PropTypes.bool,\n  wordCount: PropTypes.number,\n  totalWords: PropTypes.number,\n  isShownComplicatedButton: PropTypes.bool,\n  word: PropTypes.string,\n  wordTranslate: PropTypes.string,\n  image: PropTypes.string,\n  isShownAnswerButton: PropTypes.bool,\n  isShownImageAssociation: PropTypes.bool,\n  transcription: PropTypes.string,\n  textMeaning: PropTypes.object,\n  textMeaningTranslate: PropTypes.string,\n  isShownTranscription: PropTypes.bool,\n  isShownExampleSentence: PropTypes.bool,\n  isShownMeaning: PropTypes.bool,\n  onNextWord: PropTypes.func,\n  onPrevWord: PropTypes.func,\n  onChangeProgress: PropTypes.func,\n  onPlayAudio: PropTypes.func,\n};\n\nWordCard.defaultProps = {\n  currentWord: {},\n  isLogged: false,\n  currentInput: '',\n  progress: initialProgressObject,\n  textExampleTranslate: '',\n  textExample: {},\n  isShownTranslation: true,\n  wordCount: 0,\n  totalWords: 0,\n  isShownComplicatedButton: true,\n  image: '',\n  isShownAnswerButton: true,\n  isShownImageAssociation: true,\n  word: '',\n  wordTranslate: '',\n  transcription: '',\n  textMeaning: {},\n  textMeaningTranslate: '',\n  isShownTranscription: true,\n  isShownExampleSentence: true,\n  isShownMeaning: true,\n  onNextWord: () => {},\n  onPrevWord: () => {},\n  onChangeProgress: () => {},\n  onPlayAudio: () => {},\n};\n\nexport default WordCard;\n","import WordCard from './WordCard.jsx';\n\nexport default WordCard;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Header from './Views/Header';\nimport WordCard from './Views/WordCard';\nimport * as settings from './helpers/settings';\nimport {\n  extractEmphasizedWord,\n  getSessionProgress,\n  setSessionProgress,\n  clearSessionProgress,\n  checkSessionProgress,\n  playAudios,\n} from './helpers';\nimport {\n  getDiffAndCoplicatedInProgress,\n} from '../../../helpers/wordsService';\nimport { localStorageItems } from '../../../helpers/constants';\n\nexport default class LearnWords extends Component {\n  state = {\n    wordCount: 0,\n    totalWords: 0,\n    isAutoPlay: true,\n    progress: [],\n    isPlaying: false,\n    isLogged: false,\n    token: '',\n    userId: '',\n    audio: null,\n    isFetching: false,\n    category: 'all',\n  };\n\n  componentDidMount() {\n    const { data } = this.props;\n    const { totalWords } = this.state;\n    const { initialProgressObject } = settings;\n    const learnSessionProgress = getSessionProgress();\n    let progress = [];\n    if (totalWords === 0) {\n      if (learnSessionProgress?.length) {\n        progress = learnSessionProgress;\n      } else {\n        progress = getDiffAndCoplicatedInProgress(data, initialProgressObject);\n      }\n      this.setState({\n        totalWords: data.length,\n        progress,\n      });\n    }\n    this.checkForLoggedUser();\n  }\n\n  toggleAutoPlay = () => {\n    this.setState((state) => ({\n      isAutoPlay: !state.isAutoPlay,\n    }));\n  }\n\n  toggleCategory = ({ target: { value } }) => {\n    this.setState({\n      category: value,\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.progress !== prevState.progress) {\n      const { progress } = this.state;\n      setSessionProgress(progress);\n      this.checkForEndOfGame();\n    }\n  }\n\n  toggleCategory = ({ target: { value } }) => {\n    this.setState({\n      category: value,\n    });\n  }\n\n  checkForLoggedUser = () => {\n    if (localStorage?.rslangUserId) {\n      const userId = localStorage.getItem(localStorageItems.userId);\n      const token = localStorage.getItem(localStorageItems.token);\n      this.setState({\n        isLogged: true,\n        token,\n        userId,\n      });\n    }\n  }\n\n  checkForEndOfGame = () => {\n    const { progress, totalWords } = this.state;\n    if (!checkSessionProgress(progress) && totalWords) {\n      clearSessionProgress();\n      // TODO: add modal pop-up with short stats\n    }\n  }\n\n  playAudio = (audioName) => {\n    const { data } = this.props;\n    const { wordCount, isAutoPlay } = this.state;\n    if (audioName) {\n      playAudios(data[wordCount][audioName]);\n    } else if (isAutoPlay) {\n      const { audio, audioMeaning, audioExample } = data[wordCount];\n      playAudios([audio, audioMeaning, audioExample]);\n    }\n  }\n\n  handleNextWord = () => {\n    const { data } = this.props;\n    const { wordCount } = this.state;\n    if (wordCount + 1 === data.length) {\n      this.handleEndOfCards();\n    } else {\n      this.setState({\n        wordCount: wordCount + 1,\n      });\n    }\n  }\n\n  handlePrevWord = () => {\n    const { wordCount } = this.state;\n    if (wordCount) {\n      this.setState({\n        wordCount: wordCount - 1,\n      });\n    }\n  }\n\n  handleChangeProgress = (updated) => {\n    const { progress, wordCount } = this.state;\n    this.setState({\n      progress: progress.map((el, i) => (i === wordCount ? { ...el, ...updated } : el)),\n    });\n  }\n\n  handleEndOfCards = () => {\n    // TODO: maube here will be nice to add some info pop up\n    console.log('end of cards');\n  }\n\n  render() {\n    const { data } = this.props;\n    const {\n      wordCount,\n      totalWords,\n      progress,\n      currentInput,\n      isLogged,\n    } = this.state;\n    const currentWord = data[wordCount];\n    const {\n      textExample,\n      textExampleTranslate,\n      image,\n      word,\n      wordTranslate,\n      transcription,\n      textMeaning,\n      textMeaningTranslate,\n    } = currentWord;\n    const {\n      isShownComplicatedButton,\n      isShownAnswerButton,\n      isShownImageAssociation,\n      isShownTranslation,\n      isShownTranscription,\n      isShownExampleSentence,\n      isShownMeaning,\n      categoriesSelect,\n    } = settings;\n    const textExampleSentence = extractEmphasizedWord(textExample, 'b');\n    const textMeaningSentence = extractEmphasizedWord(textMeaning, 'i');\n    return (\n      <div>\n        <Header\n          categoriesSelect={categoriesSelect}\n          onToggleAutoPlay={this.toggleAutoPlay}\n          onToggleCategory={this.toggleCategory}\n        />\n        <WordCard\n          currentWord={currentWord}\n          isLogged={isLogged}\n          currentInput={currentInput}\n          progress={progress[wordCount]}\n          wordCount={wordCount + 1}\n          totalWords={totalWords}\n          textExample={textExampleSentence}\n          textExampleTranslate={textExampleTranslate}\n          image={image}\n          word={word}\n          wordTranslate={wordTranslate}\n          transcription={transcription}\n          textMeaning={textMeaningSentence}\n          textMeaningTranslate={textMeaningTranslate}\n          isShownComplicatedButton={isShownComplicatedButton}\n          isShownAnswerButton={isShownAnswerButton}\n          isShownImageAssociation={isShownImageAssociation}\n          isShownTranslation={isShownTranslation}\n          isShownTranscription={isShownTranscription}\n          isShownExampleSentence={isShownExampleSentence}\n          isShownMeaning={isShownMeaning}\n          onNextWord={this.handleNextWord}\n          onPrevWord={this.handlePrevWord}\n          onChangeProgress={this.handleChangeProgress}\n          onPlayAudio={this.playAudio}\n        />\n      </div>\n    );\n  }\n}\n\nLearnWords.propTypes = {\n  data: PropTypes.array,\n};\n\nLearnWords.defaultProps = {\n  data: [],\n};\n","import React from 'react';\nimport LearnWordsView from './LearnWords.jsx';\nimport response from './helpers/response.json';\n\nconst LearnWords = () => <LearnWordsView data={response} />\n\nexport default LearnWords;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid, Slider, Input } from '@material-ui/core';\n\nconst useStyles = makeStyles({\n  root: {\n    width: 410,\n    padding: '0px',\n  },\n  colorSecondary: {\n    color: '#000',\n  },\n  input: {\n    width: 42,\n    fontSize: '2rem',\n  },\n});\n\nconst SliderView = () => {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(30);\n\n  const handleSliderChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const handleInputChange = (event) => {\n    setValue(event.target.value === '' ? '' : Number(event.target.value));\n  };\n\n  const handleBlur = () => {\n    if (value < 0) {\n      setValue(0);\n    } else if (value > 100) {\n      setValue(100);\n    }\n  };\n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={2} alignItems=\"center\">\n        <Grid item xs>\n          <Slider\n            value={typeof value === 'number' ? value : 0}\n            onChange={handleSliderChange}\n            aria-labelledby=\"input-slider\"\n          />\n        </Grid>\n        <Grid item>\n          <Input\n            className={classes.input}\n            value={value}\n            margin=\"dense\"\n            onChange={handleInputChange}\n            onBlur={handleBlur}\n            inputProps={{\n              step: 10,\n              min: 0,\n              max: 100,\n              type: 'number',\n              'aria-labelledby': 'input-slider',\n            }}\n          />\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default SliderView;\n","import Slider from './SliderView.jsx';\n\nexport default Slider;\n","import LinearProgress from './LinearProgressView.jsx';\n\nexport default LinearProgress;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nconst LinearProgressView = ({ done = 25, all = 100, className = '' }) => {\n  const filledWidth = Math.round((done / all) * 100);\n  const classes = classNames({\n    'linear-progress': true,\n    [className]: true,\n  });\n\n  return (\n    <div className={classes}>\n      <div style={ { width: `${filledWidth}%` } } className=\"linear-progress__filled\" />\n    </div>\n  );\n};\n\nLinearProgressView.propTypes = {\n  done: PropTypes.number,\n  all: PropTypes.number,\n  className: PropTypes.string,\n};\n\nexport default LinearProgressView;\n","import LearnWordCardPreview from './LearnWordCardView.jsx';\n\nexport default LearnWordCardPreview;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport classNames from 'classnames';\n\nimport LinearProgress from '../../basicComponents/LinearProgress';\n\nconst LearnWordCardView = ({ previewSettings }) => {\n  const {\n    translation: translationVisibility,\n    complicatedButton: complicatedButtonVisibility,\n    imageAssociatation: imageAssociatationVisibility,\n    meaning: meaningVisibility,\n    transcription: transcriptionVisibility,\n    showAnswerButton: showAnswerButtonVisibility,\n    exampleSentence: exampleSentenceVisibility,\n  } = previewSettings;\n\n  const translationItemClasses = classNames({\n    'learn-word-card-info__sentence-translation': true,\n    hidden: !translationVisibility,\n  });\n  const complicatedButtonItemClasses = classNames({\n    'learn-word-status-settings__complicated': true,\n    hidden: !complicatedButtonVisibility,\n  });\n  const imageAssociatationItemClasses = classNames({\n    'learn-word-card-control': true,\n    'without-bg': !imageAssociatationVisibility,\n  });\n  const meaningItemClasses = classNames({\n    'learn-word-card-info__explanation': true,\n    hidden: !meaningVisibility,\n  });\n  const transcriptionItemClasses = classNames({\n    'target-learn-word-container__transcription': true,\n    hidden: !transcriptionVisibility,\n  });\n  const showAnswerButtonItemClasses = classNames({\n    'learn-word-card-control__show-answer-button': true,\n    hidden: !showAnswerButtonVisibility,\n  });\n  const exampleSentenceItemClasses = classNames({\n    'learn-word-card-info__example-sentence': true,\n    hidden: !exampleSentenceVisibility,\n  });\n\n  return (\n    <div className=\"learn-word-card-wrapper\">\n      <LinearProgress />\n      <div className=\"learn-word-card\">\n        <div className=\"learn-word-card-info\">\n          <div className=\"learn-word-card-general-info\">\n            <p className=\"learn-word-card-general-info__all-done\">15/60</p>\n            <div className=\"learn-word-status-settings\">\n              <div className={complicatedButtonItemClasses}><span></span>Complicated</div>\n              <div className=\"learn-word-status-settings__remove\"><span></span>Remove</div>\n            </div>\n          </div>\n          <p className=\"learn-word-card-sentence\">\n            I <span className=\"learn-word-card-sentence__target-word\">run</span> every morning\n          </p>\n          <p className={translationItemClasses}>Я бегаю каждое утро</p>\n          <div className=\"line learn-word-card-info__line\"></div>\n          <div className=\"target-learn-word-container\">\n            <p className=\"target-learn-word-container__target-word\">run</p>\n            <p className={transcriptionItemClasses}>/rən/</p>\n          </div>\n          <p className={meaningItemClasses}>Move at a speed faster than a walk</p>\n          <p className={exampleSentenceItemClasses}>It would have been easier to run off</p>\n        </div>\n        <div className={imageAssociatationItemClasses}>\n          <div className={showAnswerButtonItemClasses}>Show answer</div>\n          <div className=\"flip-buttons-container\">\n            <div className=\"flip-buttons-container__prev-button\">← prev</div>\n            <div className=\"flip-buttons-container__next-button\">next →</div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nLearnWordCardView.propTypes = {\n  previewSettings: PropTypes.object,\n};\n\nconst mapStateToProps = ({ learnCardPreviewSettings }) => (\n  {\n    previewSettings: learnCardPreviewSettings,\n  }\n);\n\nexport default connect(mapStateToProps)(LearnWordCardView);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nconst CheckboxView = ({ checked = false, onChange, className = '' }) => {\n  const classes = classNames({\n    checkbox: true,\n    [className]: true,\n  });\n\n  return (\n    <input\n      onChange={onChange}\n      defaultChecked={checked}\n      className={classes}\n      type=\"checkbox\"/>\n  );\n};\n\nCheckboxView.propTypes = {\n  checked: PropTypes.bool,\n  onChange: PropTypes.func,\n  className: PropTypes.string,\n};\n\nexport default CheckboxView;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { learnCardPreviewSettingsChanged } from '../../redux/actions';\nimport CheckboxView from './CheckboxView.jsx';\n\nconst Checkbox = (props) => {\n  const { previewSettingName = null, settingChanged } = props;\n  const onChange = previewSettingName && settingChanged.bind(null, previewSettingName);\n  return <CheckboxView {...props} onChange={onChange} />;\n};\n\nCheckbox.propTypes = {\n  previewSettingName: PropTypes.string,\n  settingChanged: PropTypes.func,\n};\n\nconst mapDispatchToProps = (dispatch) => (\n  {\n    settingChanged: (previewSettingName) => {\n      dispatch(\n        learnCardPreviewSettingsChanged(previewSettingName),\n      );\n    },\n  }\n);\n\nexport default connect(undefined, mapDispatchToProps)(Checkbox);\n","const learnCardPreviewSettingsChanged = (changedSetting) => (\n  {\n    type: 'LEARN_CARD_PREVIEW_SETTINGS_CHANGED',\n    payload: changedSetting,\n  }\n);\n\nexport {\n  learnCardPreviewSettingsChanged,\n};\n","import SettingsPage from './SettingsPage.jsx';\n\nexport default SettingsPage;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport Slider from '../../../basicComponents/Slider';\nimport LearnWordCardPreview from '../../LearnWordCardPreview';\nimport Checkbox from '../../../basicComponents/Checkbox';\n\nimport { pagesData } from '../../../helpers/constants'\n\nconst SettingsPage = (props) => {\n  const {\n    translation: translationVisibility,\n    complicatedButton: complicatedButtonVisibility,\n    imageAssociatation: imageAssociatationVisibility,\n    meaning: meaningVisibility,\n    transcription: transcriptionVisibility,\n    showAnswerButton: showAnswerButtonVisibility,\n    exampleSentence: exampleSentenceVisibility,\n  } = props.previewSettings;\n  return (\n    <section className=\"settings-page\">\n      <h2 className=\"settings_page__title\">{pagesData.settings.title}</h2>\n      <div className=\"words-settings\">\n        <h4 className=\"words-settings__title\">Сколько слов учить в день</h4>\n        <div className=\"max-words-per-day-settings\">\n          <p className=\"max-words-per-day-settings__title\">Всего</p>\n          <Slider />\n        </div>\n        <div className=\"new-words-per-day-settings\">\n          <p className=\"new-words-per-day-settings__title\">Новых</p>\n          <Slider />\n        </div>\n      </div>\n      <div className=\"learn-card-preview\">\n        <h4 className=\"learn-card-preview__title\">Что показывать на карточке слова</h4>\n        <div className=\"preview-settings\">\n          <label className=\"preview-settings__setting translation\">\n            <Checkbox previewSettingName=\"translation\" checked={translationVisibility}/>Перевод\n          </label>\n          <label className=\"preview-settings__setting complicated-button\">\n            <Checkbox previewSettingName=\"complicatedButton\" checked={complicatedButtonVisibility}/>Кнопка «Сложные»\n          </label>\n          <label className=\"preview-settings__setting image-associatation\">\n            <Checkbox previewSettingName=\"imageAssociatation\" checked={imageAssociatationVisibility}/>Картинка для ассоциации\n          </label>\n          <label className=\"preview-settings__setting meaning\">\n            <Checkbox previewSettingName=\"meaning\" checked={meaningVisibility}/>Значение\n          </label>\n          <label className=\"preview-settings__setting transcription\">\n            <Checkbox previewSettingName=\"transcription\" checked={transcriptionVisibility}/>Транскрипция\n          </label>\n          <label className=\"preview-settings__setting show-answer-button\">\n            <Checkbox previewSettingName=\"showAnswerButton\" checked={showAnswerButtonVisibility}/>Кнопка «Показать ответ»\n          </label>\n          <label className=\"preview-settings__setting example-sentence\">\n            <Checkbox previewSettingName=\"exampleSentence\" checked={exampleSentenceVisibility}/>Пример предложения\n          </label>\n        </div>\n        <LearnWordCardPreview />\n      </div>\n    </section>\n  );\n};\n\nSettingsPage.propTypes = {\n  previewSettings: PropTypes.object,\n};\n\nconst mapStateToProps = ({ learnCardPreviewSettings }) => (\n  {\n    previewSettings: learnCardPreviewSettings,\n  }\n);\n\nexport default connect(mapStateToProps)(SettingsPage);\n","import StatisticsPage from './StatisticPage.jsx';\n\nexport default StatisticsPage;\n","import React from 'react';\nimport {pagesData} from \"../../../helpers/constants\";\n\nconst StatisticsPage = () => (\n  <div>\n    <h1>{pagesData.statistics.title}</h1>\n    <ul>\n      <li className=\"text\">1</li>\n      <li className=\"text\">2</li>\n      <li className=\"text\">3</li>\n    </ul>\n  </div>\n);\nexport default StatisticsPage;\n","import PromoPage from './PromoPage.jsx';\n\nexport default PromoPage;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Button from '../../../basicComponents/Button';\nimport {pagesData} from \"../../../helpers/constants\";\n\nconst PromoPageView = () => (\n    <div className=\"promo-page\">\n      <section className=\"demonstration-container\">\n        <p className=\"demonstration-container__title\">Что это и почему понравится пользователю</p>\n        <video className=\"demonstration-container__video\" controls>\n          <source src=\"https://www.w3schools.com/html/mov_bbb.mp4\"></source>\n          Извините, ваш браузер не поддерживает встроенное видео\n        </video>\n        <Link to={ pagesData.learnWords.path }>\n          <Button className=\"demonstration-container__start-button\" value=\"Учите английский с нами\" />\n        </Link>\n      </section>\n    </div>\n);\n\nexport default PromoPageView;\n","import GameCard from './GameCardView.jsx';\n\nexport default GameCard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nimport Button from '../../basicComponents/Button';\n\nconst GameCardView = ({ data: { title, description, path } }) => (\n    <div className=\"game-card\">\n      <h5 className=\"game-card__title\">{title}</h5>\n      <p className=\"game-card__description\">{description}</p>\n      <Link className=\"link-btn game-card__link-button-container\" to={`/${path}`}>\n        <Button type=\"secondary\" value={`${title} →`}/>\n      </Link>\n    </div>\n);\n\nGameCardView.propTypes = {\n  data: PropTypes.object,\n};\n\nexport default GameCardView;\n","import React from 'react';\n\nimport { gamesData } from '../../../helpers/constants';\n\nimport GameCard from '../../GameCard';\n\nconst renderGames = (data, index) => <GameCard data={data} key={index} />;\n\nconst PlayGamesPage = () => (\n    <section className=\"play-games\">\n      <h2 className=\"play-games__title\">Выберите игру</h2>\n      <div className=\"games-cards-container\">\n        {\n          Object.values(gamesData).map(renderGames)\n        }\n      </div>\n    </section>\n);\n\nexport default PlayGamesPage;\n","import PlayGamesPage from './PlayGamesPage.jsx';\n\nexport default PlayGamesPage;\n","import React from 'react';\n\nconst WordCardView = ( { wordData, playSound, restoreWord } ) => {\n  const onPlaySound = () => {\n    playSound();\n  }\n\n  const onRestoreWord = () => {\n    restoreWord(wordData.id);\n  }\n\n  const createMarkup = ( markup ) => {\n    return {__html: markup};\n  }\n\n  return (\n    <div className=\"word-card-container\">\n      <div className=\"word-card-preview-wrapper\">\n        <div className=\"word-card-preview\">\n          <img className=\"word-card-preview__img\" src = { wordData.image } alt=\"word\" />\n          <div className=\"word-card-main-info\">\n            <div className=\"target-word-wrapper\">\n              <p className=\"target-word-wrapper__word\">{ wordData.word }</p>\n              <p className=\"target-word-wrapper__translation\">{ wordData.wordTranslate }</p>\n            </div>\n            <button className=\"word-card-main-info__pronunciation-button\" onClick={ onPlaySound }></button>\n          </div>\n        </div>\n        <button className=\"word-card-preview-wrapper__restore-button\" onClick={ onRestoreWord }>Restore for learning</button>\n      </div>\n      <div className=\"word-card-additional-info\">\n        <p className=\"word-card-additional-info__transciption\">{`/ ${wordData.transcription} /`}</p>\n        <p className=\"word-card-additional-info__meaning\" dangerouslySetInnerHTML = { createMarkup(wordData.textMeaning) }></p>\n        <p className=\"word-card-additional-info__example-sentence\" dangerouslySetInnerHTML = { createMarkup(wordData.textExample) }></p>\n      </div>\n    </div>\n  )\n}\n\nexport default WordCardView;\n","import React from 'react';\nimport WordCardView from './WordCard.jsx';\n\nconst WordCard = ( { wordData } ) => {\n  const audio = new Audio( wordData.audioExample ) //mp3 URL from state\n\n  const playSound = () => {\n    audio.play();\n  }\n\n  const restoreWord = (id) => {\n    // TODO This function will change State\n  }\n\n  return (\n    <WordCardView \n      wordData = { wordData }\n      playSound = { playSound }\n      restoreWord = { restoreWord }\n    />\n  ) \n}\n\nexport default WordCard;\n","import React from 'react';\nimport WordCard from './WordCard';\nimport { pagesData } from \"../../../helpers/constants\";\n\nconst VocabularyView = ( { selectorOptions, changeVocabularyType, selectedOption, words } ) => {\n  const options = selectorOptions.map( ([ key, value ]) => <option value={ key } key={ key }> { value } </option> );\n  const cards = words.map( (word) => <WordCard wordData={ word } key={ word.id } />)\n\n  const onSelectorChange = ( e ) => {\n    e.persist();\n    changeVocabularyType( e );\n  };\n\n  return (\n    <div>\n      <h1>{pagesData.vocabulary.title}</h1>\n      <select className=\"vocabulary-selector\" onChange={ ( e ) => onSelectorChange( e ) }\n        value={ selectedOption } >\n        { options }\n      </select>\n      <div className=\"cards-container\"> { cards } </div>\n    </div>\n  )\n}\n\nexport default VocabularyView;\n","export const wordsData = [\n  {\n    id: '5e9f5ee35eb9e72bc21af70c',\n    group: 1,\n    page: 1,\n    word: 'anxious',\n    image: 'files/02_0621.jpg',\n    audio: 'files/02_0621.mp3',\n    audioMeaning: 'files/02_0621_meaning.mp3',\n    audioExample: 'files/02_0621_example.mp3',\n    textMeaning: '<i>Anxious</i> means feeling worried or nervous.',\n    textExample: 'She was <b>anxious</b> about not making her appointment on time.',\n    transcription: '[ǽŋkʃəs]',\n    textExampleTranslate: 'Она беспокоилась о том, чтобы не договориться о встрече вовремя',\n    textMeaningTranslate: 'Тревожно означает чувствовать себя обеспокоенным или нервным',\n    wordTranslate: 'озабоченный',\n    wordsPerExampleSentence: 10,\n  },\n  {\n    id: '5e9f5ee35eb9e72bc21af70d',\n    group: 1,\n    page: 1,\n    word: 'awful',\n    image: 'files/02_0622.jpg',\n    audio: 'files/02_0622.mp3',\n    audioMeaning: 'files/02_0622_meaning.mp3',\n    audioExample: 'files/02_0622_example.mp3',\n    textMeaning: 'An <i>awful</i> thing is very bad.',\n    textExample: 'Her performance last night was <b>awful</b>.',\n    transcription: '[ɔ́ːfəl]',\n    textExampleTranslate: 'Ее выступление прошлой ночью было ужасным',\n    textMeaningTranslate: 'Ужасно очень плохо',\n    wordTranslate: 'ужасный',\n    wordsPerExampleSentence: 6,\n  },\n  {\n    id: '5e9f5ee35eb9e72bc21af70e',\n    group: 1,\n    page: 1,\n    word: 'consist',\n    image: 'files/02_0623.jpg',\n    audio: 'files/02_0623.mp3',\n    audioMeaning: 'files/02_0623_meaning.mp3',\n    audioExample: 'files/02_0623_example.mp3',\n    textMeaning: 'To <i>consist</i> of certain is to be made of parts or things them.',\n    textExample: 'Today’s choices for lunch <b>consisted</b> of pizza, hamburgers, and hot dogs.',\n    transcription: '[kənsíst]',\n    textExampleTranslate: 'Сегодняшний выбор на обед состоял из пиццы, гамбургеров и хот-догов',\n    textMeaningTranslate: 'Быть состоящим из определенного означает быть составленным из частей или вещей из них',\n    wordTranslate: 'состоят',\n    wordsPerExampleSentence: 11,\n  },\n  {\n    id: '5e9f5ee35eb9e72bc21af70f',\n    group: 1,\n    page: 1,\n    word: 'desire',\n    image: 'files/02_0624.jpg',\n    audio: 'files/02_0624.mp3',\n    audioMeaning: 'files/02_0624_meaning.mp3',\n    audioExample: 'files/02_0624_example.mp3',\n    textMeaning: 'To <i>desire</i> is to want something.',\n    textExample: 'My sister <b>desires</b> a big house and lots of money.',\n    transcription: '[dizáiər]',\n    textExampleTranslate: 'Моя сестра хочет большой дом и много денег',\n    textMeaningTranslate: 'Желать - значит хотеть чего-то',\n    wordTranslate: 'желание',\n    wordsPerExampleSentence: 10,\n  },\n  {\n    id: '5e9f5ee35eb9e72bc21af710',\n    group: 1,\n    page: 1,\n    word: 'eager',\n    image: 'files/02_0625.jpg',\n    audio: 'files/02_0625.mp3',\n    audioMeaning: 'files/02_0625_meaning.mp3',\n    audioExample: 'files/02_0625_example.mp3',\n    textMeaning: '<i>Eager</i> shows excitement about something.',\n    textExample: 'The man was <b>eager</b> to talk about the good news.',\n    transcription: '[íːgər]',\n    textExampleTranslate: 'Человек стремился говорить о хороших новостях',\n    textMeaningTranslate: 'Стремление показывает волнение о чем-то',\n    wordTranslate: 'нетерпеливый',\n    wordsPerExampleSentence: 10,\n  },\n];\n","import React from 'react';\nimport VocabularyView from './VocabularyPage.jsx';\nimport { selectorOptions } from '../../../helpers/constants';\nimport { wordsData } from '../../../helpers/wordsData';\n\nconst VocabularyPage = ( props ) => {\n\n  const changeVocabularyType = (e) => {\n    //TODO: This function will change vocabulary type in State\n  }\n\n  return (\n      <VocabularyView\n        words = { wordsData }\n        selectorOptions = { selectorOptions }\n        changeVocabularyType = { changeVocabularyType }\n        selectedOption = { \"removed\" } // TODO: replace selectedOption with state data\n      />\n  )\n}\n\n\nexport default VocabularyPage;\n","import Input from './InputView.jsx';\n\nexport default Input;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Input from '@material-ui/core/Input';\n\nconst InputView = ({ placeholder = 'Type', className = '' }) => (\n  <Input\n    className={className}\n    classes={{ input: 'input' }}\n    placeholder={placeholder}\n  />\n);\n\nInputView.propTypes = {\n  className: PropTypes.string,\n  placeholder: PropTypes.string,\n};\n\nexport default InputView;\n","import React, { Component } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Input from '../../../basicComponents/Input';\nimport Button from '../../../basicComponents/Button';\nimport { auth } from '../../../redux/actions/auth';\n\nimport {\n  pagesData,\n  text,\n} from '../../../helpers/constants';\n\nconst initialState = {\n  email: '',\n  password: '',\n  repeatPass: '',\n  userId: '',\n  emailValid: true,\n};\n\nclass SignInPage extends Component {\n  state = { ...initialState };\n\n  isEmailValid = (mail) => {\n    // eslint-disable-next-line no-control-regex\n    const reg = /^([a-zA-Z0-9_\\-.]+)@([a-zA-Z0-9_\\-.]+)\\.([a-zA-Z]{2,5})$/g;\n    this.setState({ emailValid: reg.test(String(mail)) });\n  };\n\n  onChangeEmail = (e) => {\n    this.setState({ email: e.target.value });\n    this.isEmailValid(e.target.value);\n  };\n\n  onChangePass = (e) => {\n    this.setState({ password: e.target.value });\n  };\n\n  onSubmitForm = async (event) => {\n    const { email, password } = this.state;\n    try {\n      event.preventDefault();\n      this.props.auth(email, password);\n    } catch (e) {\n      console.log(e);\n      // TODO handle error for showing user\n    }\n  };\n\n  render() {\n    const { emailValid } = this.state;\n    const { token } = this.props;\n    if (token) {\n      return (<Redirect to={`/${pagesData.learnWords.path}`} />);\n    }\n    return (\n      <section className=\"sign-in-page\">\n        <h1>{ pagesData.signIn.title }</h1>\n        <form className=\"sign-in-form\" onSubmit={this.onSubmitForm}>\n          <Input\n            error={!emailValid}\n            placeholder={ text.ru.email }\n            className=\"sign-in-form__email\"\n            onChange={this.onChangeEmail}\n          />\n          <Input\n            type=\"password\"\n            placeholder={ text.ru.password }\n            className=\"sign-in-form__password\"\n            onChange={this.onChangePass}\n          />\n          <Button value={ pagesData.signIn.title } className=\"sign-in-form__button\" />\n        </form>\n        <p className=\"sign-in-page-additional-info\">\n          { text.ru.firstTimeOrForgotPassword } <Link\n          className=\"sign-in-page-additional-info__sign-up-link\"\n          to={ `/${pagesData.register.path}` }\n        >\n          { pagesData.register.title }\n        </Link>\n        </p>\n      </section>\n    );\n  }\n}\nfunction mapDispatchToProps(dispatch) {\n  return {\n    auth: (email, password) => dispatch(auth(email, password)),\n  };\n}\nfunction mapStateToProps(state) {\n  return {\n    token: state.auth.token,\n  };\n}\n\nSignInPage.propTypes = {\n  token: PropTypes.string,\n  auth: PropTypes.func,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignInPage);\n","import SignInPage from './SignInPage.jsx';\n\nexport default SignInPage;\n","import axios from 'axios';\nimport { connect } from 'react-redux';\nimport {\n  apiLinks,\n  localStorageItems,\n} from '../constants';\n\nconst getToken = (props) => props?.token;\n\nexport const axiosuser = axios.create({\n  baseURL: apiLinks.base,\n  headers: {\n    Authorization: `Bearer ${localStorage.getItem(localStorageItems.token) || getToken()}`,\n    Accept: 'application/json',\n    'Content-Type': 'application/json',\n  },\n});\n\nfunction mapStateToProps(state) {\n  return {\n    token: state.auth.token,\n    userId: state.auth.userId,\n  };\n}\n\nexport default connect(mapStateToProps)(getToken);\n","import { axiosuser } from './axiosUser';\n\nimport {\n  apiLinks,\n  text,\n  localStorageItems,\n} from '../constants';\n\nimport { getTokenLifetimeInMs } from '../functions';\n\nconst getAuthHeader = () => ({\n  headers: {\n    Authorization: `Bearer ${localStorage.getItem(localStorageItems.token)}`,\n    Accept: 'application/json',\n    'Content-Type': 'application/json',\n  },\n});\n\nexport default class UserService {\n  registerUser = async (user) => {\n    try {\n      const rawResponse = await fetch(`${apiLinks.base}users`, {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(user),\n      });\n      return rawResponse.json();\n    } catch (e) {\n      console.error(e);\n      // TODO handle error for showing user\n      return false;\n    }\n  };\n\n  loginUser = async ({ email, password }) => {\n    let result;\n    try {\n      const authData = { email, password };\n      const response = await axiosuser.post('signin', authData);\n      const refreshTokenDate = new Date(new Date().getTime() + getTokenLifetimeInMs());\n      localStorage.setItem(localStorageItems.token, response.data.token);\n      localStorage.setItem(localStorageItems.userId, response.data.userId);\n      localStorage.setItem(localStorageItems.refreshTokenDate, refreshTokenDate);\n      result = response.data;\n    } catch (e) {\n      // TODO Delete alert, add error message below the H1 title\n      alert(text.ru.userUndefined);\n    }\n    return result;\n  }\n\n  getUserById = async (userId) => {\n    const response = await axiosuser.get(`users/${userId}`);\n    return response.data;\n  }\n\n  updateUserById = async (userId) => {\n    try {\n      await fetch(`${apiLinks.base}users/${userId}`, {\n        method: 'PUT',\n        withCredentials: true,\n        ...getAuthHeader(),\n      });\n    } catch (e) {\n      console.error(e);\n      // TODO: implement errors' handler\n    }\n  }\n\n  createUserWord = async ({ userId, wordId, word }) => {\n    try {\n      await fetch(`${apiLinks.base}users/${userId}/words/${wordId}`, {\n        method: 'POST',\n        withCredentials: true,\n        ...getAuthHeader(),\n        body: JSON.stringify(word),\n      });\n    } catch (e) {\n      console.error(e);\n      // TODO: implement errors' handler\n    }\n  };\n\n  getUserWordById = async ({ userId, wordId }) => {\n    const rawResponse = axiosuser.get(`users/${userId}/words/${wordId}`);\n    const content = await rawResponse;\n    return content.data;\n  };\n\n  updateUserWordById = async ({ userId, wordId, word }) => {\n    try {\n      await fetch(`${apiLinks.base}users/${userId}/words/${wordId}`, {\n        method: 'PUT',\n        withCredentials: true,\n        ...getAuthHeader(),\n        body: JSON.stringify(word),\n      });\n    } catch (e) {\n      console.error(e);\n      // TODO: implement errors' handler\n    }\n  };\n\n  deleteUserWordById = async ({ userId, wordId }) => {\n    await axiosuser.delete(`users/${userId}/words/${wordId}`);\n  };\n\n  getUserAllWords = async (userId) => {\n    const rawResponse = axiosuser.get(`users/${userId}/words`);\n    const content = await rawResponse;\n    return content.data;\n  };\n\n  getAllUserWordsArray = async (userId) => {\n    const result = [];\n    const allWords = await this.getUserAllWords(userId);\n    if (allWords.length) {\n      allWords.forEach((wordCard) => {\n        result.push(wordCard.word);\n      });\n    }\n    return result;\n  }\n\n  getUserWordsNoRemoved = async (userId) => {\n    const result = [];\n    const getAllWords = await this.getUserAllWords(userId);\n    if (getAllWords.length) {\n      getAllWords.forEach((wordCard) => {\n        if (!wordCard.optional.removed) {\n          result.push(wordCard.word);\n        }\n      });\n    }\n    return result;\n  }\n\n  // TODO need method: get words without duplicates\n\n  createUserStatistics = async ({ userId, option }) => {\n    try {\n      await fetch(`${apiLinks.base}users/${userId}/statistics`, {\n        method: 'PUT',\n        withCredentials: true,\n        ...getAuthHeader(),\n        body: JSON.stringify(option),\n      });\n    } catch (e) {\n      console.error(e);\n      // TODO: implement errors' handler\n    }\n  };\n\n  getUserStatistics = async (userId) => {\n    const rawResponse = axiosuser.get(`users/${userId}/statistics`);\n    const content = await rawResponse;\n    Object.keys(content.data.optional).forEach((x) => {\n      content.data.optional[x] = JSON.parse(content.data.optional[x]);\n    });\n    return content.data;\n  };\n\n  createUserSettings = async ({ userId, option }) => {\n    try {\n      await fetch(`${apiLinks.base}users/${userId}/settings`, {\n        method: 'PUT',\n        withCredentials: true,\n        ...getAuthHeader(),\n        body: JSON.stringify(option),\n      });\n    } catch (e) {\n      console.error(e);\n      // TODO: implement errors' handler\n    }\n  };\n\n  getUserSettings = async (userId) => {\n    const rawResponse = axiosuser.get(`users/${userId}/settings`);\n    const content = await rawResponse;\n    Object.keys(content.data.optional).forEach((x) => {\n      content.data.optional[x] = JSON.parse(content.data.optional[x]);\n    });\n    return content.data;\n  };\n\n  getUserWordsFilter = async ({ userId, token, filter }) => {\n    const url = new URL(apiLinks.base);\n    url.pathname = `users/${userId}/aggregatedWords`;\n    url.searchParams.append('filter', JSON.stringify(filter));\n    const headers = new Headers();\n    headers.append('Accept', 'application/json');\n    headers.append('Authorization', `Bearer ${token}`);\n    const result = await fetch(url, { headers });\n    const data = await result.json();\n    return data[0];\n  }\n}\n","import React, { Component } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport Input from '../../../basicComponents/Input';\nimport Button from '../../../basicComponents/Button';\nimport UserService from '../../../helpers/userService';\nimport { text, pagesData } from '../../../helpers/constants';\n\nconst userService = new UserService();\n\nconst initialState = {\n  email: '',\n  name: '',\n  password: '',\n  repeatPass: '',\n  userId: '',\n  emailValid: true,\n  nickValid: true,\n  passValid: true,\n  passRepeatValid: true,\n  formValid: false,\n};\n\nclass SignUpPage extends Component {\n  state = { ...initialState };\n\n  isPassValid = (pass) => {\n    const reg = /(?=.*[0-9])(?=.*[!@#$%^&*])(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z!@#$%^&*]{8,}/g;\n    this.setState({ passValid: reg.test(String(pass)) });\n  };\n\n  isNickValid = (nick) => {\n    const reg = /^[a-zA-Z0-9._-]{3,15}$/g;\n    this.setState({ nickValid: reg.test(String(nick)) });\n  };\n\n  isEmailValid = (mail) => {\n    const reg = /^([a-zA-Z0-9_\\-.]+)@([a-zA-Z0-9_\\-.]+)\\.([a-zA-Z]{2,5})$/g;\n    this.setState({ emailValid: reg.test(String(mail)) });\n  };\n\n  isFormValid = () => {\n    const {\n      emailValid, passValid, passRepeatValid, nickValid,\n    } = this.state;\n    return emailValid && passValid && passRepeatValid && nickValid;\n  };\n\n  onChangeEmail = (e) => {\n    this.setState({ email: e.target.value });\n    this.isEmailValid(e.target.value);\n  };\n\n  onChangeNick = (e) => {\n    this.setState({ name: e.target.value });\n    this.isNickValid(e.target.value);\n  };\n\n  onChangePass = (e) => {\n    this.setState({ password: e.target.value });\n    this.isPassValid(e.target.value);\n  };\n\n  onChangeRepeatPass = (e) => {\n    this.isFormValid();\n    this.setState({ repeatPass: e.target.value });\n    if (this.state.password !== e.target.value) {\n      this.setState({ passRepeatValid: false });\n    } else { this.setState({ passRepeatValid: true }); }\n  };\n\n  onSubmitForm = async (e) => {\n    const {\n      name, email, password, repeatPass,\n    } = this.state;\n    e.preventDefault();\n    if (password === repeatPass) {\n      const data = await userService.registerUser({ name, email, password });\n      this.setState({ userId: data.id });\n    }\n  };\n\n  render() {\n    const {\n      nickValid, emailValid, passValid, passRepeatValid, userId,\n    } = this.state;\n    if (userId) {\n      return (<Redirect to={'/sign-in'} />);\n    }\n    return (\n      <section className=\"sign-up-page\">\n        <h1>{ pagesData.register.title }</h1>\n        <form className=\"sign-up-form\" onSubmit={this.onSubmitForm}>\n          <Input\n            required\n            error={!nickValid}\n            placeholder={ text.ru.nickname }\n            className=\"sign-up-form__email\"\n            onChange={this.onChangeNick} />\n          <Input\n            required\n            error={!emailValid}\n            placeholder={ text.ru.email }\n            className=\"sign-up-form__email\"\n            onChange={this.onChangeEmail} />\n          <Input\n            required\n            error={!passValid}\n            placeholder={ text.ru.password }\n            className=\"sign-up-form__password\"\n            onChange={this.onChangePass}\n            type=\"password\" />\n          <Input\n            required\n            error={!passRepeatValid}\n            placeholder={ text.ru.repeatPassword }\n            className=\"sign-up-form__repeat-password\"\n            onChange={this.onChangeRepeatPass}\n            type=\"password\" />\n\n          <Button\n            value={ pagesData.register.title }\n            className=\"sign-up-form__button\"\n            disabled={!this.isFormValid()} />\n\n        </form>\n        <p className=\"sign-up-page-additional-info\">\n          { text.ru.alreadyRegistered } <Link\n          className=\"sign-up-page-additional-info__sign-in-link\"\n          to=\"/sign-in\">\n          {pagesData.signIn.title}\n        </Link>\n        </p>\n      </section>\n    );\n  }\n}\n\nexport default SignUpPage;\n","import SignUpPage from './SignUpPage.jsx';\n\nexport default SignUpPage;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { VolumeUpRounded } from '@material-ui/icons';\nimport { IconButton } from '@material-ui/core';\nimport classNames from 'classnames';\nimport style from './QuestionView.module.scss';\n\nconst QuestionView = ({\n  isFalseAnswer,\n  isRightAnswer,\n  srcImage,\n  id,\n  word,\n  audioElement,\n}) => {\n  const iconClasses = classNames({ [style.volumeUpRounded]: !isFalseAnswer && !isRightAnswer });\n  const wordClasses = classNames(style.word, { [style.hidden]: !isFalseAnswer && !isRightAnswer });\n  const pictureClasses = classNames(\n    style.picture,\n    { [style.hidden]: !isFalseAnswer && !isRightAnswer },\n  );\n\n  return (\n    <div className={style.container} dataid= {id}>\n      <img src={srcImage} alt={word} className={pictureClasses}/>\n      <div className={style.description}>\n        <IconButton aria-label=\"audio\" className={style.iconButton} onClick = {() => audioElement.play()}>\n          <VolumeUpRounded fontSize=\"large\" className={iconClasses}/>\n        </IconButton>\n        <p className={wordClasses}>{word}</p>\n      </div>\n    </div>\n  );\n};\n\nQuestionView.propTypes = {\n  isFalseAnswer: PropTypes.bool,\n  isRightAnswer: PropTypes.bool,\n  srcImage: PropTypes.string,\n  id: PropTypes.string,\n  word: PropTypes.string,\n  audioElement: PropTypes.object,\n};\n\nexport default QuestionView;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { getFilePath } from '../../../../helpers/functions';\nimport QuestionView from './QuestionView.jsx';\n\nconst Question = (props) => {\n  const {\n    question, isFalseAnswer, isRightAnswer,\n  } = props;\n  const {\n    image,\n    id,\n    word,\n    audio,\n  } = question;\n\n  const audioElement = new Audio(getFilePath(audio));\n\n  audioElement.oncanplay = () => {\n    if (!isFalseAnswer && !isRightAnswer) {\n      audioElement.play();\n    }\n  };\n\n  return (\n    <QuestionView\n      id={id}\n      word={word}\n      audioElement={audioElement}\n      srcImage={getFilePath(image)}\n      isFalseAnswer={isFalseAnswer}\n      isRightAnswer={isRightAnswer}\n    />\n  );\n};\n\nQuestion.propTypes = {\n  question: PropTypes.object,\n  level: PropTypes.number,\n  isFalseAnswer: PropTypes.bool,\n  isRightAnswer: PropTypes.bool,\n};\n\nexport default Question;\n","import Answer from './AnswerView.jsx';\n\nexport default Answer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport style from './AnswerView.module.scss';\n\nconst AnswerView = ({\n  answer,\n  handleClickAnswer,\n  question,\n  currentAnswerId,\n  isRightAnswer,\n  isFalseAnswer,\n}) => {\n  const answerItem = classNames(\n    style.item,\n    { [style.right]: ((isRightAnswer || isFalseAnswer) && answer.id === question.id) },\n    { [style.wrong]: isFalseAnswer && answer.id === currentAnswerId },\n    { [style.disable]: isRightAnswer || isFalseAnswer },\n  );\n  return (\n  <li className={answerItem}\n    key={answer.id}\n    onClick = {() => handleClickAnswer(answer.id)}\n  >{answer.wordTranslate}</li>\n  );\n};\n\nAnswerView.propTypes = {\n  answer: PropTypes.object,\n  handleClickAnswer: PropTypes.func,\n  question: PropTypes.object,\n  isRightAnswer: PropTypes.bool,\n  isFalseAnswer: PropTypes.bool,\n  currentAnswerId: PropTypes.string,\n};\n\nexport default AnswerView;\n","import AnswerPanel from './AnswerPanelView.jsx';\n\nexport default AnswerPanel;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport style from './AnswerPanelView.module.scss';\n\nimport Answer from '../Answer';\n\nconst AnswerPanelView = ({\n  answerArray,\n  question,\n  handleClickAnswer,\n  isRightAnswer,\n  isFalseAnswer,\n  currentAnswerId,\n}) => {\n  const generateAnswers = () => {\n    if (question && answerArray) {\n      return answerArray.map((answer) => (\n        <Answer\n          isRightAnswer={isRightAnswer}\n          isFalseAnswer={isFalseAnswer}\n          handleClickAnswer = {handleClickAnswer}\n          question={question}\n          answer={answer}\n          key={answer.id}\n          currentAnswerId={currentAnswerId}\n        />\n      ));\n    } return null;\n  };\n  return (\n    <ol className={style.container}>\n      {generateAnswers()}\n    </ol>\n  );\n};\n\nAnswerPanelView.propTypes = {\n  answerArray: PropTypes.array,\n  question: PropTypes.object,\n  handleClickAnswer: PropTypes.func,\n  isRightAnswer: PropTypes.bool,\n  isFalseAnswer: PropTypes.bool,\n  currentAnswerId: PropTypes.string,\n};\n\nexport default AnswerPanelView;\n","import Button from './ButtonView.jsx';\n\nexport default Button;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from '@material-ui/core';\nimport { text } from '../../../../helpers/constants';\nimport style from './ButtonView.module.scss';\n\nconst ButtonView = ({\n  isRightAnswer,\n  handleClickButton,\n  isFalseAnswer,\n}) => {\n  const { next, dontKnow } = text.ru.button;\n  const buttonValue = (isRightAnswer || isFalseAnswer) ? next : dontKnow;\n  return (\n    <Button\n      variant=\"contained\"\n      size=\"large\"\n      className={style.button}\n      onClick={handleClickButton}\n    >\n      { buttonValue }\n    </Button>\n  );\n};\n\nButtonView.propTypes = {\n  isRightAnswer: PropTypes.bool,\n  handleClickButton: PropTypes.func,\n  isFalseAnswer: PropTypes.bool,\n};\n\nexport default ButtonView;\n","import FinishGameItem from './FinishGameItemView.jsx';\n\nexport default FinishGameItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { VolumeUpRounded } from '@material-ui/icons';\nimport { IconButton } from '@material-ui/core';\nimport style from './FinishGameItemView.module.scss';\nimport { getFilePath } from '../../../../helpers/functions';\n\nconst FinishGameItemView = ({ word }) => {\n  const audioElement = new Audio(getFilePath(word.audio));\n  return (\n    <div className={style.container}>\n      <IconButton aria-label=\"audio\" onClick = {() => audioElement.play()}>\n        <VolumeUpRounded fontSize=\"large\"/>\n      </IconButton>\n      <p className={style.text}>{word.word}</p>\n    </div>\n  );\n};\n\nFinishGameItemView.propTypes = {\n  word: PropTypes.object,\n};\n\nexport default FinishGameItemView;\n","import FinishGamePage from './FinishGamePageView.jsx';\n\nexport default FinishGamePage;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from '@material-ui/core';\n\nimport { soundFinish, text } from '../../../../helpers/constants';\n\nimport style from './FinishGamePageView.module.scss';\nimport FinishGameItem from '../FinishGameItem';\nimport { playAudio } from '../../../../helpers/functions';\n\nconst FinishGamePageView = ({ errorAnswerArray, rightAnswerArray, handleClickNewGame }) => {\n  const generateItemsWords = (array) => (\n    array.length !== 0 && array.map((word) => (\n      <FinishGameItem\n        key={word.id}\n        word={word}\n      />\n    ))\n  );\n  return (\n    <>\n      { playAudio(soundFinish) }\n      <div className={style.container}>\n        <div>\n          <h2 className={style.title}>\n            { text.ru.answersCorrect }\n            <span className={style.right}>{rightAnswerArray.length}</span>\n          </h2>\n          {generateItemsWords(rightAnswerArray)}\n        </div>\n        <div>\n          <h2 className={style.title}>\n          { text.ru.answersMistaken }\n            <span className={style.wrong}>{errorAnswerArray.length}</span>\n          </h2>\n          {generateItemsWords(errorAnswerArray)}\n        </div>\n      </div>\n      <Button\n        variant=\"contained\"\n        size=\"large\"\n        onClick={() => handleClickNewGame()}\n        className={style.button}\n      >\n        { text.ru.button.newGame }\n      </Button>\n    </>\n  );\n};\n\nFinishGamePageView.propTypes = {\n  handleClickNewGame: PropTypes.func,\n  errorAnswerArray: PropTypes.array,\n  rightAnswerArray: PropTypes.array,\n};\n\nexport default FinishGamePageView;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport style from './GamePageView.module.scss';\n\nimport Question from '../Question';\nimport AnswerPanel from '../AnswerPanel';\nimport Button from '../Button';\nimport FinishGamePage from '../FinishGamePage';\n\nconst GamePageView = ({\n  questionsList,\n  level,\n  answerArray,\n  isRightAnswer,\n  handleClickButton,\n  errorAnswerArray,\n  rightAnswerArray,\n  isFalseAnswer,\n  handleClickNewGame,\n  handleClickAnswer,\n  currentAnswerId,\n}) => {\n  const question = questionsList[level];\n  return (\n    question && answerArray\n      ? (\n      <div className={style.container}>\n        <Question\n          question = {question}\n          isFalseAnswer = {isFalseAnswer}\n          isRightAnswer= {isRightAnswer}\n        />\n        <AnswerPanel\n          answerArray={answerArray}\n          question={question}\n          handleClickAnswer = {handleClickAnswer}\n          isRightAnswer={isRightAnswer}\n          isFalseAnswer={isFalseAnswer}\n          currentAnswerId={currentAnswerId}\n        />\n        <Button\n          isRightAnswer={isRightAnswer}\n          handleClickButton={handleClickButton}\n          isFalseAnswer={isFalseAnswer}\n        />\n      </div>\n      )\n      : <FinishGamePage\n        handleClickNewGame={handleClickNewGame}\n        rightAnswerArray={rightAnswerArray}\n        errorAnswerArray={errorAnswerArray}\n      />\n  );\n};\n\nGamePageView.propTypes = {\n  questionsList: PropTypes.array,\n  answerArray: PropTypes.array,\n  level: PropTypes.number,\n  isRightAnswer: PropTypes.bool,\n  changeLevel: PropTypes.func,\n  countError: PropTypes.func,\n  handleClickButton: PropTypes.func,\n  isFalseAnswer: PropTypes.bool,\n  handleClickAnswer: PropTypes.func,\n  handleClickNewGame: PropTypes.func,\n  currentAnswerId: PropTypes.string,\n  errorAnswerArray: PropTypes.array,\n  rightAnswerArray: PropTypes.array,\n};\n\nexport default GamePageView;\n","const data = [\n  {\n    id: '5e9f5ee35eb9e72bc21af4c8',\n    group: 0,\n    page: 2,\n    word: 'alien',\n    image: 'files/03_0041.jpg',\n    audio: 'files/03_0041.mp3',\n    audioMeaning: 'files/03_0041_meaning.mp3',\n    audioExample: 'files/03_0041_example.mp3',\n    textMeaning: 'An <i>alien</i> is a creature from a different world.',\n    textExample: 'The <b>alien</b> came in peace.',\n    transcription: '[éiljən]',\n    textExampleTranslate: 'пришелец пришел с миром',\n    textMeaningTranslate: 'Инопланетянин - это существо из другого мира',\n    wordTranslate: 'инопланетянин',\n    wordsPerExampleSentence: 5,\n  },\n  {\n    id: '5e9f5ee35eb9e72bc21af4c9',\n    group: 0,\n    page: 2,\n    word: 'among',\n    image: 'files/03_0042.jpg',\n    audio: 'files/03_0042.mp3',\n    audioMeaning: 'files/03_0042_meaning.mp3',\n    audioExample: 'files/03_0042_example.mp3',\n    textMeaning: 'If you are <i>among</i> certain things, they are all around you.',\n    textExample: 'There was a red apple <b>among</b> the green ones.',\n    transcription: '[əmʌ̀ŋ]',\n    textExampleTranslate: 'Среди зеленых было красное яблоко',\n    textMeaningTranslate: 'Если вы среди определенных вещей, они все вокруг вас',\n    wordTranslate: 'среди',\n    wordsPerExampleSentence: 9,\n  },\n  {\n    id: '5e9f5ee35eb9e72bc21af4ca',\n    group: 0,\n    page: 2,\n    word: 'chart',\n    image: 'files/03_0043.jpg',\n    audio: 'files/03_0043.mp3',\n    audioMeaning: 'files/03_0043_meaning.mp3',\n    audioExample: 'files/03_0043_example.mp3',\n    textMeaning: 'A <i>chart</i> is a list of information.',\n    textExample: 'We used a <b>chart</b> to see how we had improved.',\n    transcription: '[tʃɑːrt]',\n    textExampleTranslate: 'Мы использовали график, чтобы увидеть, как мы улучшили',\n    textMeaningTranslate: 'Диаграмма - это список информации',\n    wordTranslate: 'диаграмма',\n    wordsPerExampleSentence: 10,\n  },\n  {\n    id: '5e9f5ee35eb9e72bc21af4cb',\n    group: 0,\n    page: 2,\n    word: 'cloud',\n    image: 'files/03_0044.jpg',\n    audio: 'files/03_0044.mp3',\n    audioMeaning: 'files/03_0044_meaning.mp3',\n    audioExample: 'files/03_0044_example.mp3',\n    textMeaning: 'A <i>cloud</i> is a group of water drops in the sky.',\n    textExample: 'The sky was filled with white <b>clouds</b>.',\n    transcription: '[klaud]',\n    textExampleTranslate: 'Небо было наполнено белыми облаками',\n    textMeaningTranslate: 'Облако - это группа капель воды в небе',\n    wordTranslate: 'облако',\n    wordsPerExampleSentence: 7,\n  },\n  {\n    id: '5e9f5ee35eb9e72bc21af4cc',\n    group: 0,\n    page: 2,\n    word: 'describe',\n    image: 'files/03_0045.jpg',\n    audio: 'files/03_0045.mp3',\n    audioMeaning: 'files/03_0045_meaning.mp3',\n    audioExample: 'files/03_0045_example.mp3',\n    textMeaning: 'To <i>describe</i> is to say or write what someone or something is like.',\n    textExample: 'They <b>described</b> their tree as colorful, with gold ribbon and a star.',\n    transcription: '[diskráib]',\n    textExampleTranslate: 'Они описали свое дерево как красочное, с золотой лентой и звездой',\n    textMeaningTranslate: 'Описать - это сказать или написать, на что похож кто-то или что-то',\n    wordTranslate: 'описать',\n    wordsPerExampleSentence: 12,\n  },\n  {\n    id: '5e9f5ee35eb9e72bc21af4cd',\n    group: 0,\n    page: 2,\n    word: 'ever',\n    image: 'files/03_0046.jpg',\n    audio: 'files/03_0046.mp3',\n    audioMeaning: 'files/03_0046_meaning.mp3',\n    audioExample: 'files/03_0046_example.mp3',\n    textMeaning: '<i>Ever</i> means at any time.',\n    textExample: 'Going skiing last winter was the most fun I’ve <b>ever</b> had.',\n    transcription: '[évər]',\n    textExampleTranslate: 'Кататься на лыжах прошлой зимой было самым веселым из всего, что я когда-либо ел',\n    textMeaningTranslate: 'Всегда означает в любое время',\n    wordTranslate: 'когда-либо',\n    wordsPerExampleSentence: 11,\n  },\n  {\n    id: '5e9f5ee35eb9e72bc21af4ce',\n    group: 0,\n    page: 2,\n    word: 'fail',\n    image: 'files/03_0047.jpg',\n    audio: 'files/03_0047.mp3',\n    audioMeaning: 'files/03_0047_meaning.mp3',\n    audioExample: 'files/03_0047_example.mp3',\n    textMeaning: 'To <i>fail</i> means you do not succeed in what you try to do.',\n    textExample: 'Since he <b>failed</b> to get the job, he was sad.',\n    transcription: '[feil]',\n    textExampleTranslate: 'Так как он не смог получить работу, ему было грустно',\n    textMeaningTranslate: 'Неудача означает, что вам не удается то, что вы пытаетесь сделать',\n    wordTranslate: 'потерпеть поражение',\n    wordsPerExampleSentence: 10,\n  },\n  {\n    id: '5e9f5ee35eb9e72bc21af4cf',\n    group: 0,\n    page: 2,\n    word: 'grade',\n    image: 'files/03_0048.jpg',\n    audio: 'files/03_0048.mp3',\n    audioMeaning: 'files/03_0048_meaning.mp3',\n    audioExample: 'files/03_0048_example.mp3',\n    textMeaning: 'A <i>grade</i> is a score or mark given to someone’s work.',\n    textExample: 'I managed to get good <b>grades</b> on my report card.',\n    transcription: '[greid]',\n    textExampleTranslate: 'Мне удалось получить хорошие оценки на моем табеле',\n    textMeaningTranslate: 'Оценка - это оценка или оценка, присвоенная чьей-либо работе',\n    wordTranslate: 'класс',\n    wordsPerExampleSentence: 10,\n  },\n  {\n    id: '5e9f5ee35eb9e72bc21af4d0',\n    group: 0,\n    page: 2,\n    word: 'instead',\n    image: 'files/03_0049.jpg',\n    audio: 'files/03_0049.mp3',\n    audioMeaning: 'files/03_0049_meaning.mp3',\n    audioExample: 'files/03_0049_example.mp3',\n    textMeaning: '<i>Instead</i> means in place of.',\n    textExample: 'He ate the carrot <b>instead</b> of the ice cream.',\n    transcription: '[instéd]',\n    textExampleTranslate: 'Он съел морковку вместо мороженого',\n    textMeaningTranslate: 'Вместо означает вместо',\n    wordTranslate: 'вместо',\n    wordsPerExampleSentence: 9,\n  },\n  {\n    id: '5e9f5ee35eb9e72bc21af4d1',\n    group: 0,\n    page: 2,\n    word: 'library',\n    image: 'files/03_0050.jpg',\n    audio: 'files/03_0050.mp3',\n    audioMeaning: 'files/03_0050_meaning.mp3',\n    audioExample: 'files/03_0050_example.mp3',\n    textMeaning: 'A <i>library</i> is a place where you go to read books.',\n    textExample: 'The <b>library</b> at school is full of books.',\n    transcription: '[láibrèri]',\n    textExampleTranslate: 'Библиотека в школе полна книг',\n    textMeaningTranslate: 'Библиотека - это место, куда вы ходите читать книги',\n    wordTranslate: 'библиотека',\n    wordsPerExampleSentence: 8,\n  },\n  {\n    id: '5e9f5ee35eb9e72bc21af4d2',\n    group: 0,\n    page: 2,\n    word: 'photograph',\n    image: 'files/03_0051.jpg',\n    audio: 'files/03_0051.mp3',\n    audioMeaning: 'files/03_0051_meaning.mp3',\n    audioExample: 'files/03_0051_example.mp3',\n    textMeaning: 'I like taking <i>photographs</i>.',\n    textExample: 'I took this <b>photograph</b> with my cell phone.',\n    transcription: '[fóutəgrӕf]',\n    textExampleTranslate: 'Я сделал эту фотографию на свой мобильный',\n    textMeaningTranslate: 'Мне нравится фотографировать',\n    wordTranslate: 'фотография',\n    wordsPerExampleSentence: 8,\n  },\n  {\n    id: '5e9f5ee35eb9e72bc21af4d3',\n    group: 0,\n    page: 2,\n    word: 'planet',\n    image: 'files/03_0052.jpg',\n    audio: 'files/03_0052.mp3',\n    audioMeaning: 'files/03_0052_meaning.mp3',\n    audioExample: 'files/03_0052_example.mp3',\n    textMeaning: 'A <i>planet</i> is a large round thing in space.',\n    textExample: 'Saturn is the <b>planet</b> with the ring around it.',\n    transcription: '[plǽnət]',\n    textExampleTranslate: 'Сатурн - планета с кольцом вокруг него',\n    textMeaningTranslate: 'Планета - это большая круглая вещь в космосе',\n    wordTranslate: 'планета',\n    wordsPerExampleSentence: 9,\n  },\n  {\n    id: '5e9f5ee35eb9e72bc21af4d4',\n    group: 0,\n    page: 2,\n    word: 'report',\n    image: 'files/03_0053.jpg',\n    audio: 'files/03_0053.mp3',\n    audioMeaning: 'files/03_0053_meaning.mp3',\n    audioExample: 'files/03_0053_example.mp3',\n    textMeaning: 'A <i>report</i> is something someone writes for school or work.',\n    textExample: 'Karen had trouble writing her <b>report</b>.',\n    transcription: '[ripɔ́ːrt]',\n    textExampleTranslate: 'Карен не могла написать свой отчет',\n    textMeaningTranslate: 'Отчет - это то, что кто-то пишет для школы или работы',\n    wordTranslate: 'отчет',\n    wordsPerExampleSentence: 6,\n  },\n  {\n    id: '5e9f5ee35eb9e72bc21af4d5',\n    group: 0,\n    page: 2,\n    word: 'several',\n    image: 'files/03_0054.jpg',\n    audio: 'files/03_0054.mp3',\n    audioMeaning: 'files/03_0054_meaning.mp3',\n    audioExample: 'files/03_0054_example.mp3',\n    textMeaning: '<i>Several</i> is more than two but not many.',\n    textExample: 'He had to read <b>several</b> books for class.',\n    transcription: '[sévərəl]',\n    textExampleTranslate: 'Он должен был прочитать несколько книг для класса',\n    textMeaningTranslate: 'Несколько больше двух, но не много',\n    wordTranslate: 'несколько',\n    wordsPerExampleSentence: 8,\n  },\n  {\n    id: '5e9f5ee35eb9e72bc21af4d6',\n    group: 0,\n    page: 2,\n    word: 'shape',\n    image: 'files/03_0055.jpg',\n    audio: 'files/03_0055.mp3',\n    audioMeaning: 'files/03_0055_meaning.mp3',\n    audioExample: 'files/03_0055_example.mp3',\n    textMeaning: 'An object’s <i>shape</i> is the arrangement of its sides and surfaces.',\n    textExample: 'Even with your eyes closed you can feel the <b>shape</b> of it.',\n    transcription: '[ʃeip]',\n    textExampleTranslate: 'Даже с закрытыми глазами вы можете почувствовать его форму',\n    textMeaningTranslate: 'Форма объекта - это расположение его сторон и поверхностей',\n    wordTranslate: 'форма',\n    wordsPerExampleSentence: 12,\n  },\n  {\n    id: '5e9f5ee35eb9e72bc21af4d7',\n    group: 0,\n    page: 2,\n    word: 'solve',\n    image: 'files/03_0056.jpg',\n    audio: 'files/03_0056.mp3',\n    audioMeaning: 'files/03_0056_meaning.mp3',\n    audioExample: 'files/03_0056_example.mp3',\n    textMeaning: 'To <i>solve</i> something is to find an answer to it.',\n    textExample: 'All the students could easily <b>solve</b> the math problem.',\n    transcription: '[sɑlv]',\n    textExampleTranslate: 'Все ученики могли легко решить математическую задачу',\n    textMeaningTranslate: 'Решить что-то - значит найти ответ',\n    wordTranslate: 'решать',\n    wordsPerExampleSentence: 9,\n  },\n  {\n    id: '5e9f5ee35eb9e72bc21af4d8',\n    group: 0,\n    page: 2,\n    word: 'suddenly',\n    image: 'files/03_0057.jpg',\n    audio: 'files/03_0057.mp3',\n    audioMeaning: 'files/03_0057_meaning.mp3',\n    audioExample: 'files/03_0057_example.mp3',\n    textMeaning: 'If something happens <i>suddenly</i>, it happens quickly and unexpectedly.',\n    textExample: 'I was surprised when my friends <b>suddenly</b> shouted, “Happy birthday!”',\n    transcription: '[sʌ́dnli]',\n    textExampleTranslate: \"Я был удивлен, когда мои друзья вдруг закричали: 'С днем рождения!'\",\n    textMeaningTranslate: 'Если что-то происходит внезапно, это происходит быстро и неожиданно',\n    wordTranslate: 'вдруг, внезапно',\n    wordsPerExampleSentence: 10,\n  },\n  {\n    id: '5e9f5ee35eb9e72bc21af4d9',\n    group: 0,\n    page: 2,\n    word: 'suppose',\n    image: 'files/03_0058.jpg',\n    audio: 'files/03_0058.mp3',\n    audioMeaning: 'files/03_0058_meaning.mp3',\n    audioExample: 'files/03_0058_example.mp3',\n    textMeaning: 'To <i>suppose</i> is to guess.',\n    textExample: 'I <b>suppose</b> I should go home now.',\n    transcription: '[səpóuz]',\n    textExampleTranslate: 'Полагаю, мне пора домой',\n    textMeaningTranslate: 'Предположить, значит угадать',\n    wordTranslate: 'предположим',\n    wordsPerExampleSentence: 7,\n  },\n  {\n    id: '5e9f5ee35eb9e72bc21af4da',\n    group: 0,\n    page: 2,\n    word: 'understand',\n    image: 'files/03_0059.jpg',\n    audio: 'files/03_0059.mp3',\n    audioMeaning: 'files/03_0059_meaning.mp3',\n    audioExample: 'files/03_0059_example.mp3',\n    textMeaning: 'To <i>understand</i> something you need to know what it means.',\n    textExample: 'Henry could not <b>understand</b> the message.',\n    transcription: '[Λndərstǽnd]',\n    textExampleTranslate: 'Генри не мог понять сообщение',\n    textMeaningTranslate: 'Чтобы понять что-то, нужно знать, что это значит',\n    wordTranslate: 'понимаю',\n    wordsPerExampleSentence: 6,\n  },\n  {\n    id: '5e9f5ee35eb9e72bc21af4db',\n    group: 0,\n    page: 2,\n    word: 'view',\n    image: 'files/03_0060.jpg',\n    audio: 'files/03_0060.mp3',\n    audioMeaning: 'files/03_0060_meaning.mp3',\n    audioExample: 'files/03_0060_example.mp3',\n    textMeaning: 'To <i>view</i> is to look at something.',\n    textExample: 'Michael likes to <b>view</b> himself in the mirror.',\n    transcription: '[vjuː]',\n    textExampleTranslate: 'Михаилу нравится видеть себя в зеркале',\n    textMeaningTranslate: 'Смотреть - значит смотреть на что-то',\n    wordTranslate: 'посмотреть',\n    wordsPerExampleSentence: 8,\n  },\n];\n\nexport default data;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport GamePageView from './GamePageView.jsx';\nimport data from '../../mockData';\nimport { shuffleArray, generateQuestionsArray, playAudio } from '../../../../helpers/functions';\nimport {\n  soundSuccess,\n  soundError,\n} from '../../../../helpers/constants';\n\nclass GamePage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.props = props;\n    const { handleClickNewGame } = this.props;\n    this.handleClickNewGame = handleClickNewGame;\n    this.state = {\n      dataWords: data, // TODO API\n      level: 0,\n      questionList: [],\n      errorAnswerArray: [],\n      rightAnswerArray: [],\n      isRightAnswer: false,\n      isFalseAnswer: false,\n    };\n  }\n\n  componentDidMount = () => {\n    const { dataWords, maxLevel } = this.state;\n    const { level } = this.state;\n    const questionList = generateQuestionsArray(dataWords, maxLevel);\n    const answerArray = this.getAnswersArray(dataWords, questionList, level);\n    this.setState({ questionList, answerArray });\n  }\n\n  getAnswersArray = (dataWords, questionList, level) => {\n    const { numberLevel, numberAnswers } = this.props;\n    if (dataWords && questionList.length !== 0 && numberLevel !== level) {\n      const currentQuestion = questionList[level];\n      const arrayWrongAnswer = shuffleArray(dataWords.filter((word) => (\n        word.id !== currentQuestion.id)));\n      const answerArray = shuffleArray(\n        arrayWrongAnswer.slice(0, numberAnswers - 1).concat(currentQuestion),\n      );\n      return answerArray;\n    } return null;\n  }\n\n  changeLevel = () => {\n    const { dataWords, questionList } = this.state;\n    let { level } = this.state;\n    const { numberLevel } = this.props;\n    if (level < numberLevel) {\n      level += 1;\n      const answerArray = this.getAnswersArray(dataWords, questionList, level);\n      clearTimeout(this.nextLevel);\n      this.setState({\n        level,\n        isRightAnswer: false,\n        isFalseAnswer: false,\n        answerArray,\n      });\n    }\n  }\n\n  handleClickButton = (e) => {\n    const {\n      isRightAnswer,\n      isFalseAnswer,\n      errorAnswerArray,\n      questionList,\n      level,\n      id,\n    } = this.state;\n    e.preventDefault();\n    const question = questionList[level];\n    if (!isRightAnswer && !isFalseAnswer) {\n      this.setAnswer(errorAnswerArray, question, id);\n      playAudio(soundError);\n      this.nextLevel = setTimeout(this.changeLevel, 2000);\n    } else this.changeLevel();\n  }\n\n  setAnswer = (array, question, id) => {\n    array.push(question);\n    this.setState({\n      array: [...array],\n      isRightAnswer: true,\n      currentAnswerId: id,\n    });\n  }\n\n  handleClickAnswer = (id) => {\n    const {\n      questionList,\n      level,\n      isRightAnswer,\n      isFalseAnswer,\n      rightAnswerArray,\n      errorAnswerArray,\n    } = this.state;\n    const question = questionList[level];\n    if (!isRightAnswer && !isFalseAnswer) {\n      if (id === question.id) {\n        this.setAnswer(rightAnswerArray, question, id);\n        this.setState({ isRightAnswer: true });\n        playAudio(soundSuccess);\n        this.nextLevel = setTimeout(this.changeLevel, 2000);\n      } else {\n        this.setAnswer(errorAnswerArray, question, id);\n        this.setState({ isFalseAnswer: true });\n        playAudio(soundError);\n        this.nextLevel = setTimeout(this.changeLevel, 2000);\n      }\n    }\n  }\n\n  render() {\n    const {\n      questionList,\n      level,\n      isRightAnswer,\n      isFalseAnswer,\n      currentAnswerId,\n      answerArray,\n      rightAnswerArray,\n      errorAnswerArray,\n    } = this.state;\n    return (\n      <GamePageView\n        handleClickNewGame={this.handleClickNewGame}\n        answerArray={answerArray}\n        handleClickAnswer = {this.handleClickAnswer}\n        questionsList={questionList}\n        level={level}\n        isRightAnswer={isRightAnswer}\n        rightAnswerArray={rightAnswerArray}\n        errorAnswerArray={errorAnswerArray}\n        isFalseAnswer={isFalseAnswer}\n        currentAnswerId={currentAnswerId}\n        handleClickButton={this.handleClickButton}\n      />\n    );\n  }\n}\n\nGamePage.propTypes = {\n  handleClickNewGame: PropTypes.func,\n  numberLevel: PropTypes.number,\n  numberAnswers: PropTypes.number,\n};\n\nexport default GamePage;\n","import StartGamePage from './StartGamePageView.jsx';\n\nexport default StartGamePage;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  FormControl,\n  InputLabel,\n  Select,\n  TextField,\n  Button,\n} from '@material-ui/core';\n\nimport {\n  text,\n  count,\n  formLabel,\n  gamesData,\n} from '../../../../helpers/constants';\n\nimport style from './StartGamePageView.module.scss';\n\nconst StartGamePageView = ({\n  handleChooseLevel,\n  level,\n  setNumberLevel,\n  setNumberAnswers,\n  handleSubmitForm,\n}) => {\n  const options = [];\n  for (let numberLevel = 0; numberLevel <= count.groups; numberLevel += 1) {\n    options.push(<option value={numberLevel} key={numberLevel}>{`${formLabel.level} ${numberLevel}`}</option>);\n  }\n  return (\n    <div className={style.container}>\n      <h1 className={style.title}>{gamesData.audiocall.title}</h1>\n      <p className={style.text}>Тренировка улучшает восприятие английского на слух</p>\n      <form className={style.form} onSubmit={handleSubmitForm}>\n        <FormControl variant=\"outlined\">\n          <InputLabel htmlFor=\"outlined-level-native-simple\">{formLabel.chooseLevel}</InputLabel>\n          <Select\n            native\n            value={level || 0}\n            onChange={handleChooseLevel}\n            label={formLabel.chooseLevel}\n            inputProps={{\n              name: 'level',\n              id: 'outlined-level-native-simple',\n            }}\n          >\n            {options}\n          </Select>\n        </FormControl>\n        <TextField\n          required\n          className={style.input}\n          id=\"audiocall-start__questions\"\n          type=\"number\"\n          label={formLabel.questions}\n          defaultValue=\"5\"\n          inputProps={{ pattern: '[0-9]', min: '5', max: '12' }}\n          variant=\"filled\"\n          onChange={setNumberLevel}\n        />\n        <TextField\n          required\n          id=\"audiocall-start__questions\"\n          type=\"number\"\n          label={formLabel.answers}\n          defaultValue=\"5\"\n          inputProps={{ pattern: '[2-5]', min: '2', max: '5' }}\n          variant=\"filled\"\n          onChange={setNumberAnswers}\n        />\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n        >\n         { text.ru.button.startGame }\n        </Button>\n      </form>\n    </div>\n  );\n};\n\nStartGamePageView.propTypes = {\n  handleChooseLevel: PropTypes.func,\n  level: PropTypes.number,\n  setNumberLevel: PropTypes.func,\n  setNumberAnswers: PropTypes.func,\n  handleSubmitForm: PropTypes.func,\n};\n\nexport default StartGamePageView;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport GamePage from '../GamePage';\nimport StartGamePage from '../StartGamePage';\n\nconst MainView = ({\n  handleChooseLevel,\n  setNumberLevel,\n  setNumberAnswers,\n  handleSubmitForm,\n  level, // TODO for API\n  numberAnswers,\n  isStart,\n  numberLevel,\n  handleClickNewGame,\n}) => (\n  (!isStart)\n    ? <StartGamePage\n      handleChooseLevel={handleChooseLevel}\n      setNumberLevel={setNumberLevel}\n      setNumberAnswers={setNumberAnswers}\n      handleSubmitForm={handleSubmitForm}\n    />\n    : <GamePage\n      level={level}\n      handleClickNewGame={handleClickNewGame}\n      numberAnswers={numberAnswers}\n      isStart={isStart}\n      numberLevel={numberLevel}\n    />\n);\n\nMainView.propTypes = {\n  handleChooseLevel: PropTypes.func,\n  setNumberLevel: PropTypes.func,\n  setNumberAnswers: PropTypes.func,\n  handleSubmitForm: PropTypes.func,\n  handleClickNewGame: PropTypes.func,\n  level: PropTypes.number,\n  numberAnswers: PropTypes.number,\n  isStart: PropTypes.bool,\n  numberLevel: PropTypes.number,\n};\n\nexport default MainView;\n","import React from 'react';\nimport MainView from './MainView.jsx';\n\nclass Main extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      levelAPI: 0,\n      numberLevel: 5,\n      numberAnswers: 5,\n      isStart: false,\n    };\n  }\n\n  handleChooseLevel = (e) => {\n    const levelAPI = e.target.value;\n    this.setState({ levelAPI: +levelAPI });\n  }\n\n  setNumberLevel = (e) => {\n    const amountQuestions = e.target.value || e.target.defaultValue;\n    this.setState({ numberLevel: +amountQuestions });\n  }\n\n  setNumberAnswers = (e) => {\n    const numberAnswers = e.target.value || e.target.defaultValue;\n    this.setState({ numberAnswers: +numberAnswers });\n  }\n\n  handleSubmitForm = () => {\n    this.setState({ isStart: true });\n  }\n\n  handleClickNewGame = () => {\n    this.setState({ isStart: false });\n  }\n\n  render() {\n    const {\n      levelAPI, // TODO for ARI\n      numberAnswers,\n      isStart,\n      numberLevel,\n    } = this.state;\n    return (\n      <MainView\n        handleChooseLevel={this.handleChooseLevel}\n        handleClickNewGame={this.handleClickNewGame}\n        setNumberLevel={this.setNumberLevel}\n        setNumberAnswers={this.setNumberAnswers}\n        handleSubmitForm={this.handleSubmitForm}\n        levelAPI={levelAPI} // TODO for API\n        numberAnswers={numberAnswers}\n        isStart={isStart}\n        numberLevel={numberLevel}\n      />\n    );\n  }\n}\n\nexport default Main;\n","import AudioCall from './AudioCall.jsx';\n\nexport default AudioCall;\n","import React from 'react';\nimport Main from './components/Main';\nimport './style.scss';\n\nconst AudioCall = () => (\n  <div className=\"container\">\n    <Main />\n  </div>\n);\n\nexport default AudioCall;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\n\nexport default function Switcher({ handleChangeUserWords }) {\n  return (\n    <FormGroup row>\n      <FormControlLabel\n        control={<Switch\n          onChange={handleChangeUserWords}\n          name=\"checkedUserWords\"\n          color=\"primary\"\n        />}\n        label=\"Слова из словаря*\"\n      />\n    </FormGroup>\n  );\n}\nSwitcher.propTypes = {\n  handleChangeUserWords: PropTypes.string,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport Button from '@material-ui/core/Button';\nimport PlayCircleOutlineIcon from '@material-ui/icons/PlayCircleOutline';\nimport { text } from '../../../../helpers/constants';\n\nexport default function StartGameForm({ classNameForm, handleCurrentGroup, onSubmitForm }) {\n  const menuItemList = text.ru.levelsTitles;\n\n  return (\n    <form className={classNameForm} onSubmit={onSubmitForm}>\n      <FormControl\n        required\n      >\n        <InputLabel id=\"select-label\" style={{ fontSize: '1.2rem' }} >\n          { text.ru.chooseLevel }\n        </InputLabel>\n        <Select\n          labelId=\"select-label\"\n          id=\"simple-select\"\n          onChange={handleCurrentGroup}\n        >\n          {menuItemList.map((value, key) => (\n            <MenuItem value={key} key={key}>{value}</MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n\n      <Button\n        type=\"submit\"\n        variant=\"contained\"\n        color=\"primary\"\n        startIcon={<PlayCircleOutlineIcon />}\n        style={{ background: 'rgba(130, 115, 228, 1)' }}\n      >\n        { text.ru.button.startGame }\n      </Button>\n    </form >\n  );\n}\nStartGameForm.propTypes = {\n  classNameForm: PropTypes.string,\n  handleCurrentGroup: PropTypes.func,\n  onSubmitForm: PropTypes.func,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Switcher from '../UI/switch';\nimport StartGameForm from '../UI/StartGameForm';\n\nimport { text } from '../../../../helpers/constants';\n\nimport './StartGame.scss';\n\nconst StartGame = ({\n  handleChangeUserWords, handleCurrentGroup, startGame, updateState, token,\n}) => {\n  const onSubmitForm = (event) => {\n    event.preventDefault();\n    updateState();\n    startGame();\n  };\n\n  return (\n    <div className={'sprint-start__container'}>\n      <StartGameUserForm\n        handleChangeUserWords={handleChangeUserWords}\n        handleCurrentGroup={handleCurrentGroup}\n        onSubmitForm={onSubmitForm}\n        token={token}\n        startGame={startGame}\n      />\n    </div>\n\n  );\n};\n\nconst StartGameUserForm = ({\n  handleChangeUserWords, handleCurrentGroup, onSubmitForm, token,\n}) => (\n  <div className={'sprint-start__container'}>\n\n    <div className={'sprint-start__form-container'}>\n      {token\n        ? (<React.Fragment>\n            <span className={'sprint-start__explanation'}>\n              { text.ru.notEnoughWords }\n    </span>\n          <Switcher\n            handleChangeUserWords={handleChangeUserWords}\n          />\n        </React.Fragment>)\n        : null\n      }\n\n      <StartGameForm\n        classNameForm={'sprint-start__form'}\n        handleCurrentGroup={handleCurrentGroup}\n        onSubmitForm={onSubmitForm}\n      />\n    </div>\n\n  </div>\n);\n\nStartGame.propTypes = {\n  startGame: PropTypes.func,\n  handleChangeUserWords: PropTypes.func,\n  checkedUserWords: PropTypes.func,\n  handleCurrentGroup: PropTypes.func,\n  onSubmitForm: PropTypes.func,\n  updateState: PropTypes.func,\n  token: PropTypes.string,\n};\n\nStartGameUserForm.propTypes = {\n  startGame: PropTypes.func,\n  handleChangeUserWords: PropTypes.func,\n  checkedUserWords: PropTypes.func,\n  handleCurrentGroup: PropTypes.func,\n  onSubmitForm: PropTypes.func,\n  token: PropTypes.string,\n};\n\nfunction mapStateToProps(state) {\n  return {\n    token: state.auth.token,\n  };\n}\nexport default connect(mapStateToProps)(StartGame);\n","import StartGame from './StartGame.jsx';\n\nexport default StartGame;","import PlayGame from './PalyGame.jsx';\n\nexport default PlayGame;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport TimerIcon from '@material-ui/icons/Timer';\nimport PetsIcon from '@material-ui/icons/Pets';\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\nimport Button from '@material-ui/core/Button';\n\nimport './PlayGame.scss';\n\nclass PlayGame extends Component {\n  componentDidMount() {\n    this.props.updateTimer();\n    document.addEventListener('keyup', this.props.onCLick);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keyup', this.props.onCLick);\n  }\n\n  arr = Array(3).fill(this.props.isAnswerQuiz)\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.counterTotal !== this.props.counterTotal) {\n      this.arr.unshift(this.props.isAnswerQuiz);\n      this.arr.pop();\n    }\n\n    if (prevProps.timer !== this.props.timer) {\n      this.props.updateTimer();\n    }\n  }\n\n  render() {\n    const {\n      words, activeAnswer, onCLick,\n      volume, handleVolume, score, timer,\n    } = this.props;\n\n    return (\n      <div className={'sprint-play__container'}>\n        <div className={'sprint-play__header'}>\n\n          <div className={'sprint-play__timer-wrapper'}>\n            <TimerIcon style={{ fontSize: '2.4rem' }} />\n            <div className={'sprint-play__timer'}>{timer}</div>\n          </div>\n\n          <div className={'sprint-play__point-wrapper'}>\n            <PetsIcon style={{ fontSize: '2.4rem' }} />\n            <div className={'sprint-play__point-score'}>{score}</div>\n          </div>\n\n          <IconButton onClick={handleVolume}>\n            {volume\n              ? <VolumeUpIcon className={'sprint-play__volume'} style={{ fontSize: '2.4rem' }} />\n              : <VolumeOffIcon className={'sprint-play__volume'} style={{ fontSize: '2.4rem' }} />}\n          </IconButton>\n        </div>\n        <div className={'sprint-play__board'}>\n          <div className={'sprint-play__rangs'}>\n            {this.arr.map((value, key) => (\n              <div className={`sprint-play__rang-item sprint-play__${value}`} key={key}>\n                <i className={`fa fa-${value}`} key={key}></i>\n              </div>\n            ))}\n          </div>\n          <div className={'sprint-play__word'}>{words[0]}</div>\n\n          <div className={'sprint-play__translate'}>{activeAnswer}</div>\n\n        </div>\n        <div className={'sprint-play__control'}>\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            size=\"large\"\n            onClick={onCLick}\n            value={0}\n            style={{ width: 120, fontSize: '1.5rem' }}\n          >\n            НЕВЕРНО\n      </Button>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            size=\"large\"\n            onClick={onCLick}\n            value={1}\n            style={{ width: 120, fontSize: '1.5rem' }}\n          >\n            ВЕРНО\n      </Button>\n\n        </div>\n      </div >\n\n    );\n  }\n}\n\nPlayGame.propTypes = {\n  words: PropTypes.array,\n  activeAnswer: PropTypes.string,\n  volume: PropTypes.bool,\n  handleClose: PropTypes.func,\n  handleVolume: PropTypes.func,\n  score: PropTypes.number,\n  timer: PropTypes.number,\n  onCLick: PropTypes.func,\n  updateTimer: PropTypes.func,\n  counterTotal: PropTypes.number,\n  isAnswerQuiz: PropTypes.string,\n};\n\nexport default PlayGame;\n","import React from 'react';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport PropTypes from 'prop-types';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport PlayCircleFilledIcon from '@material-ui/icons/PlayCircleFilled';\nimport IconButton from '@material-ui/core/IconButton';\n\nconst StyledTableCell = withStyles((theme) => ({\n  root: {\n    padding: '4px 4px 4px 10px',\n    fontSize: '1.4rem',\n    lineHeight: '2.4rem',\n  },\n  head: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    '&:nth-of-type(odd)': {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n}))(TableRow);\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 700,\n  },\n});\n\nexport default function CustomizedTables({ complete, mistake, audioPlay }) {\n  function createData(name, calories, fat, carbs, protein) {\n    return {\n      name, calories, fat, carbs, protein,\n    };\n  }\n\n  const words = complete.words.concat(mistake.words);\n  const translate = complete.translate.concat(mistake.translate);\n  const audio = complete.audio.concat(mistake.audio);\n  const arr = [];\n  words.forEach((value, key) => {\n    arr.push({\n      word: value,\n      translate: translate[key],\n      audio: <IconButton onClick={() => audioPlay(audio[key])}><PlayCircleFilledIcon /></IconButton>\n      ,\n    });\n  });\n\n  const rows = arr.map((value, key) => createData(value.word, value.translate, value.audio, complete.total > key ? 'угадал' : 'не угадал'));\n\n  const classes = useStyles();\n\n  return (\n    <TableContainer component={Paper}>\n      <Table className={classes.table} aria-label=\"customized table\">\n        <TableHead>\n          <TableRow>\n            <StyledTableCell>Слово</StyledTableCell>\n            <StyledTableCell align=\"right\">Перевод</StyledTableCell>\n            <StyledTableCell align=\"right\">Аудио</StyledTableCell>\n            <StyledTableCell align=\"right\">Статус</StyledTableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map((row) => (\n            <StyledTableRow key={row.name}>\n              <StyledTableCell component=\"th\" scope=\"row\">\n                {row.name}\n              </StyledTableCell>\n              <StyledTableCell align=\"right\">{row.calories}</StyledTableCell>\n              <StyledTableCell align=\"right\">{row.fat}</StyledTableCell>\n              <StyledTableCell align=\"right\">{row.carbs}</StyledTableCell>\n              <StyledTableCell align=\"right\">{row.protein}</StyledTableCell>\n            </StyledTableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n\nCustomizedTables.propTypes = {\n  complete: PropTypes.object,\n  mistake: PropTypes.object,\n  audioPlay: PropTypes.func,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport { Link } from 'react-router-dom';\nimport Slide from '@material-ui/core/Slide';\n// eslint-disable-next-line import/no-unresolved\nimport CustomizedTables from '../../UI/Table.jsx';\nimport { pagesData, text } from '../../../../helpers/constants';\n\n// eslint-disable-next-line react/display-name\nconst Transition = React.forwardRef((props, ref) => <Slide direction=\"up\" ref={ref} {...props} />);\n\nexport default function FinishGame({\n  isFinished, complete, mistake, audioPlay, onReloadGame,\n}) {\n  return (\n    <div>\n      <Dialog\n        maxWidth={false}\n        open={isFinished}\n        TransitionComponent={Transition}\n        keepMounted\n        aria-labelledby=\"alert-dialog-slide-title\"\n        aria-describedby=\"alert-dialog-slide-description\"\n      >\n        <DialogContent >\n          <DialogContentText id=\"alert-dialog-slide-description\">\n            <CustomizedTables\n              complete={complete}\n              mistake={mistake}\n              audioPlay={audioPlay}\n            />\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Link to={`/${pagesData.learnWords.path}`}>\n            <Button\n              color=\"primary\"\n              style={{ fontSize: '1.4rem' }}\n            >\n              { text.ru.button.learnWords }\n            </Button>\n\n          </Link>\n\n          <Button style={{ fontSize: '1.4rem' }} onClick={() => onReloadGame()} color=\"primary\">\n            { text.ru.button.newGame }\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n\nFinishGame.propTypes = {\n  isFinished: PropTypes.bool,\n  complete: PropTypes.object,\n  mistake: PropTypes.object,\n  audioPlay: PropTypes.func,\n  onReloadGame: PropTypes.func,\n};\n","import FinishGame from './FinishGame.jsx';\n\nexport default FinishGame;\n","import axios from 'axios';\n\nimport { apiLinks, count } from '../constants';\nimport { getRandomNumber } from '../functions';\n\nexport const getWords = async (page, group) => {\n  const url = `${apiLinks.base}words?page=${page}&group=${group}`;\n  const response = await axios.get(url);\n  return response.data;\n};\n\nexport const getWordsById = async (wordId) => {\n  const url = `${apiLinks.base}words/${wordId}`;\n  const response = await axios.get(url);\n  return response.data;\n};\n\nexport const getRandomWordByGroup = async (group) => {\n  const randomPage = getRandomNumber(0, count.pages);\n  const data = await getWords(randomPage, group);\n  const randomKey = getRandomNumber(0, count.words);\n  return data[randomKey];\n};\n\nexport const getWordsByAmount = async (group, amountOfAnswers) => {\n  const result = Array(amountOfAnswers).fill(0)\n    .map(() => getRandomWordByGroup(group));\n  const words = await Promise.all(result);\n  return words;\n};\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport StartGame from './Components/StartGame';\nimport PlayGame from './Components/PlayGame';\nimport FinishGame from './Components/FinishGame';\nimport UserService from '../../helpers/userService';\n\nimport {\n  count,\n  applicationThings,\n  localStorageItems,\n  soundError,\n  soundSuccess,\n} from '../../helpers/constants';\n\nimport {\n  saveRightToGamesStats,\n  saveWrongToGamesStats,\n  updateUserWordRate,\n  saveGameResults,\n} from '../../helpers/wordsService';\nimport { getWordsByAmount } from '../../helpers/wordsService/wordsApi';\n\nimport './Sprint.scss';\nimport {\n  getRandomNumber,\n  playAudio,\n  shuffleArray,\n} from '../../helpers/functions';\n\nconst initialState = {\n  wordObject: {},\n  checkedUserWords: false,\n  allUserWords: [],\n  timer: 60,\n  score: 0,\n  activeQuestion: '',\n  activeAnswer: '',\n  activeCard: 0,\n  isTrue: false,\n  isAnswerQuiz: 'default',\n  audio: [],\n  answerState: null,\n  currentGroup: null,\n  counter: {\n    total: 0,\n    multiplier: 1,\n    win: 0,\n  },\n  changeGroup: false,\n  translateWords: [],\n  words: [],\n  isFinished: false,\n  isStarted: false,\n  volume: true,\n  mistake: {\n    total: 0,\n    words: [],\n    translate: [],\n    audio: [],\n  },\n  complete: {\n    total: 0,\n    words: [],\n    translate: [],\n    audio: [],\n  },\n};\n\nconst userService = new UserService();\nconst { getUserWordsNoRemoved } = userService;\n\nclass Sprint extends Component {\n  basic = count.sprint.pointsMultiplier\n\n  state = initialState\n\n  updateState = async () => {\n    const words = [];\n    const translateWords = [];\n    const answerState = null;\n    const audio = [];\n    let isTrue = false;\n    const token = this.props.token\n      || localStorage.getItem(localStorageItems.token);\n    const userId = this.props.userId\n      || localStorage.getItem(localStorageItems.userId);\n\n    try {\n      const allUserWordsRandom = shuffleArray(token && this.state.checkedUserWords\n        ? await getUserWordsNoRemoved(userId)\n        : []);\n\n      if (!this.state.allUserWords.length) {\n        this.setState({ allUserWords: allUserWordsRandom });\n      }\n      const { counter, allUserWords } = this.state;\n      const { total } = counter;\n      const userWords = allUserWords.slice(total, total + 2);\n\n      const allCards = (allUserWords.length - 1 > total)\n        ? userWords\n        : await getWordsByAmount(this.state.currentGroup, 2);\n      allCards.forEach((card) => {\n        words.push(card.word);\n        translateWords.push(card.wordTranslate);\n        audio.push(card.audio);\n      });\n      const activeCard = getRandomNumber(0, allCards.length - 1);\n      const activeQuestion = words[0];\n      const wordObject = allCards[0];\n      const activeAnswer = translateWords[Math.round(Math.random())];\n      if (translateWords[0] === activeAnswer) {\n        isTrue = true;\n      }\n      this.setState({\n        wordObject,\n        words,\n        translateWords,\n        answerState,\n        activeCard,\n        activeQuestion,\n        audio,\n        activeAnswer,\n        isTrue\n        ,\n      });\n    } catch (e) {\n      console.error(e);\n      // TODO add erorrs' handler\n    }\n  }\n\n  audioPlay = (path) => (this.state.volume) && playAudio(path);\n\n  handleVolume = () => {\n    this.setState(({ volume }) => ({\n      volume: !volume,\n    }));\n  }\n\n  resultCurrentQuiz = (value) => {\n    const {\n      words, translate, total, audio,\n    } = this.state[value];\n    translate.push(this.state.translateWords[this.state.activeCard]);\n    audio.push(this.state.audio[this.state.activeCard]);\n    words.push(this.state.activeQuestion);\n    this.setState({\n      [value]: {\n        total: total + 1,\n        words: [...words],\n        translate: [...translate],\n        audio: [...audio],\n      },\n    });\n  }\n\n  updateCounter = (mult = 1, win = 0) => {\n    const multiplier = win && this.state.counter.win\n    && this.state.counter.win % count.sprint.correctAnswerOnce === 0 ? mult : 1;\n    this.setState(({ counter }) => ({\n      counter: {\n        total: counter.total + 1,\n        multiplier: win ? counter.multiplier * multiplier : mult,\n        win: win ? counter.win + win : 0,\n      },\n    }));\n  }\n\n  updateScore = (basic) => {\n    this.setState(({ score }) => ({\n      score: score + this.state.counter.multiplier * basic,\n    }));\n  }\n\n  updateTimer = () => {\n    const timerId = setTimeout(() => {\n      this.setState(({ timer }) => ({\n        timer: timer - 1,\n      }));\n    }, 1000);\n    if (this.state.timer === 0) {\n      clearTimeout(timerId);\n      this.setState({ isFinished: true });\n      saveGameResults(applicationThings.SPRINT);\n    }\n  }\n\n  onClickHandler = (e) => {\n    let value;\n    if (e.key === 'ArrowLeft') {\n      value = false;\n    } else if (e.key === 'ArrowRight') {\n      value = true;\n    } else if (e.currentTarget.value) {\n      value = Boolean(Number(e.currentTarget.value));\n    } else {\n      value = null;\n    }\n    if (value !== null) {\n      const { answerState } = this.state;\n      const isTrue = value;\n\n      if (answerState) {\n        return;\n      }\n\n      this.setState({ answerState: true });\n\n      if (isTrue === this.state.isTrue) {\n        this.setState({ isAnswerQuiz: 'check' });\n        this.audioPlay(soundSuccess);\n        this.updateCounter(count.sprint.counterMultiplier, 1);\n        this.updateScore(this.basic);\n        this.resultCurrentQuiz('complete');\n        saveRightToGamesStats(applicationThings.SPRINT);\n      } else {\n        this.audioPlay(soundError);\n        this.setState({ isAnswerQuiz: 'times' });\n        this.updateCounter();\n        this.resultCurrentQuiz('mistake');\n        saveWrongToGamesStats(applicationThings.SPRINT);\n        updateUserWordRate(this.state.wordObject);\n      }\n      this.updateState();\n    }\n  }\n\n  onReloadGame = () => {\n    const state = { ...initialState };\n    this.setState({ ...state });\n    this.updateState();\n  }\n\n  isChangeUserWords = () => {\n    this.setState(({ checkedUserWords }) => ({\n      checkedUserWords: !checkedUserWords,\n    }));\n  }\n\n  handleCurrentGroup = (event) => {\n    this.setState({ currentGroup: event.target.value });\n  }\n\n  render() {\n    const {\n      words, activeAnswer, translateWords, isAnswerQuiz, counter,\n      volume, score, timer, isFinished, mistake, complete, isStarted,\n    } = this.state;\n\n    let page;\n    if (!isStarted) {\n      page = <StartGame\n        isStarted={isStarted}\n        startGame={() => this.setState({ isStarted: true })}\n        handleChangeUserWords={this.isChangeUserWords}\n        handleCurrentGroup={this.handleCurrentGroup}\n        updateState={this.updateState}\n      />;\n    } else if (isStarted && isFinished) {\n      page = <FinishGame\n        isFinished={isFinished}\n        mistake={mistake}\n        complete={complete}\n        audioPlay={this.audioPlay}\n        onReloadGame={this.onReloadGame}\n      />;\n    } else if (isStarted && !isFinished) {\n      page = <PlayGame\n        words={words}\n        activeAnswer={activeAnswer}\n        onCLick={this.onClickHandler}\n        translateWords={translateWords}\n        isAnswerQuiz={isAnswerQuiz}\n        counterTotal={counter.total}\n        volume={volume}\n        handleVolume={this.handleVolume}\n        score={score}\n        timer={timer}\n        updateTimer={this.updateTimer}\n      />;\n    }\n\n    return (\n      <div className={'sprint__wrapper'}>\n        <div className={'sprint__container'}>\n          {page}\n\n        </div>\n      </div>\n\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    token: state.auth.token,\n    userId: state.auth.userId,\n  };\n}\n\nSprint.propTypes = {\n  token: PropTypes.string,\n  userId: PropTypes.string,\n};\n\nexport default connect(mapStateToProps)(Sprint);\n","import Sprint from './Sprint.jsx';\n\nexport default Sprint;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\nimport CloseIcon from '@material-ui/icons/Close';\n\nimport classes from './Header.module.scss';\n\nconst Header = ({\n  volume, heartCount, handleVolume, mistakeTotal, handleClose,\n}) => {\n  const arrComplete = Array(heartCount).fill(<FavoriteIcon />);\n  const arrMistake = Array(mistakeTotal).fill(<FavoriteBorderIcon />);\n  return (\n    <div className={classes.Header}>\n      <IconButton onClick={handleVolume}>\n        {volume\n          ? <VolumeUpIcon className={classes.Icon} />\n          : <VolumeOffIcon className={classes.Icon} />}\n      </IconButton>\n      <div>\n        {arrMistake.map((value) => value)}\n        {arrComplete.map((value) => value)}\n        <IconButton\n          onClick={handleClose}\n          className={classes.CloseButton}>\n          <CloseIcon className={classes.Icon} />\n        </IconButton>\n      </div>\n    </div>\n\n  );\n};\n\nHeader.propTypes = {\n  volume: PropTypes.bool,\n  heartCount: PropTypes.number,\n  handleVolume: PropTypes.func,\n  mistakeTotal: PropTypes.number,\n  handleClose: PropTypes.func,\n};\n\nHeader.defaultProps = {\n  volume: true,\n  heartCount: 5,\n  handleVolume: () => { },\n  mistakeTotal: 0,\n  handleClose: () => { },\n};\n\nexport default Header;\n","import Header from './Header.jsx';\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\n\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nimport Button from '@material-ui/core/Button';\nimport PlayCircleOutlineIcon from '@material-ui/icons/PlayCircleOutline';\n\nimport {count, gamesData, text} from '../../../../helpers/constants';\n\nimport classes from './StartPage.module.scss';\nimport { getAverageNumber } from '../../../../helpers/functions';\n\nconst StartPage = ({\n  onTotalQuizUpdate, onSubmitForm, handleCurrentGroup,\n  handleTotalAnswer, totalAnswers, totalQuestions,\n}) => {\n  const errorAnswer = totalAnswers > count.savannah.maxAnswers\n    || totalAnswers < count.savannah.minAnswers\n    || !totalAnswers;\n\n  const errorQuiz = totalQuestions > count.savannah.maxQuestions\n    || totalQuestions < count.savannah.minQuestions\n    || !totalQuestions;\n\n  const [age, setAge] = React.useState('');\n\n  const handleChange = (event) => {\n    setAge(event.target.value);\n    handleCurrentGroup(event);\n  };\n\n  const menuItemList = text.ru.levelsTitles;\n\n  return (\n    <div className={classes.StartPage}>\n      <h1>{ gamesData.savannah.title }</h1>\n      <form className={classes.form} onSubmit={(!errorQuiz && !errorAnswer) ? onSubmitForm : null}>\n        <FormControl className={classes.formControl} required>\n          <InputLabel id=\"select-label\">\n            { text.ru.chooseLevel }\n          </InputLabel>\n          <Select\n            labelId=\"select-label\"\n            id=\"simple-select\"\n            value={age}\n            onChange={handleChange}\n          >\n            {menuItemList.map((value, key) => (\n              <MenuItem value={key - 1} key={key}>{value}</MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n\n        <TextField\n          required\n          error={errorQuiz}\n          id=\"savannah-start__questions\"\n          label={ `${text.ru.howManyWords} (${count.savannah.minQuestions}—${count.savannah.maxQuestions})` }\n          variant=\"filled\"\n          onChange={onTotalQuizUpdate}\n          style={{ margin: '20px 0' }}\n          value={ getAverageNumber(count.savannah.minQuestions, count.savannah.maxQuestions) }\n        />\n        <TextField\n          required\n          error={errorAnswer}\n          id=\"savannah-start__answers\"\n          label={ `${text.ru.howManyAnswers} (${count.savannah.minAnswers}—${count.savannah.maxAnswers})` }\n          inputProps={{ pattern: '[2-5]' }}\n          variant=\"filled\"\n          onChange={handleTotalAnswer}\n          style={{ marginBottom: 20 }}\n          value={ getAverageNumber(count.savannah.minAnswers, count.savannah.maxAnswers) }\n        />\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.button}\n          startIcon={<PlayCircleOutlineIcon />}\n          style={{ background: 'rgba(130, 115, 228, 1)' }}\n        >\n          { text.ru.button.startGame }\n      </Button>\n      </form >\n    </div >);\n};\n\nStartPage.propTypes = {\n  onTotalQuizUpdate: PropTypes.func,\n  onSubmitForm: PropTypes.func,\n  handleCurrentGroup: PropTypes.func,\n  handleTotalAnswer: PropTypes.func,\n  totalAnswers: PropTypes.number,\n  totalQuestions: PropTypes.number,\n};\n\nStartPage.defaultProps = {\n  onTotalQuizUpdate: () => { },\n  onSubmitForm: () => { },\n  handleCurrentGroup: () => { },\n  handleTotalAnswer: () => { },\n  totalAnswers: 0,\n  totalQuestions: 0,\n};\n\nexport default StartPage;\n","import StartPage from './StartPage.jsx';\n\nexport default StartPage;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport VolumeDownIcon from '@material-ui/icons/VolumeDown';\n\nimport {\n  playAudio,\n  getFilePath,\n} from '../../../../../../helpers/functions';\n\nimport classes from './ResultItem.module.scss';\n\nconst ResultItem = ({\n  word, key, translate, audio,\n}) => (\n    <div className={classes.Item} key={key}>\n      <IconButton onClick={() => playAudio(getFilePath(audio))}>\n        <VolumeDownIcon className={classes.VolumeDownIcon} />\n      </IconButton>\n      <span className={classes.Word}>{word}</span>\n      <span className={classes.Translate}>{`-${translate}`}</span>\n    </div>);\n\nResultItem.propTypes = {\n  word: PropTypes.string,\n  key: PropTypes.number,\n  translate: PropTypes.string,\n  audio: PropTypes.string,\n};\n\nResultItem.defaultProps = {\n  word: '',\n  key: 0,\n  translate: '',\n  audio: '',\n};\n\nexport default ResultItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ResultItem from './ResultItem/ResultItem.jsx';\n\nimport classes from './ResultList.module.scss';\n\nconst ResultList = ({ result, resultTitle, status }) => {\n  const {\n    words, translate, total, audio,\n  } = result;\n  const cls = [classes.Total];\n  cls.push(classes[status]);\n  return (\n    <div className={classes.Wrapper}>\n      <div className={classes.Title}>\n        {resultTitle}\n        <span className={cls.join(' ')}>{total}</span>\n      </div>\n      <div className={classes.Content}>\n        {words.map((word, key) => (\n          <ResultItem\n            key={key}\n            word={word}\n            translate={translate[key]}\n            result={result}\n            audio={audio[key]}\n          />\n        ))}\n\n      </div>\n    </div>\n  );\n};\n\nResultList.propTypes = {\n  result: PropTypes.object,\n  resultTitle: PropTypes.string,\n  status: PropTypes.string,\n};\n\nResultList.defaultProps = {\n  result: {\n    total: 0,\n    words: [],\n    translate: [],\n    audio: [],\n  },\n  resultTitle: '',\n  status: '',\n};\n\nexport default ResultList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ResultList from './ResultList/ResultList.jsx';\nimport classes from './FinishPage.module.scss';\n\nconst FinishPage = ({\n  complete, mistake, resultTitle, status,\n}) => (\n    <div className={classes.FinishPage}>\n      <div className={classes.finishWrapper}>\n        <ResultList\n          result={mistake}\n          resultTitle={resultTitle.error}\n          status={status.error}\n        />\n        <hr />\n        <ResultList\n          result={complete}\n          resultTitle={resultTitle.success}\n          status={status.success}\n        />\n        <div className={classes.completeWrapper}></div>\n      </div>\n    </div>);\n\nFinishPage.propTypes = {\n  status: PropTypes.array,\n  resultTitle: PropTypes.array,\n  complete: PropTypes.object,\n  mistake: PropTypes.object,\n};\n\nFinishPage.defaultProps = {\n  status: {},\n  resultTitle: [],\n  complete: {\n    total: 0,\n    words: [],\n    translate: [],\n  },\n  mistake: {\n    total: 0,\n    words: [],\n    translate: [],\n  },\n};\n\nexport default FinishPage;\n","import FinishPage from './FInishPage.jsx';\n\nexport default FinishPage;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport classes from './AnswerItem.module.scss';\n\nclass AnswerItem extends Component {\n  componentDidMount() {\n    document.addEventListener('keyup', this.props.keyPressed);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keyup', this.props.keyPressed);\n  }\n\n  render() {\n    const {\n      id, guessedWords, trueAnswer, state, value,\n    } = this.props;\n    const cls = [classes.AnswerItem];\n    if (state) {\n      cls.push(classes[state]);\n    }\n    if (trueAnswer) {\n      cls.push(classes[trueAnswer]);\n    }\n\n    return (\n      <span\n        className={cls.join(' ')}\n        id={id}\n        onClick={guessedWords}\n        key={id}\n      >\n        {value}\n      </span>\n    );\n  }\n}\n\nAnswerItem.propTypes = {\n  id: PropTypes.string,\n  guessedWords: PropTypes.func,\n  trueAnswer: PropTypes.string,\n  state: PropTypes.string,\n  value: PropTypes.string,\n  keyPressed: PropTypes.func,\n};\n\nAnswerItem.defaultProps = {\n  id: '',\n  guessedWords: () => { },\n  trueAnswer: '',\n  state: '',\n  value: '',\n  keyPressed: () => { },\n};\n\nexport default AnswerItem;\n","import AnswerItem from './AnswerItem.jsx';\n\nexport default AnswerItem;\n","import AnswerList from './AnswerList.jsx';\n\nexport default AnswerList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport AnswerItem from './AnswerItem';\n\nimport classes from './AnswerList.module.scss';\n\nconst AnswerList = ({\n  translateWords, id, guessedWords, state, keyPressed,\n}) => {\n  const trueNumberAnswer = state ? Object.keys(state[1])[0] : null;\n\n  return (\n    <div className={classes.words}>\n\n      {translateWords.map((value, key) => (\n        <AnswerItem\n          key={key}\n          id={id[key]}\n          guessedWords={guessedWords}\n          value={`${key + 1} ${value}`}\n          state={state ? state[0][id[key]] : null}\n          trueAnswer={state && key === +trueNumberAnswer ? state[1][trueNumberAnswer] : null}\n          keyPressed={keyPressed}\n        />\n      ))\n      }\n    </div >\n  );\n};\n\nAnswerList.propTypes = {\n  translateWords: PropTypes.array,\n  id: PropTypes.array,\n  guessedWords: PropTypes.func,\n  state: PropTypes.array,\n  keyPressed: PropTypes.func,\n};\n\nexport default AnswerList;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport styled, { keyframes } from 'styled-components';\nimport { zoomInLeft } from 'react-animations';\n\nimport AnswerList from './AnswerList';\n\nimport classes from './ActiveQuiz.module.scss';\n\nconst Zoom = styled.div`animation: 2s ${keyframes`${zoomInLeft}`}`;\n\nclass ActiveQuiz extends Component {\n  componentDidUpdate() {\n    if (this.props.timer === 6) this.props.onDefault();\n  }\n\n  componentDidMount() {\n    this.props.onTimeOut();\n  }\n\n  render() {\n    const {\n      guessedWords, translateWords, id, state, activeQuestion, keyPressed,\n    } = this.props;\n    return (\n      <div className={classes.ActiveQuiz}>\n        <AnswerList\n          guessedWords={guessedWords}\n          translateWords={translateWords}\n          id={id}\n          state={state}\n          keyPressed={keyPressed}\n        />\n        {\n          (!state && translateWords)\n          && (<Zoom>\n            <div className={classes.Question}>\n              {activeQuestion}\n            </div>\n          </Zoom>)\n        }\n      </div>);\n  }\n}\n\nActiveQuiz.propTypes = {\n  guessedWords: PropTypes.func,\n  translateWords: PropTypes.array,\n  id: PropTypes.array,\n  state: PropTypes.array,\n  activeQuestion: PropTypes.string,\n  keyPressed: PropTypes.func,\n  timer: PropTypes.number,\n  onDefault: PropTypes.func,\n  onTimeOut: PropTypes.func,\n};\n\nActiveQuiz.defaultProps = {\n  guessedWords: () => { },\n  translateWords: [],\n  id: [],\n  state: null,\n  activeQuestion: '',\n  keyPressed: () => { },\n  timer: 0,\n  onDefault: () => { },\n  onTimeOut: () => { },\n};\n\nexport default ActiveQuiz;\n","import ActiveQuiz from './ActiveQuiz.jsx';\n\nexport default ActiveQuiz;\n","import React, { Component } from 'react';\nimport Header from './components/Header';\nimport StartPage from './components/StartPage';\nimport FinishPage from './components/FinishPage';\nimport ActiveQuiz from './components/ActiveQuiz';\n\nimport {\n  questionStatus,\n  text,\n  soundFinish, soundSuccess, soundError,\n} from '../../helpers/constants';\n\nimport {\n  countQuestionsSets,\n  getRandomNumber,\n  playAudio,\n} from '../../helpers/functions';\n\nimport { getWordsByAmount } from '../../helpers/wordsService/wordsApi';\n\nimport classes from './Savannah.module.scss';\n\nconst initialState = {\n  timer: 0,\n  activeQuestion: '',\n  activeCard: 0,\n  audio: [],\n  answerState: null,\n  currentGroup: null,\n  counter: 1,\n  changeGroup: false,\n  idWords: [],\n  isFinished: false,\n  isStarted: false,\n  totalAnswers: 2,\n  totalQuestions: 5,\n  translateWords: [],\n  volume: true,\n  heartCount: 5,\n  keyPressed: null,\n  words: [],\n  mistake: {\n    total: 0,\n    words: [],\n    translate: [],\n    audio: [],\n  },\n  complete: {\n    total: 0,\n    words: [],\n    translate: [],\n    audio: [],\n  },\n};\n\nclass Savannah extends Component {\n  status = questionStatus;\n\n  resultTitle = {\n    success: text.ru.answersCorrect,\n    error: text.ru.answersMistaken,\n  };\n\n  state = initialState\n\n  updateState = async (group, totalAnswers) => {\n    const words = [];\n    const translateWords = [];\n    const idWords = [];\n    const answerState = null;\n    const audio = [];\n    try {\n      const allCards = await getWordsByAmount(group, totalAnswers);\n\n      allCards.forEach((card) => {\n        words.push(card.word);\n        translateWords.push(card.wordTranslate);\n        idWords.push(card.id);\n        audio.push(card.audio);\n      });\n      const activeCard = getRandomNumber(0, allCards.length - 1);\n      const activeQuestion = allCards[activeCard].word;\n\n      this.setState({\n        words, translateWords, idWords, answerState, activeCard, activeQuestion, audio\n        ,\n      });\n    } catch (e) {\n      console.log(e);\n      // TODO handle error for showing user\n    }\n  }\n\n  onTotalQuizUpdate = (e) => {\n    this.setState({ totalQuestions: +e.target.value });\n  }\n\n  guessedWords = (currentAnswer, error, success) => {\n    this.setState({\n      answerState: [\n        { [currentAnswer]: error },\n        { [this.state.activeCard]: success },\n      ],\n    });\n  }\n\n  handleHeart = () => {\n    this.setState(({ heartCount }) => ({\n      heartCount: heartCount - 1,\n    }));\n  }\n\n  updateCounter = () => {\n    this.setState(({ counter }) => ({\n      counter: counter + 1,\n    }));\n  }\n\n  handleVolume = () => {\n    this.setState(({ volume }) => ({\n      volume: !volume,\n    }));\n  }\n\n  handleClose = () => {\n    this.setState({ isFinished: true });\n    this.playAudio(soundFinish);\n  }\n\n  playAudio = (path) => this.state.volume && playAudio(path);\n\n  resultCurrentQuiz = (value) => {\n    const {\n      words, translate, total, audio,\n    } = this.state[value];\n    translate.push(this.state.translateWords[this.state.activeCard]);\n    audio.push(this.state.audio[this.state.activeCard]);\n    words.push(this.state.activeQuestion);\n    this.setState({\n      [value]: {\n        total: total + 1,\n        words: [...words],\n        translate: [...translate],\n        audio: [...translate],\n      },\n    });\n  }\n\n  handleCurrentGroup = (event) => {\n    if (event.target.value === -1) {\n      this.setState({ changeGroup: true, currentGroup: 0 });\n    } else {\n      this.setState({ currentGroup: event.target.value, changeGroup: false });\n    }\n  }\n\n  handleTotalAnswer = (e) => {\n    this.setState({ totalAnswers: Number(e.target.value) });\n  }\n\n  onClickHandler = () => {\n    if (this.state.currentGroup !== null) {\n      this.setState({ isStarted: true });\n    }\n    this.updateState(this.state.currentGroup, this.state.totalAnswers);\n  }\n\n  onTimeOut = () => {\n    setInterval(() => {\n      this.setState(({ timer }) => ({\n        timer: timer + 1,\n      }));\n    }, 1000);\n  }\n\n  gameStatus = (idWordPressed = 'default') => {\n    if (this.state.heartCount === 1 || this.state.counter === +this.state.totalQuestions) {\n      setTimeout(() => {\n        this.handleClose();\n      }, 800);\n    } else if (idWordPressed) {\n      setTimeout(() => {\n        this.updateState(this.state.currentGroup, this.state.totalAnswers);\n      }, 500);\n      this.updateCounter();\n    }\n  }\n\n  onChangeGroupwords = () => {\n    if (this.state.counter !== 0 && this.state.counter\n      % countQuestionsSets(this.state.totalQuestions) === 0 && this.state.changeGroup) {\n      this.setState(({ currentGroup }) => ({ currentGroup: currentGroup + 1 }));\n    }\n  }\n\n  onCorrectAnswer = (idWordPressed) => {\n    if (idWordPressed === this.state.idWords[this.state.activeCard]) {\n      this.resultCurrentQuiz('complete');\n      this.guessedWords(idWordPressed, null, 'success');\n      this.playAudio(soundSuccess);\n    } else {\n      this.resultCurrentQuiz('mistake');\n      this.handleHeart();\n      this.playAudio(soundError);\n      this.guessedWords(idWordPressed, (!idWordPressed ? null : 'error'), 'success');\n    }\n  }\n\n  onAnswerClickHandler = (e) => {\n    const keys = this.state.words;\n\n    e.preventDefault();\n    const { idWords, answerState } = this.state;\n    this.setState({ timer: 0 });\n    const idWordPressed = e.target.id || idWords[Number(e.key) - 1];\n\n    if (answerState) {\n      const key = Object.keys(answerState)[0];\n      if (answerState[key] === this.status.error || this.status.success) {\n        return;\n      }\n    }\n\n    keys.forEach((value, key) => {\n      if (Number(e.key) === key + 1) {\n        this.gameStatus(idWordPressed);\n        this.onChangeGroupwords();\n        this.onCorrectAnswer(idWordPressed);\n      }\n    });\n\n    if (e.target.id) {\n      this.gameStatus(idWordPressed);\n      this.onChangeGroupwords();\n      this.onCorrectAnswer(idWordPressed);\n    }\n  }\n\n  onDefault = () => {\n    this.gameStatus();\n    this.onChangeGroupwords();\n    this.onCorrectAnswer();\n    this.setState({ timer: 0 });\n  }\n\n  render() {\n    const {\n      heartCount, volume, complete, mistake, translateWords, idWords, timer,\n      answerState, activeQuestion, isStarted, isFinished, audio, totalAnswers,\n      totalQuestions,\n    } = this.state;\n\n    let page;\n    if (!isStarted) {\n      page = < StartPage\n        onTotalQuizUpdate={this.onTotalQuizUpdate}\n        onSubmitForm={this.onClickHandler}\n        handleCurrentGroup={this.handleCurrentGroup}\n        handleTotalAnswer={this.handleTotalAnswer}\n        totalAnswers={totalAnswers}\n        totalQuestions={totalQuestions}\n      />;\n    } else if (isStarted && isFinished) {\n      page = <FinishPage\n        complete={complete}\n        mistake={mistake}\n        resultTitle={this.resultTitle}\n        status={this.status}\n        pathAudio={audio}\n      />;\n    } else if (isStarted && !isFinished) {\n      page = <div>\n        <Header\n          volume={volume}\n          heartCount={heartCount}\n          handleVolume={this.handleVolume}\n          mistakeTotal={mistake.total}\n          handleClose={this.handleClose}\n        />\n        <ActiveQuiz\n          guessedWords={this.onAnswerClickHandler}\n          translateWords={translateWords}\n          id={idWords}\n          state={answerState}\n          activeQuestion={activeQuestion}\n          isStarted={isStarted}\n          keyPressed={this.onAnswerClickHandler}\n          timer={timer}\n          onTimeOut={this.onTimeOut}\n          onDefault={this.onDefault}\n          updateState={this.updateState}\n        />\n      </div>;\n    }\n\n    return (\n      <div className={classes.Savannah}>\n        <div className={classes.Container}>\n          {page}\n        </div>\n      </div>\n    );\n  }\n}\nexport default Savannah;\n","import Savannah from './Savannah.jsx';\n\nexport default Savannah;\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport AboutUsPage from '../pages/AboutUs';\nimport LearnWords from '../pages/LearnWords';\nimport SettingsPage from '../pages/Settings';\nimport StatisticPage from '../pages/Statistics';\nimport PromoPage from '../pages/Promo';\nimport PlayGamesPage from '../pages/PlayGames';\nimport VocabularyPage from '../pages/Vocabulary';\nimport SignInPage from '../pages/SignIn';\nimport SignUpPage from '../pages/SignUp';\nimport AudioCallGame from '../AudioCallGame';\nimport SprintGame from '../Sprint';\nimport SavannahGame from '../Savannah';\n\nimport { gamesData, pagesData } from '../../helpers/constants';\nimport { getPath } from '../../helpers/functions';\n\nconst {\n  learnWords, settings, statistics, vocabulary,\n  aboutUs, promo, play, signIn, register,\n} = pagesData;\n\nconst {\n  audiocall, sprint, savannah,\n  // unmess, englishPuzzle, speakit,\n} = gamesData;\n\nconst Main = () => (\n  <main className=\"main\">\n    <Switch>\n      <Route path={getPath(learnWords.path)} component={LearnWords} />\n      <Route path={getPath(settings.path)} component={SettingsPage} />\n      <Route path={getPath(statistics.path)} component={StatisticPage} />\n      <Route path={getPath(aboutUs.path)} component={AboutUsPage} />\n      <Route exact path={getPath() || getPath(promo.path)} component={PromoPage} />\n      <Route path={getPath(play.path)} component={PlayGamesPage} />\n      <Route path={getPath(vocabulary.path)} component={VocabularyPage} />\n      <Route path={getPath(signIn.path)} component={SignInPage} />\n      <Route path={getPath(register.path)} component={SignUpPage} />\n      <Route path={getPath(audiocall.path)} component={AudioCallGame} />\n      <Route path={getPath(sprint.path)} component={SprintGame} />\n      <Route path={getPath(savannah.path)} component={SavannahGame} />\n      {/*<Route path={getPath(unmess.path)} component={UnmessGame} />*/}\n      {/*<Route path={getPath(speakit.path)} component={SpeakitGame} />*/}\n      {/*<Route path={getPath(englishPuzzle.path)} component={EnglishPuzzleGame} />*/}\n    </Switch>\n  </main>\n);\n\nexport default Main;\n","import Main from './Main.jsx';\n\nexport default Main;\n","import { AUTH_LOGOUT, AUTH_SUCCESS } from '../actions/actionsTypes';\n\nconst initialState = {\n  name: null,\n  userId: null,\n  token: null,\n};\n\nexport default function authReducer(state = initialState, action) {\n  switch (action.type) {\n    case AUTH_SUCCESS:\n      return {\n        ...state,\n        name: action.name,\n        userId: action.userId,\n        token: action.token,\n      };\n    case AUTH_LOGOUT:\n      return { ...state, ...initialState };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport authReducer from './auth';\n\nexport default combineReducers({\n  auth: authReducer,\n});\n","import { createStore, compose, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers/rootReducer';\n\nconst composeEnhancers = typeof window === 'object'\n  && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n  ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n  }) : compose;\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(\n    applyMiddleware(thunk),\n  ),\n);\n\nexport default store;\n","import React from 'react';\nimport './App.scss';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\n\nimport Header from './components/Header';\nimport Main from './components/Main';\nimport store from './redux/store';\n\nconst App = () => (\n  <Provider store={store}>\n    <Router>\n      <div className=\"App\">\n        <Header />\n        <Main />\n      </div>\n    </Router>\n  </Provider>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    || window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service '\n              + 'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all '\n                  + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404\n        || (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root'),\n);\n\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/avatar.e0cdb196.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"iconButton\":\"QuestionView_iconButton__qyJf0\",\"volumeUpRounded\":\"QuestionView_volumeUpRounded__2WQS_\",\"picture\":\"QuestionView_picture__2ZdD-\",\"hidden\":\"QuestionView_hidden__2XxPX\",\"container\":\"QuestionView_container__tC3A4\",\"description\":\"QuestionView_description__2mhkr\",\"word\":\"QuestionView_word__nCUPl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FinishGamePageView_container__5ttAY\",\"title\":\"FinishGamePageView_title__1ExX5\",\"right\":\"FinishGamePageView_right__pyEpY\",\"wrong\":\"FinishGamePageView_wrong__2py0K\",\"button\":\"FinishGamePageView_button__2y0RY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"StartGamePageView_container__9A5N-\",\"title\":\"StartGamePageView_title__2wnYq\",\"text\":\"StartGamePageView_text__2gKuM\",\"form\":\"StartGamePageView_form__2Q2bA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"Header_Header__2esZG\",\"CloseButton\":\"Header_CloseButton__3eAzX\",\"Icon\":\"Header_Icon__2Aml1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ResultList\":\"ResultList_ResultList__o0OH1\",\"mistakeTitle\":\"ResultList_mistakeTitle__mpfVD\",\"Total\":\"ResultList_Total__2fDJ8\",\"error\":\"ResultList_error__3hDEN\",\"success\":\"ResultList_success__zNF7Z\",\"Title\":\"ResultList_Title__2Lb_S\",\"Content\":\"ResultList_Content__mcD5k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"AnswerView_item__lWTze\",\"disable\":\"AnswerView_disable__3oT3S\",\"right\":\"AnswerView_right__23vE2\",\"wrong\":\"AnswerView_wrong__LKzBm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"StartPage\":\"StartPage_StartPage__yeIKM\",\"titleName\":\"StartPage_titleName__3c17c\",\"form\":\"StartPage_form__1oxCB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"VolumeDownIcon\":\"ResultItem_VolumeDownIcon__bKwbo\",\"Translate\":\"ResultItem_Translate__2zNOW\",\"Item\":\"ResultItem_Item__3HAA0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FinishPage\":\"FinishPage_FinishPage__3R2ZC\",\"finishWrapper\":\"FinishPage_finishWrapper__3L1YI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AnswerItem\":\"AnswerItem_AnswerItem__1RCh_\",\"success\":\"AnswerItem_success__1_eur\",\"error\":\"AnswerItem_error__ihJao\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FinishGameItemView_container__21EMF\",\"text\":\"FinishGameItemView_text__2tGxB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ActiveQuiz\":\"ActiveQuiz_ActiveQuiz__1ffGv\",\"Question\":\"ActiveQuiz_Question__1VvaH\",\"rotate\":\"ActiveQuiz_rotate__hICsB\"};"],"sourceRoot":""}